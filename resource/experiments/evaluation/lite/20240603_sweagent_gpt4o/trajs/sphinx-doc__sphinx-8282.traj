{
  "environment": "swe_main",
  "trajectory": [
    {
      "action": "create reproduce.py\n",
      "observation": "[File: /sphinx-doc__sphinx/reproduce.py (1 lines total)]\n1:\n",
      "response": "First, let's create a new file called `reproduce.py` to replicate the issue using the provided example code. This will help us understand the problem better.\n\n```\ncreate reproduce.py\n```",
      "state": "{\"open_file\": \"n/a\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "First, let's create a new file called `reproduce.py` to replicate the issue using the provided example code. This will help us understand the problem better.\n\n"
    },
    {
      "action": "edit 1:1\n# in conf.py\nautodoc_typehints = 'none'\n\n# in index.rst\n\"\"\"\n.. automodule:: example\n   :members:\n   :undoc-members:\n\"\"\"\n\n# in example.py\nfrom typing import overload\n\n@overload\ndef foo(x: int) -> int:\n    ...\n\n@overload\ndef foo(x: float) -> float:\n    ...\n\ndef foo(x):\n    return x\n\nprint(\"Script completed successfully, no errors.\")\nend_of_edit\n",
      "observation": "[File: /sphinx-doc__sphinx/reproduce.py (25 lines total)]\n1:# in conf.py\n2:autodoc_typehints = 'none'\n3:\n4:# in index.rst\n5:\"\"\"\n6:.. automodule:: example\n7:   :members:\n8:   :undoc-members:\n9:\"\"\"\n10:\n11:# in example.py\n12:from typing import overload\n13:\n14:@overload\n15:def foo(x: int) -> int:\n16:    ...\n17:\n18:@overload\n19:def foo(x: float) -> float:\n20:    ...\n21:\n22:def foo(x):\n23:    return x\n24:\n25:print(\"Script completed successfully, no errors.\")\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.\n",
      "response": "Now let's paste in the example code from the issue into `reproduce.py`.\n\n```\nedit 1:1\n# in conf.py\nautodoc_typehints = 'none'\n\n# in index.rst\n\"\"\"\n.. automodule:: example\n   :members:\n   :undoc-members:\n\"\"\"\n\n# in example.py\nfrom typing import overload\n\n@overload\ndef foo(x: int) -> int:\n    ...\n\n@overload\ndef foo(x: float) -> float:\n    ...\n\ndef foo(x):\n    return x\n\nprint(\"Script completed successfully, no errors.\")\nend_of_edit\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/reproduce.py\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "Now let's paste in the example code from the issue into `reproduce.py`.\n\n"
    },
    {
      "action": "python reproduce.py\n",
      "observation": "Script completed successfully, no errors.\n",
      "response": "The reproduction script has been created. Now let's run the script to see if it replicates the issue.\n\n```\npython reproduce.py\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/reproduce.py\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "The reproduction script has been created. Now let's run the script to see if it replicates the issue.\n\n"
    },
    {
      "action": "search_dir \"autodoc_typehints\"\n",
      "observation": "Found 22 matches for \"autodoc_typehints\" in /sphinx-doc__sphinx:\n/sphinx-doc__sphinx/CHANGES (7 matches)\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst (1 matches)\n/sphinx-doc__sphinx/reproduce.py (1 matches)\n/sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py (4 matches)\n/sphinx-doc__sphinx/sphinx/ext/autodoc/typehints.py (1 matches)\n/sphinx-doc__sphinx/tests/test_ext_autodoc_configs.py (8 matches)\nEnd of matches for \"autodoc_typehints\" in /sphinx-doc__sphinx\n",
      "response": "The script ran successfully, but it didn't provide any output related to the issue. This is expected since the issue is related to Sphinx documentation generation, not runtime behavior.\n\nNext, we need to investigate how `autodoc_typehints` is handled in the Sphinx codebase. Let's search for `autodoc_typehints` in the repository to find relevant code.\n\n```\nsearch_dir \"autodoc_typehints\"\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/reproduce.py\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "The script ran successfully, but it didn't provide any output related to the issue. This is expected since the issue is related to Sphinx documentation generation, not runtime behavior.\n\nNext, we need to investigate how `autodoc_typehints` is handled in the Sphinx codebase. Let's search for `autodoc_typehints` in the repository to find relevant code.\n\n"
    },
    {
      "action": "open sphinx/ext/autodoc/__init__.py\n",
      "observation": "[File: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py (2283 lines total)]\n1:\"\"\"\n2:    sphinx.ext.autodoc\n3:    ~~~~~~~~~~~~~~~~~~\n4:\n5:    Automatically insert docstrings for functions, classes or whole modules into\n6:    the doctree, thus avoiding duplication between docstrings and documentation\n7:    for those who like elaborate docstrings.\n8:\n9:    :copyright: Copyright 2007-2020 by the Sphinx team, see AUTHORS.\n10:    :license: BSD, see LICENSE for details.\n11:\"\"\"\n12:\n13:import importlib\n14:import re\n15:import warnings\n16:from inspect import Parameter, Signature\n17:from types import ModuleType\n18:from typing import (\n19:    Any, Callable, Dict, Iterator, List, Optional, Sequence, Set, Tuple, Type, TypeVar, Union\n20:)\n21:from typing import get_type_hints\n22:\n23:from docutils.statemachine import StringList\n24:\n25:import sphinx\n26:from sphinx.application import Sphinx\n27:from sphinx.config import Config, ENUM\n28:from sphinx.deprecation import RemovedInSphinx40Warning, RemovedInSphinx50Warning\n29:from sphinx.environment import BuildEnvironment\n30:from sphinx.ext.autodoc.importer import import_object, get_module_members, get_object_members\n31:from sphinx.ext.autodoc.mock import mock\n32:from sphinx.locale import _, __\n33:from sphinx.pycode import ModuleAnalyzer, PycodeError\n34:from sphinx.util import inspect\n35:from sphinx.util import logging\n36:from sphinx.util.docstrings import extract_metadata, prepare_docstring\n37:from sphinx.util.inspect import (\n38:    evaluate_signature, getdoc, object_description, safe_getattr, stringify_signature\n39:)\n40:from sphinx.util.typing import stringify as stringify_typehint\n41:\n42:if False:\n43:    # For type annotation\n44:    from typing import Type  # NOQA # for python3.5.1\n45:    from sphinx.ext.autodoc.directive import DocumenterBridge\n46:\n47:\n48:logger = logging.getLogger(__name__)\n49:\n50:\n51:# This type isn't exposed directly in any modules, but can be found\n52:# here in most Python versions\n53:MethodDescriptorType = type(type.__subclasses__)\n54:\n55:\n56:#: extended signature RE: with explicit module name separated by ::\n57:py_ext_sig_re = re.compile(\n58:    r'''^ ([\\w.]+::)?            # explicit module name\n59:          ([\\w.]+\\.)?            # module and/or class name(s)\n60:          (\\w+)  \\s*             # thing name\n61:          (?: \\((.*)\\)           # optional: arguments\n62:           (?:\\s* -> \\s* (.*))?  #           return annotation\n63:          )? $                   # and nothing more\n64:          ''', re.VERBOSE)\n65:special_member_re = re.compile(r'^__\\S+__$')\n66:\n67:\n68:def identity(x: Any) -> Any:\n69:    return x\n70:\n71:\n72:class _All:\n73:    \"\"\"A special value for :*-members: that matches to any member.\"\"\"\n74:\n75:    def __contains__(self, item: Any) -> bool:\n76:        return True\n77:\n78:\n79:class _Empty:\n80:    \"\"\"A special value for :exclude-members: that never matches to any member.\"\"\"\n81:\n82:    def __contains__(self, item: Any) -> bool:\n83:        return False\n84:\n85:\n86:ALL = _All()\n87:EMPTY = _Empty()\n88:UNINITIALIZED_ATTR = object()\n89:INSTANCEATTR = object()\n90:SLOTSATTR = object()\n91:\n92:\n93:def members_option(arg: Any) -> Union[object, List[str]]:\n94:    \"\"\"Used to convert the :members: option to auto directives.\"\"\"\n95:    if arg is None or arg is True:\n96:        return ALL\n97:    elif arg is False:\n98:        return None\n99:    else:\n100:        return [x.strip() for x in arg.split(',') if x.strip()]\n(2183 more lines below)\n",
      "response": "The `autodoc_typehints` setting is mentioned in several files, but the most relevant ones for our investigation are likely to be in the `sphinx/ext/autodoc` directory. Let's start by examining the `__init__.py` file in that directory.\n\n```\nopen sphinx/ext/autodoc/__init__.py\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/reproduce.py\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "The `autodoc_typehints` setting is mentioned in several files, but the most relevant ones for our investigation are likely to be in the `sphinx/ext/autodoc` directory. Let's start by examining the `__init__.py` file in that directory.\n\n"
    },
    {
      "action": "search_file \"autodoc_typehints\" sphinx/ext/autodoc/__init__.py\n",
      "observation": "Found 4 matches for \"autodoc_typehints\" in /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py:\nLine 1211:        if self.env.config.autodoc_typehints in ('none', 'description'):\nLine 1453:        if self.env.config.autodoc_typehints in ('none', 'description'):\nLine 1831:        if self.env.config.autodoc_typehints in ('none', 'description'):\nLine 2268:    app.add_config_value('autodoc_typehints', \"signature\", True,\nEnd of matches for \"autodoc_typehints\" in /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py\n",
      "response": "The `__init__.py` file is quite large. To narrow down our search, let's look for the specific occurrences of `autodoc_typehints` within this file. This will help us quickly locate the relevant sections of the code.\n\n```\nsearch_file \"autodoc_typehints\" sphinx/ext/autodoc/__init__.py\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "The `__init__.py` file is quite large. To narrow down our search, let's look for the specific occurrences of `autodoc_typehints` within this file. This will help us quickly locate the relevant sections of the code.\n\n"
    },
    {
      "action": "goto 1211\n",
      "observation": "[File: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py (2283 lines total)]\n(1195 more lines above)\n1196:class FunctionDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type: ignore\n1197:    \"\"\"\n1198:    Specialized Documenter subclass for functions.\n1199:    \"\"\"\n1200:    objtype = 'function'\n1201:    member_order = 30\n1202:\n1203:    @classmethod\n1204:    def can_document_member(cls, member: Any, membername: str, isattr: bool, parent: Any\n1205:                            ) -> bool:\n1206:        # supports functions, builtins and bound methods exported at the module level\n1207:        return (inspect.isfunction(member) or inspect.isbuiltin(member) or\n1208:                (inspect.isroutine(member) and isinstance(parent, ModuleDocumenter)))\n1209:\n1210:    def format_args(self, **kwargs: Any) -> str:\n1211:        if self.env.config.autodoc_typehints in ('none', 'description'):\n1212:            kwargs.setdefault('show_annotation', False)\n1213:\n1214:        try:\n1215:            self.env.app.emit('autodoc-before-process-signature', self.object, False)\n1216:            sig = inspect.signature(self.object, follow_wrapped=True,\n1217:                                    type_aliases=self.env.config.autodoc_type_aliases)\n1218:            args = stringify_signature(sig, **kwargs)\n1219:        except TypeError as exc:\n1220:            logger.warning(__(\"Failed to get a function signature for %s: %s\"),\n1221:                           self.fullname, exc)\n1222:            return None\n1223:        except ValueError:\n1224:            args = ''\n1225:\n1226:        if self.env.config.strip_signature_backslash:\n1227:            # escape backslashes for reST\n1228:            args = args.replace('\\\\', '\\\\\\\\')\n1229:        return args\n1230:\n1231:    def document_members(self, all_members: bool = False) -> None:\n1232:        pass\n1233:\n1234:    def add_directive_header(self, sig: str) -> None:\n1235:        sourcename = self.get_sourcename()\n1236:        super().add_directive_header(sig)\n1237:\n1238:        if inspect.iscoroutinefunction(self.object):\n1239:            self.add_line('   :async:', sourcename)\n1240:\n1241:    def format_signature(self, **kwargs: Any) -> str:\n1242:        sigs = []\n1243:        if self.analyzer and '.'.join(self.objpath) in self.analyzer.overloads:\n1244:            # Use signatures for overloaded functions instead of the implementation function.\n1245:            overloaded = True\n1246:        else:\n1247:            overloaded = False\n1248:            sig = super().format_signature(**kwargs)\n1249:            sigs.append(sig)\n1250:\n1251:        if inspect.is_singledispatch_function(self.object):\n1252:            # append signature of singledispatch'ed functions\n1253:            for typ, func in self.object.registry.items():\n1254:                if typ is object:\n1255:                    pass  # default implementation. skipped.\n1256:                else:\n1257:                    self.annotate_to_first_argument(func, typ)\n1258:\n1259:                    documenter = FunctionDocumenter(self.directive, '')\n1260:                    documenter.object = func\n1261:                    documenter.objpath = [None]\n1262:                    sigs.append(documenter.format_signature())\n1263:        if overloaded:\n1264:            __globals__ = safe_getattr(self.object, '__globals__', {})\n1265:            for overload in self.analyzer.overloads.get('.'.join(self.objpath)):\n1266:                overload = evaluate_signature(overload, __globals__,\n1267:                                              self.env.config.autodoc_type_aliases)\n1268:\n1269:                sig = stringify_signature(overload, **kwargs)\n1270:                sigs.append(sig)\n1271:\n1272:        return \"\\n\".join(sigs)\n1273:\n1274:    def annotate_to_first_argument(self, func: Callable, typ: Type) -> None:\n1275:        \"\"\"Annotate type hint to the first argument of function if needed.\"\"\"\n1276:        try:\n1277:            sig = inspect.signature(func, type_aliases=self.env.config.autodoc_type_aliases)\n1278:        except TypeError as exc:\n1279:            logger.warning(__(\"Failed to get a function signature for %s: %s\"),\n1280:                           self.fullname, exc)\n1281:            return\n1282:        except ValueError:\n1283:            return\n1284:\n1285:        if len(sig.parameters) == 0:\n1286:            return\n1287:\n1288:        params = list(sig.parameters.values())\n1289:        if params[0].annotation is Parameter.empty:\n1290:            params[0] = params[0].replace(annotation=typ)\n1291:            try:\n1292:                func.__signature__ = sig.replace(parameters=params)  # type: ignore\n1293:            except TypeError:\n1294:                # failed to update signature (ex. built-in or extension types)\n1295:                return\n(988 more lines below)\n",
      "response": "The `autodoc_typehints` setting is referenced at lines 1211, 1453, 1831, and 2268. Let's start by examining the first occurrence at line 1211 to understand how it is being used.\n\n```\ngoto 1211\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "The `autodoc_typehints` setting is referenced at lines 1211, 1453, 1831, and 2268. Let's start by examining the first occurrence at line 1211 to understand how it is being used.\n\n"
    },
    {
      "action": "goto 1453\n",
      "observation": "[File: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py (2283 lines total)]\n(1437 more lines above)\n1438:        # We don't know the exact method that inspect.signature will read\n1439:        # the signature from, so just pass the object itself to our hook.\n1440:        self.env.app.emit('autodoc-before-process-signature', self.object, False)\n1441:        try:\n1442:            sig = inspect.signature(self.object, bound_method=False,\n1443:                                    type_aliases=self.env.config.autodoc_type_aliases)\n1444:            return None, None, sig\n1445:        except ValueError:\n1446:            pass\n1447:\n1448:        # Still no signature: happens e.g. for old-style classes\n1449:        # with __init__ in C and no `__text_signature__`.\n1450:        return None, None, None\n1451:\n1452:    def format_args(self, **kwargs: Any) -> str:\n1453:        if self.env.config.autodoc_typehints in ('none', 'description'):\n1454:            kwargs.setdefault('show_annotation', False)\n1455:\n1456:        try:\n1457:            self._signature_class, self._signature_method_name, sig = self._get_signature()\n1458:        except TypeError as exc:\n1459:            # __signature__ attribute contained junk\n1460:            logger.warning(__(\"Failed to get a constructor signature for %s: %s\"),\n1461:                           self.fullname, exc)\n1462:            return None\n1463:\n1464:        if sig is None:\n1465:            return None\n1466:\n1467:        return stringify_signature(sig, show_return_annotation=False, **kwargs)\n1468:\n1469:    def format_signature(self, **kwargs: Any) -> str:\n1470:        if self.doc_as_attr:\n1471:            return ''\n1472:\n1473:        sig = super().format_signature()\n1474:        sigs = []\n1475:\n1476:        overloads = self.get_overloaded_signatures()\n1477:        if overloads:\n1478:            # Use signatures for overloaded methods instead of the implementation method.\n1479:            method = safe_getattr(self._signature_class, self._signature_method_name, None)\n1480:            __globals__ = safe_getattr(method, '__globals__', {})\n1481:            for overload in overloads:\n1482:                overload = evaluate_signature(overload, __globals__,\n1483:                                              self.env.config.autodoc_type_aliases)\n1484:\n1485:                parameters = list(overload.parameters.values())\n1486:                overload = overload.replace(parameters=parameters[1:],\n1487:                                            return_annotation=Parameter.empty)\n1488:                sig = stringify_signature(overload, **kwargs)\n1489:                sigs.append(sig)\n1490:        else:\n1491:            sigs.append(sig)\n1492:\n1493:        return \"\\n\".join(sigs)\n1494:\n1495:    def get_overloaded_signatures(self) -> List[Signature]:\n1496:        if self._signature_class and self._signature_method_name:\n1497:            for cls in self._signature_class.__mro__:\n1498:                try:\n1499:                    analyzer = ModuleAnalyzer.for_module(cls.__module__)\n1500:                    analyzer.parse()\n1501:                    qualname = '.'.join([cls.__qualname__, self._signature_method_name])\n1502:                    if qualname in analyzer.overloads:\n1503:                        return analyzer.overloads.get(qualname)\n1504:                except PycodeError:\n1505:                    pass\n1506:\n1507:        return []\n1508:\n1509:    def add_directive_header(self, sig: str) -> None:\n1510:        sourcename = self.get_sourcename()\n1511:\n1512:        if self.doc_as_attr:\n1513:            self.directivetype = 'attribute'\n1514:        super().add_directive_header(sig)\n1515:\n1516:        if self.analyzer and '.'.join(self.objpath) in self.analyzer.finals:\n1517:            self.add_line('   :final:', sourcename)\n1518:\n1519:        # add inheritance info, if wanted\n1520:        if not self.doc_as_attr and self.options.show_inheritance:\n1521:            sourcename = self.get_sourcename()\n1522:            self.add_line('', sourcename)\n1523:            if hasattr(self.object, '__bases__') and len(self.object.__bases__):\n1524:                bases = [':class:`%s`' % b.__name__\n1525:                         if b.__module__ in ('__builtin__', 'builtins')\n1526:                         else ':class:`%s.%s`' % (b.__module__, b.__qualname__)\n1527:                         for b in self.object.__bases__]\n1528:                self.add_line('   ' + _('Bases: %s') % ', '.join(bases),\n1529:                              sourcename)\n1530:\n1531:    def get_doc(self, encoding: str = None, ignore: int = None) -> List[List[str]]:\n1532:        if encoding is not None:\n1533:            warnings.warn(\"The 'encoding' argument to autodoc.%s.get_doc() is deprecated.\"\n1534:                          % self.__class__.__name__,\n1535:                          RemovedInSphinx40Warning, stacklevel=2)\n1536:        lines = getattr(self, '_new_docstrings', None)\n1537:        if lines is not None:\n(746 more lines below)\n",
      "response": "The `autodoc_typehints` setting is used here to determine whether type hints should be shown in the function signature. Specifically, if `autodoc_typehints` is set to `'none'` or `'description'`, the `show_annotation` flag is set to `False`.\n\nNext, let's examine the second occurrence at line 1453 to see if it provides additional context.\n\n```\ngoto 1453\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "The `autodoc_typehints` setting is used here to determine whether type hints should be shown in the function signature. Specifically, if `autodoc_typehints` is set to `'none'` or `'description'`, the `show_annotation` flag is set to `False`.\n\nNext, let's examine the second occurrence at line 1453 to see if it provides additional context.\n\n"
    },
    {
      "action": "goto 1831\n",
      "observation": "[File: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py (2283 lines total)]\n(1815 more lines above)\n1816:            return ret\n1817:\n1818:        # to distinguish classmethod/staticmethod\n1819:        obj = self.parent.__dict__.get(self.object_name)\n1820:        if obj is None:\n1821:            obj = self.object\n1822:\n1823:        if (inspect.isclassmethod(obj) or\n1824:                inspect.isstaticmethod(obj, cls=self.parent, name=self.object_name)):\n1825:            # document class and static members before ordinary ones\n1826:            self.member_order = self.member_order - 1\n1827:\n1828:        return ret\n1829:\n1830:    def format_args(self, **kwargs: Any) -> str:\n1831:        if self.env.config.autodoc_typehints in ('none', 'description'):\n1832:            kwargs.setdefault('show_annotation', False)\n1833:\n1834:        try:\n1835:            if self.object == object.__init__ and self.parent != object:\n1836:                # Classes not having own __init__() method are shown as no arguments.\n1837:                #\n1838:                # Note: The signature of object.__init__() is (self, /, *args, **kwargs).\n1839:                #       But it makes users confused.\n1840:                args = '()'\n1841:            else:\n1842:                if inspect.isstaticmethod(self.object, cls=self.parent, name=self.object_name):\n1843:                    self.env.app.emit('autodoc-before-process-signature', self.object, False)\n1844:                    sig = inspect.signature(self.object, bound_method=False,\n1845:                                            type_aliases=self.env.config.autodoc_type_aliases)\n1846:                else:\n1847:                    self.env.app.emit('autodoc-before-process-signature', self.object, True)\n1848:                    sig = inspect.signature(self.object, bound_method=True,\n1849:                                            follow_wrapped=True,\n1850:                                            type_aliases=self.env.config.autodoc_type_aliases)\n1851:                args = stringify_signature(sig, **kwargs)\n1852:        except TypeError as exc:\n1853:            logger.warning(__(\"Failed to get a method signature for %s: %s\"),\n1854:                           self.fullname, exc)\n1855:            return None\n1856:        except ValueError:\n1857:            args = ''\n1858:\n1859:        if self.env.config.strip_signature_backslash:\n1860:            # escape backslashes for reST\n1861:            args = args.replace('\\\\', '\\\\\\\\')\n1862:        return args\n1863:\n1864:    def add_directive_header(self, sig: str) -> None:\n1865:        super().add_directive_header(sig)\n1866:\n1867:        sourcename = self.get_sourcename()\n1868:        obj = self.parent.__dict__.get(self.object_name, self.object)\n1869:        if inspect.isabstractmethod(obj):\n1870:            self.add_line('   :abstractmethod:', sourcename)\n1871:        if inspect.iscoroutinefunction(obj):\n1872:            self.add_line('   :async:', sourcename)\n1873:        if inspect.isclassmethod(obj):\n1874:            self.add_line('   :classmethod:', sourcename)\n1875:        if inspect.isstaticmethod(obj, cls=self.parent, name=self.object_name):\n1876:            self.add_line('   :staticmethod:', sourcename)\n1877:        if self.analyzer and '.'.join(self.objpath) in self.analyzer.finals:\n1878:            self.add_line('   :final:', sourcename)\n1879:\n1880:    def document_members(self, all_members: bool = False) -> None:\n1881:        pass\n1882:\n1883:    def format_signature(self, **kwargs: Any) -> str:\n1884:        sigs = []\n1885:        if self.analyzer and '.'.join(self.objpath) in self.analyzer.overloads:\n1886:            # Use signatures for overloaded methods instead of the implementation method.\n1887:            overloaded = True\n1888:        else:\n1889:            overloaded = False\n1890:            sig = super().format_signature(**kwargs)\n1891:            sigs.append(sig)\n1892:\n1893:        meth = self.parent.__dict__.get(self.objpath[-1])\n1894:        if inspect.is_singledispatch_method(meth):\n1895:            # append signature of singledispatch'ed functions\n1896:            for typ, func in meth.dispatcher.registry.items():\n1897:                if typ is object:\n1898:                    pass  # default implementation. skipped.\n1899:                else:\n1900:                    self.annotate_to_first_argument(func, typ)\n1901:\n1902:                    documenter = MethodDocumenter(self.directive, '')\n1903:                    documenter.parent = self.parent\n1904:                    documenter.object = func\n1905:                    documenter.objpath = [None]\n1906:                    sigs.append(documenter.format_signature())\n1907:        if overloaded:\n1908:            __globals__ = safe_getattr(self.object, '__globals__', {})\n1909:            for overload in self.analyzer.overloads.get('.'.join(self.objpath)):\n1910:                overload = evaluate_signature(overload, __globals__,\n1911:                                              self.env.config.autodoc_type_aliases)\n1912:\n1913:                if not inspect.isstaticmethod(self.object, cls=self.parent,\n1914:                                              name=self.object_name):\n1915:                    parameters = list(overload.parameters.values())\n(368 more lines below)\n",
      "response": "The second occurrence of `autodoc_typehints` is similar to the first one, where it checks if the setting is `'none'` or `'description'` and sets `show_annotation` to `False`.\n\nNext, let's examine the third occurrence at line 1831 to see if it provides additional context.\n\n```\ngoto 1831\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "The second occurrence of `autodoc_typehints` is similar to the first one, where it checks if the setting is `'none'` or `'description'` and sets `show_annotation` to `False`.\n\nNext, let's examine the third occurrence at line 1831 to see if it provides additional context.\n\n"
    },
    {
      "action": "goto 2268\n",
      "observation": "[File: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py (2283 lines total)]\n(2183 more lines above)\n2184:        \"\"\"This documents only SLOTSATTR members.\"\"\"\n2185:        return member is SLOTSATTR\n2186:\n2187:    def import_object(self, raiseerror: bool = False) -> bool:\n2188:        \"\"\"Never import anything.\"\"\"\n2189:        # disguise as an attribute\n2190:        self.objtype = 'attribute'\n2191:        self._datadescriptor = True\n2192:\n2193:        with mock(self.env.config.autodoc_mock_imports):\n2194:            try:\n2195:                ret = import_object(self.modname, self.objpath[:-1], 'class',\n2196:                                    attrgetter=self.get_attr,\n2197:                                    warningiserror=self.env.config.autodoc_warningiserror)\n2198:                self.module, _, _, self.parent = ret\n2199:                return True\n2200:            except ImportError as exc:\n2201:                if raiseerror:\n2202:                    raise\n2203:                else:\n2204:                    logger.warning(exc.args[0], type='autodoc', subtype='import_object')\n2205:                    self.env.note_reread()\n2206:                    return False\n2207:\n2208:    def get_doc(self, encoding: str = None, ignore: int = None) -> List[List[str]]:\n2209:        \"\"\"Decode and return lines of the docstring(s) for the object.\"\"\"\n2210:        if ignore is not None:\n2211:            warnings.warn(\"The 'ignore' argument to autodoc.%s.get_doc() is deprecated.\"\n2212:                          % self.__class__.__name__,\n2213:                          RemovedInSphinx50Warning, stacklevel=2)\n2214:        name = self.objpath[-1]\n2215:        __slots__ = safe_getattr(self.parent, '__slots__', [])\n2216:        if isinstance(__slots__, dict) and isinstance(__slots__.get(name), str):\n2217:            docstring = prepare_docstring(__slots__[name])\n2218:            return [docstring]\n2219:        else:\n2220:            return []\n2221:\n2222:\n2223:def get_documenters(app: Sphinx) -> Dict[str, \"Type[Documenter]\"]:\n2224:    \"\"\"Returns registered Documenter classes\"\"\"\n2225:    warnings.warn(\"get_documenters() is deprecated.\", RemovedInSphinx50Warning, stacklevel=2)\n2226:    return app.registry.documenters\n2227:\n2228:\n2229:def autodoc_attrgetter(app: Sphinx, obj: Any, name: str, *defargs: Any) -> Any:\n2230:    \"\"\"Alternative getattr() for types\"\"\"\n2231:    for typ, func in app.registry.autodoc_attrgettrs.items():\n2232:        if isinstance(obj, typ):\n2233:            return func(obj, name, *defargs)\n2234:\n2235:    return safe_getattr(obj, name, *defargs)\n2236:\n2237:\n2238:def migrate_autodoc_member_order(app: Sphinx, config: Config) -> None:\n2239:    if config.autodoc_member_order == 'alphabetic':\n2240:        # RemovedInSphinx50Warning\n2241:        logger.warning(__('autodoc_member_order now accepts \"alphabetical\" '\n2242:                          'instead of \"alphabetic\". Please update your setting.'))\n2243:        config.autodoc_member_order = 'alphabetical'  # type: ignore\n2244:\n2245:\n2246:def setup(app: Sphinx) -> Dict[str, Any]:\n2247:    app.add_autodocumenter(ModuleDocumenter)\n2248:    app.add_autodocumenter(ClassDocumenter)\n2249:    app.add_autodocumenter(ExceptionDocumenter)\n2250:    app.add_autodocumenter(DataDocumenter)\n2251:    app.add_autodocumenter(DataDeclarationDocumenter)\n2252:    app.add_autodocumenter(GenericAliasDocumenter)\n2253:    app.add_autodocumenter(TypeVarDocumenter)\n2254:    app.add_autodocumenter(FunctionDocumenter)\n2255:    app.add_autodocumenter(DecoratorDocumenter)\n2256:    app.add_autodocumenter(MethodDocumenter)\n2257:    app.add_autodocumenter(AttributeDocumenter)\n2258:    app.add_autodocumenter(PropertyDocumenter)\n2259:    app.add_autodocumenter(InstanceAttributeDocumenter)\n2260:    app.add_autodocumenter(SlotsAttributeDocumenter)\n2261:\n2262:    app.add_config_value('autoclass_content', 'class', True, ENUM('both', 'class', 'init'))\n2263:    app.add_config_value('autodoc_member_order', 'alphabetical', True,\n2264:                         ENUM('alphabetic', 'alphabetical', 'bysource', 'groupwise'))\n2265:    app.add_config_value('autodoc_default_options', {}, True)\n2266:    app.add_config_value('autodoc_docstring_signature', True, True)\n2267:    app.add_config_value('autodoc_mock_imports', [], True)\n2268:    app.add_config_value('autodoc_typehints', \"signature\", True,\n2269:                         ENUM(\"signature\", \"description\", \"none\"))\n2270:    app.add_config_value('autodoc_type_aliases', {}, True)\n2271:    app.add_config_value('autodoc_warningiserror', True, True)\n2272:    app.add_config_value('autodoc_inherit_docstrings', True, True)\n2273:    app.add_event('autodoc-before-process-signature')\n2274:    app.add_event('autodoc-process-docstring')\n2275:    app.add_event('autodoc-process-signature')\n2276:    app.add_event('autodoc-skip-member')\n2277:\n2278:    app.connect('config-inited', migrate_autodoc_member_order, priority=800)\n2279:\n2280:    app.setup_extension('sphinx.ext.autodoc.type_comment')\n2281:    app.setup_extension('sphinx.ext.autodoc.typehints')\n2282:\n2283:    return {'version': sphinx.__display_version__, 'parallel_read_safe': True}\n",
      "response": "The third occurrence of `autodoc_typehints` is again similar to the previous ones, where it checks if the setting is `'none'` or `'description'` and sets `show_annotation` to `False`.\n\nFinally, let's examine the fourth occurrence at line 2268 to see if it provides additional context.\n\n```\ngoto 2268\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "The third occurrence of `autodoc_typehints` is again similar to the previous ones, where it checks if the setting is `'none'` or `'description'` and sets `show_annotation` to `False`.\n\nFinally, let's examine the fourth occurrence at line 2268 to see if it provides additional context.\n\n"
    },
    {
      "action": "edit 1269:1270\n                if self.env.config.autodoc_typehints in ('none', 'description'):\n                    kwargs.setdefault('show_annotation', False)\n                sig = stringify_signature(overload, **kwargs)\nend_of_edit\n",
      "observation": "[File: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py (2284 lines total)]\n(1218 more lines above)\n1219:        except TypeError as exc:\n1220:            logger.warning(__(\"Failed to get a function signature for %s: %s\"),\n1221:                           self.fullname, exc)\n1222:            return None\n1223:        except ValueError:\n1224:            args = ''\n1225:\n1226:        if self.env.config.strip_signature_backslash:\n1227:            # escape backslashes for reST\n1228:            args = args.replace('\\\\', '\\\\\\\\')\n1229:        return args\n1230:\n1231:    def document_members(self, all_members: bool = False) -> None:\n1232:        pass\n1233:\n1234:    def add_directive_header(self, sig: str) -> None:\n1235:        sourcename = self.get_sourcename()\n1236:        super().add_directive_header(sig)\n1237:\n1238:        if inspect.iscoroutinefunction(self.object):\n1239:            self.add_line('   :async:', sourcename)\n1240:\n1241:    def format_signature(self, **kwargs: Any) -> str:\n1242:        sigs = []\n1243:        if self.analyzer and '.'.join(self.objpath) in self.analyzer.overloads:\n1244:            # Use signatures for overloaded functions instead of the implementation function.\n1245:            overloaded = True\n1246:        else:\n1247:            overloaded = False\n1248:            sig = super().format_signature(**kwargs)\n1249:            sigs.append(sig)\n1250:\n1251:        if inspect.is_singledispatch_function(self.object):\n1252:            # append signature of singledispatch'ed functions\n1253:            for typ, func in self.object.registry.items():\n1254:                if typ is object:\n1255:                    pass  # default implementation. skipped.\n1256:                else:\n1257:                    self.annotate_to_first_argument(func, typ)\n1258:\n1259:                    documenter = FunctionDocumenter(self.directive, '')\n1260:                    documenter.object = func\n1261:                    documenter.objpath = [None]\n1262:                    sigs.append(documenter.format_signature())\n1263:        if overloaded:\n1264:            __globals__ = safe_getattr(self.object, '__globals__', {})\n1265:            for overload in self.analyzer.overloads.get('.'.join(self.objpath)):\n1266:                overload = evaluate_signature(overload, __globals__,\n1267:                                              self.env.config.autodoc_type_aliases)\n1268:\n1269:                if self.env.config.autodoc_typehints in ('none', 'description'):\n1270:                    kwargs.setdefault('show_annotation', False)\n1271:                sig = stringify_signature(overload, **kwargs)\n1272:\n1273:        return \"\\n\".join(sigs)\n1274:\n1275:    def annotate_to_first_argument(self, func: Callable, typ: Type) -> None:\n1276:        \"\"\"Annotate type hint to the first argument of function if needed.\"\"\"\n1277:        try:\n1278:            sig = inspect.signature(func, type_aliases=self.env.config.autodoc_type_aliases)\n1279:        except TypeError as exc:\n1280:            logger.warning(__(\"Failed to get a function signature for %s: %s\"),\n1281:                           self.fullname, exc)\n1282:            return\n1283:        except ValueError:\n1284:            return\n1285:\n1286:        if len(sig.parameters) == 0:\n1287:            return\n1288:\n1289:        params = list(sig.parameters.values())\n1290:        if params[0].annotation is Parameter.empty:\n1291:            params[0] = params[0].replace(annotation=typ)\n1292:            try:\n1293:                func.__signature__ = sig.replace(parameters=params)  # type: ignore\n1294:            except TypeError:\n1295:                # failed to update signature (ex. built-in or extension types)\n1296:                return\n1297:\n1298:\n1299:class SingledispatchFunctionDocumenter(FunctionDocumenter):\n1300:    \"\"\"\n1301:    Used to be a specialized Documenter subclass for singledispatch'ed functions.\n1302:\n1303:    Retained for backwards compatibility, now does the same as the FunctionDocumenter\n1304:    \"\"\"\n1305:\n1306:    def __init__(self, *args: Any, **kwargs: Any) -> None:\n1307:        warnings.warn(\"%s is deprecated.\" % self.__class__.__name__,\n1308:                      RemovedInSphinx50Warning, stacklevel=2)\n1309:        super().__init__(*args, **kwargs)\n1310:\n1311:\n1312:class DecoratorDocumenter(FunctionDocumenter):\n1313:    \"\"\"\n1314:    Specialized Documenter subclass for decorator functions.\n1315:    \"\"\"\n1316:    objtype = 'decorator'\n1317:\n1318:    # must be lower than FunctionDocumenter\n(966 more lines below)\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.\n",
      "response": "The fourth occurrence of `autodoc_typehints` is where the configuration value is added to the Sphinx application. This confirms that `autodoc_typehints` can be set to `\"signature\"`, `\"description\"`, or `\"none\"`.\n\nTo address the issue, we need to ensure that the `autodoc_typehints` setting is respected for overloaded callables. The relevant code for handling overloaded signatures is in the `format_signature` method of the `FunctionDocumenter` class.\n\nLet's edit the `format_signature` method to ensure that the `autodoc_typehints` setting is applied correctly for overloaded callables.\n\n```\nedit 1269:1270\n                if self.env.config.autodoc_typehints in ('none', 'description'):\n                    kwargs.setdefault('show_annotation', False)\n                sig = stringify_signature(overload, **kwargs)\nend_of_edit\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "The fourth occurrence of `autodoc_typehints` is where the configuration value is added to the Sphinx application. This confirms that `autodoc_typehints` can be set to `\"signature\"`, `\"description\"`, or `\"none\"`.\n\nTo address the issue, we need to ensure that the `autodoc_typehints` setting is respected for overloaded callables. The relevant code for handling overloaded signatures is in the `format_signature` method of the `FunctionDocumenter` class.\n\nLet's edit the `format_signature` method to ensure that the `autodoc_typehints` setting is applied correctly for overloaded callables.\n\n"
    },
    {
      "action": "create conf.py\n",
      "observation": "[File: /sphinx-doc__sphinx/conf.py (1 lines total)]\n1:\n",
      "response": "The code has been updated to ensure that the `autodoc_typehints` setting is respected for overloaded callables. Now, let's create a new Sphinx project to test if the changes work as expected. We'll create a `conf.py` and `index.rst` file as described in the issue, and then run Sphinx to generate the documentation.\n\nFirst, let's create the `conf.py` file.\n\n```\ncreate conf.py\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "The code has been updated to ensure that the `autodoc_typehints` setting is respected for overloaded callables. Now, let's create a new Sphinx project to test if the changes work as expected. We'll create a `conf.py` and `index.rst` file as described in the issue, and then run Sphinx to generate the documentation.\n\nFirst, let's create the `conf.py` file.\n\n"
    },
    {
      "action": "edit 1:1\n# Configuration file for the Sphinx documentation builder.\n\n# -- Project information -----------------------------------------------------\n\nproject = 'Example Project'\ncopyright = '2023, Example Author'\nauthor = 'Example Author'\n\n# -- General configuration ---------------------------------------------------\n\nextensions = ['sphinx.ext.autodoc']\n\n# The master toctree document.\nmaster_doc = 'index'\n\n# -- Options for autodoc -----------------------------------------------------\n\nautodoc_typehints = 'none'\nend_of_edit\n",
      "observation": "[File: /sphinx-doc__sphinx/conf.py (18 lines total)]\n1:# Configuration file for the Sphinx documentation builder.\n2:\n3:# -- Project information -----------------------------------------------------\n4:\n5:project = 'Example Project'\n6:copyright = '2023, Example Author'\n7:author = 'Example Author'\n8:\n9:# -- General configuration ---------------------------------------------------\n10:\n11:extensions = ['sphinx.ext.autodoc']\n12:\n13:# The master toctree document.\n14:master_doc = 'index'\n15:\n16:# -- Options for autodoc -----------------------------------------------------\n17:\n18:autodoc_typehints = 'none'\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.\n",
      "response": "Now let's add the configuration settings to `conf.py`.\n\n```\nedit 1:1\n# Configuration file for the Sphinx documentation builder.\n\n# -- Project information -----------------------------------------------------\n\nproject = 'Example Project'\ncopyright = '2023, Example Author'\nauthor = 'Example Author'\n\n# -- General configuration ---------------------------------------------------\n\nextensions = ['sphinx.ext.autodoc']\n\n# The master toctree document.\nmaster_doc = 'index'\n\n# -- Options for autodoc -----------------------------------------------------\n\nautodoc_typehints = 'none'\nend_of_edit\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/conf.py\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "Now let's add the configuration settings to `conf.py`.\n\n"
    },
    {
      "action": "create index.rst\n",
      "observation": "[File: /sphinx-doc__sphinx/index.rst (1 lines total)]\n1:\n",
      "response": "The `conf.py` file has been created. Now let's create the `index.rst` file to include the `example` module.\n\n```\ncreate index.rst\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/conf.py\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "The `conf.py` file has been created. Now let's create the `index.rst` file to include the `example` module.\n\n"
    },
    {
      "action": "edit 1:1\n.. Example Project documentation master file, created by\n   sphinx-quickstart on Thu Oct  7 13:00:00 2023.\n   You can adapt this file completely to your liking, but it should at least\n   contain the root `toctree` directive.\n\nWelcome to Example Project's documentation!\n============================================\n\n.. automodule:: example\n   :members:\n   :undoc-members:\nend_of_edit\n",
      "observation": "[File: /sphinx-doc__sphinx/index.rst (11 lines total)]\n1:.. Example Project documentation master file, created by\n2:   sphinx-quickstart on Thu Oct  7 13:00:00 2023.\n3:   You can adapt this file completely to your liking, but it should at least\n4:   contain the root `toctree` directive.\n5:\n6:Welcome to Example Project's documentation!\n7:============================================\n8:\n9:.. automodule:: example\n10:   :members:\n11:   :undoc-members:\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.\n",
      "response": "Now let's add the content to `index.rst` to include the `example` module.\n\n```\nedit 1:1\n.. Example Project documentation master file, created by\n   sphinx-quickstart on Thu Oct  7 13:00:00 2023.\n   You can adapt this file completely to your liking, but it should at least\n   contain the root `toctree` directive.\n\nWelcome to Example Project's documentation!\n============================================\n\n.. automodule:: example\n   :members:\n   :undoc-members:\nend_of_edit\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/index.rst\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "Now let's add the content to `index.rst` to include the `example` module.\n\n"
    },
    {
      "action": "create example.py\n",
      "observation": "[File: /sphinx-doc__sphinx/example.py (1 lines total)]\n1:\n",
      "response": "The `index.rst` file has been created. Now let's create the `example.py` file with the overloaded `foo` function as described in the issue.\n\n```\ncreate example.py\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/index.rst\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "The `index.rst` file has been created. Now let's create the `example.py` file with the overloaded `foo` function as described in the issue.\n\n"
    },
    {
      "action": "edit 1:1\nfrom typing import overload\n\n@overload\ndef foo(x: int) -> int:\n    ...\n\n@overload\ndef foo(x: float) -> float:\n    ...\n\ndef foo(x):\n    return x\nend_of_edit\n",
      "observation": "[File: /sphinx-doc__sphinx/example.py (12 lines total)]\n1:from typing import overload\n2:\n3:@overload\n4:def foo(x: int) -> int:\n5:    ...\n6:\n7:@overload\n8:def foo(x: float) -> float:\n9:    ...\n10:\n11:def foo(x):\n12:    return x\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.\n",
      "response": "Now let's add the overloaded `foo` function to `example.py`.\n\n```\nedit 1:1\nfrom typing import overload\n\n@overload\ndef foo(x: int) -> int:\n    ...\n\n@overload\ndef foo(x: float) -> float:\n    ...\n\ndef foo(x):\n    return x\nend_of_edit\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/example.py\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "Now let's add the overloaded `foo` function to `example.py`.\n\n"
    },
    {
      "action": "sphinx-build -b html . _build\n",
      "observation": "\nEXECUTION TIMED OUT",
      "response": "The `example.py` file has been created. Now let's run Sphinx to generate the documentation and see if the `autodoc_typehints` setting is respected for the overloaded `foo` function.\n\n```\nsphinx-build -b html . _build\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/example.py\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "The `example.py` file has been created. Now let's run Sphinx to generate the documentation and see if the `autodoc_typehints` setting is respected for the overloaded `foo` function.\n\n"
    },
    {
      "action": "sphinx-build -b html . _build -q\n",
      "observation": "WARNING: while setting up extension sphinx.addnodes: node class 'meta' is already registered, its visitors will be overridden\nWARNING: autodoc: failed to import method 'websupport.WebSupport.build' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.WebSupport.get_document' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.WebSupport.get_data' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.WebSupport.add_comment' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.WebSupport.process_vote' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.WebSupport.get_search_results' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.init_indexing' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.finish_indexing' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.feed' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.add_document' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.query' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.handle_query' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.extract_context' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.pre_build' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.add_node' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.post_build' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.add_comment' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.delete_comment' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.get_data' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.process_vote' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.update_username' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.accept_comment' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\n/sphinx-doc__sphinx/doc/usage/configuration.rst:64: WARNING: Unknown directive type \"confval\".\n\n.. confval:: project\n\n   The documented project's name.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:68: WARNING: Unknown directive type \"confval\".\n\n.. confval:: author\n\n   The author name(s) of the document.  The default value is ``'unknown'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:72: WARNING: Unknown directive type \"confval\".\n\n.. confval:: copyright\n\n   A copyright statement in the style ``'2008, Author Name'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:76: WARNING: Unknown directive type \"confval\".\n\n.. confval:: version\n\n   The major project version, used as the replacement for ``|version|``.  For\n   example, for the Python documentation, this may be something like ``2.6``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:81: WARNING: Unknown directive type \"confval\".\n\n.. confval:: release\n\n   The full project version, used as the replacement for ``|release|`` and\n   e.g. in the HTML templates.  For example, for the Python documentation, this\n   may be something like ``2.6.0rc1``.\n\n   If you don't need the separation provided between :confval:`version` and\n   :confval:`release`, just set them both to the same value.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:94: WARNING: Unknown directive type \"confval\".\n\n.. confval:: extensions\n\n   A list of strings that are module names of :doc:`extensions\n   <extensions/index>`. These can be extensions coming with Sphinx (named\n   ``sphinx.ext.*``) or custom ones.\n\n   Note that you can extend :data:`sys.path` within the conf file if your\n   extensions live in another directory -- but make sure you use absolute paths.\n   If your extension path is relative to the :term:`configuration directory`,\n   use :func:`os.path.abspath` like so::\n\n      import sys, os\n\n      sys.path.append(os.path.abspath('sphinxext'))\n\n      extensions = ['extname']\n\n   That way, you can load an extension called ``extname`` from the subdirectory\n   ``sphinxext``.\n\n   The configuration file itself can be an extension; for that, you only need\n   to provide a :func:`setup` function in it.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:117: WARNING: Unknown directive type \"confval\".\n\n.. confval:: source_suffix\n\n   The file extensions of source files.  Sphinx considers the files with this\n   suffix as sources.  The value can be a dictionary mapping file extensions\n   to file types.  For example::\n\n      source_suffix = {\n          '.rst': 'restructuredtext',\n          '.txt': 'restructuredtext',\n          '.md': 'markdown',\n      }\n\n   By default, Sphinx only supports ``'restructuredtext'`` file type.  You can\n   add a new file type using source parser extensions.  Please read a document\n   of the extension to know which file type the extension supports.\n\n   The value may also be a list of file extensions: then Sphinx will consider\n   that they all map to the ``'restructuredtext'`` file type.\n\n   Default is ``{'.rst': 'restructuredtext'}``.\n\n   .. note:: file extensions have to start with a dot (e.g. ``.rst``).\n\n   .. versionchanged:: 1.3\n      Can now be a list of extensions.\n\n   .. versionchanged:: 1.8\n      Support file type mapping\n/sphinx-doc__sphinx/doc/usage/configuration.rst:146: WARNING: Unknown directive type \"confval\".\n\n.. confval:: source_encoding\n\n   The encoding of all reST source files.  The recommended encoding, and the\n   default value, is ``'utf-8-sig'``.\n\n   .. versionadded:: 0.5\n      Previously, Sphinx accepted only UTF-8 encoded sources.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:154: WARNING: Unknown directive type \"confval\".\n\n.. confval:: source_parsers\n\n   If given, a dictionary of parser classes for different source suffices.  The\n   keys are the suffix, the values can be either a class or a string giving a\n   fully-qualified name of a parser class.  The parser class can be either\n   ``docutils.parsers.Parser`` or :class:`sphinx.parsers.Parser`.  Files with a\n   suffix that is not in the dictionary will be parsed with the default\n   reStructuredText parser.\n\n   For example::\n\n      source_parsers = {'.md': 'recommonmark.parser.CommonMarkParser'}\n\n   .. note::\n\n      Refer to :doc:`/usage/markdown` for more information on using Markdown\n      with Sphinx.\n\n   .. versionadded:: 1.3\n\n   .. deprecated:: 1.8\n      Now Sphinx provides an API :meth:`.Sphinx.add_source_parser` to register\n      a source parser.  Please use it instead.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:178: WARNING: Unknown directive type \"confval\".\n\n.. confval:: master_doc\n\n   The document name of the \"master\" document, that is, the document that\n   contains the root :rst:dir:`toctree` directive.  Default is ``'index'``.\n\n   .. versionchanged:: 2.0\n      The default is changed to ``'index'`` from ``'contents'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:186: WARNING: Unknown directive type \"confval\".\n\n.. confval:: exclude_patterns\n\n   A list of glob-style patterns that should be excluded when looking for\n   source files. [1]_ They are matched against the source file names relative\n   to the source directory, using slashes as directory separators on all\n   platforms.\n\n   Example patterns:\n\n   - ``'library/xml.rst'`` -- ignores the ``library/xml.rst`` file (replaces\n     entry in :confval:`unused_docs`)\n   - ``'library/xml'`` -- ignores the ``library/xml`` directory\n   - ``'library/xml*'`` -- ignores all files and directories starting with\n     ``library/xml``\n   - ``'**/.svn'`` -- ignores all ``.svn`` directories\n\n   :confval:`exclude_patterns` is also consulted when looking for static files\n   in :confval:`html_static_path` and :confval:`html_extra_path`.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:207: WARNING: Unknown directive type \"confval\".\n\n.. confval:: templates_path\n\n   A list of paths that contain extra templates (or templates that overwrite\n   builtin/theme-specific templates).  Relative paths are taken as relative to\n   the configuration directory.\n\n   .. versionchanged:: 1.3\n      As these files are not meant to be built, they are automatically added to\n      :confval:`exclude_patterns`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:217: WARNING: Unknown directive type \"confval\".\n\n.. confval:: template_bridge\n\n   A string with the fully-qualified name of a callable (or simply a class)\n   that returns an instance of :class:`~sphinx.application.TemplateBridge`.\n   This instance is then used to render HTML documents, and possibly the output\n   of other builders (currently the changes builder).  (Note that the template\n   bridge must be made theme-aware if HTML themes are to be used.)\n/sphinx-doc__sphinx/doc/usage/configuration.rst:225: WARNING: Unknown directive type \"confval\".\n\n.. confval:: rst_epilog\n\n   .. index:: pair: global; substitutions\n\n   A string of reStructuredText that will be included at the end of every source\n   file that is read.  This is a possible place to add substitutions that should\n   be available in every file (another being :confval:`rst_prolog`).  An\n   example::\n\n      rst_epilog = \"\"\"\n      .. |psf| replace:: Python Software Foundation\n      \"\"\"\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:240: WARNING: Unknown directive type \"confval\".\n\n.. confval:: rst_prolog\n\n   .. index:: pair: global; substitutions\n\n   A string of reStructuredText that will be included at the beginning of every\n   source file that is read.  This is a possible place to add substitutions that\n   should be available in every file (another being :confval:`rst_epilog`).  An\n   example::\n\n      rst_prolog = \"\"\"\n      .. |psf| replace:: Python Software Foundation\n      \"\"\"\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:255: WARNING: Unknown directive type \"confval\".\n\n.. confval:: primary_domain\n\n   .. index:: default; domain\n              primary; domain\n\n   The name of the default :doc:`domain </usage/restructuredtext/domains>`.\n   Can also be ``None`` to disable a default domain.  The default is ``'py'``.\n   Those objects in other domains (whether the domain name is given explicitly,\n   or selected by a :rst:dir:`default-domain` directive) will have the domain\n   name explicitly prepended when named (e.g., when the default domain is C,\n   Python functions will be named \"Python function\", not just \"function\").\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:269: WARNING: Unknown directive type \"confval\".\n\n.. confval:: default_role\n\n   .. index:: default; role\n\n   The name of a reST role (builtin or Sphinx extension) to use as the default\n   role, that is, for text marked up ```like this```.  This can be set to\n   ``'py:obj'`` to make ```filter``` a cross-reference to the Python function\n   \"filter\".  The default is ``None``, which doesn't reassign the default role.\n\n   The default role can always be set within individual documents using the\n   standard reST :rst:dir:`default-role` directive.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:283: WARNING: Unknown directive type \"confval\".\n\n.. confval:: keep_warnings\n\n   If true, keep warnings as \"system message\" paragraphs in the built\n   documents.  Regardless of this setting, warnings are always written to the\n   standard error stream when ``sphinx-build`` is run.\n\n   The default is ``False``, the pre-0.5 behavior was to always keep them.\n\n   .. versionadded:: 0.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:293: WARNING: Unknown directive type \"confval\".\n\n.. confval:: suppress_warnings\n\n   A list of warning types to suppress arbitrary warning messages.\n\n   Sphinx supports following warning types:\n\n   * ``app.add_node``\n   * ``app.add_directive``\n   * ``app.add_role``\n   * ``app.add_generic_role``\n   * ``app.add_source_parser``\n   * ``download.not_readable``\n   * ``image.not_readable``\n   * ``ref.term``\n   * ``ref.ref``\n   * ``ref.numref``\n   * ``ref.keyword``\n   * ``ref.option``\n   * ``ref.citation``\n   * ``ref.footnote``\n   * ``ref.doc``\n   * ``ref.python``\n   * ``misc.highlighting_failure``\n   * ``toc.circular``\n   * ``toc.secnum``\n   * ``epub.unknown_project_files``\n   * ``epub.duplicated_toc_entry``\n   * ``autosectionlabel.*``\n\n   You can choose from these types.\n\n   Now, this option should be considered *experimental*.\n\n   .. versionadded:: 1.4\n\n   .. versionchanged:: 1.5\n\n      Added ``misc.highlighting_failure``\n\n   .. versionchanged:: 1.5.1\n\n      Added ``epub.unknown_project_files``\n\n   .. versionchanged:: 1.6\n\n      Added ``ref.footnote``\n\n   .. versionchanged:: 2.1\n\n      Added ``autosectionlabel.*``\n\n   .. versionchanged:: 3.3.0\n\n      Added ``epub.duplicated_toc_entry``\n/sphinx-doc__sphinx/doc/usage/configuration.rst:348: WARNING: Unknown directive type \"confval\".\n\n.. confval:: needs_sphinx\n\n   If set to a ``major.minor`` version string like ``'1.1'``, Sphinx will\n   compare it with its version and refuse to build if it is too old.  Default\n   is no requirement.\n\n   .. versionadded:: 1.0\n\n   .. versionchanged:: 1.4\n      also accepts micro version string\n/sphinx-doc__sphinx/doc/usage/configuration.rst:359: WARNING: Unknown directive type \"confval\".\n\n.. confval:: needs_extensions\n\n   This value can be a dictionary specifying version requirements for\n   extensions in :confval:`extensions`, e.g. ``needs_extensions =\n   {'sphinxcontrib.something': '1.5'}``.  The version strings should be in the\n   form ``major.minor``.  Requirements do not have to be specified for all\n   extensions, only for those you want to check.\n\n   This requires that the extension specifies its version to Sphinx (see\n   :ref:`dev-extensions` for how to do that).\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:372: WARNING: Unknown directive type \"confval\".\n\n.. confval:: manpages_url\n\n   A URL to cross-reference :rst:role:`manpage` directives. If this is\n   defined to ``https://manpages.debian.org/{path}``, the\n   :literal:`:manpage:`man(1)`` role will link to\n   <https://manpages.debian.org/man(1)>. The patterns available are:\n\n     * ``page`` - the manual page (``man``)\n     * ``section`` - the manual section (``1``)\n     * ``path`` - the original manual page and section specified (``man(1)``)\n\n   This also supports manpages specified as ``man.1``.\n\n   .. note:: This currently affects only HTML writers but could be\n             expanded in the future.\n\n   .. versionadded:: 1.7\n/sphinx-doc__sphinx/doc/usage/configuration.rst:390: WARNING: Unknown directive type \"confval\".\n\n.. confval:: nitpicky\n\n   If true, Sphinx will warn about *all* references where the target cannot be\n   found.  Default is ``False``.  You can activate this mode temporarily using\n   the :option:`-n <sphinx-build -n>` command-line switch.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:398: WARNING: Unknown directive type \"confval\".\n\n.. confval:: nitpick_ignore\n\n   A list of ``(type, target)`` tuples (by default empty) that should be\n   ignored when generating warnings in \"nitpicky mode\".  Note that ``type``\n   should include the domain name if present.  Example entries would be\n   ``('py:func', 'int')`` or ``('envvar', 'LD_LIBRARY_PATH')``.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:407: WARNING: Unknown directive type \"confval\".\n\n.. confval:: numfig\n\n   If true, figures, tables and code-blocks are automatically numbered if they\n   have a caption.  The :rst:role:`numref` role is enabled.\n   Obeyed so far only by HTML and LaTeX builders. Default is ``False``.\n\n   .. note::\n\n      The LaTeX builder always assigns numbers whether this option is enabled\n      or not.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:420: WARNING: Unknown directive type \"confval\".\n\n.. confval:: numfig_format\n\n   A dictionary mapping ``'figure'``, ``'table'``, ``'code-block'`` and\n   ``'section'`` to strings that are used for format of figure numbers.\n   As a special character, ``%s`` will be replaced to figure number.\n\n   Default is to use ``'Fig. %s'`` for ``'figure'``, ``'Table %s'`` for\n   ``'table'``, ``'Listing %s'`` for ``'code-block'`` and ``'Section'`` for\n   ``'section'``.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:432: WARNING: Unknown directive type \"confval\".\n\n.. confval:: numfig_secnum_depth\n\n   - if set to ``0``, figures, tables and code-blocks are continuously numbered\n     starting at ``1``.\n   - if ``1`` (default) numbers will be ``x.1``, ``x.2``, ... with ``x``\n     the section number (top level sectioning; no ``x.`` if no section).\n     This naturally applies only if section numbering has been activated via\n     the ``:numbered:`` option of the :rst:dir:`toctree` directive.\n   - ``2`` means that numbers will be ``x.y.1``, ``x.y.2``, ... if located in\n     a sub-section (but still ``x.1``, ``x.2``, ... if located directly under a\n     section and ``1``, ``2``, ... if not in any top level section.)\n   - etc...\n\n   .. versionadded:: 1.3\n\n   .. versionchanged:: 1.7\n      The LaTeX builder obeys this setting (if :confval:`numfig` is set to\n      ``True``).\n/sphinx-doc__sphinx/doc/usage/configuration.rst:451: WARNING: Unknown directive type \"confval\".\n\n.. confval:: smartquotes\n\n   If true, the `Docutils Smart Quotes transform`__, originally based on\n   `SmartyPants`__ (limited to English) and currently applying to many\n   languages, will be used to convert quotes and dashes to typographically\n   correct entities.  Default: ``True``.\n\n   __ http://docutils.sourceforge.net/docs/user/smartquotes.html\n   __ https://daringfireball.net/projects/smartypants/\n\n   .. versionadded:: 1.6.6\n      It replaces deprecated :confval:`html_use_smartypants`.\n      It applies by default to all builders except ``man`` and ``text``\n      (see :confval:`smartquotes_excludes`.)\n\n   A `docutils.conf`__ file located in the configuration directory (or a\n   global :file:`~/.docutils` file) is obeyed unconditionally if it\n   *deactivates* smart quotes via the corresponding `Docutils option`__.  But\n   if it *activates* them, then :confval:`smartquotes` does prevail.\n\n   __ http://docutils.sourceforge.net/docs/user/config.html\n   __ http://docutils.sourceforge.net/docs/user/config.html#smart-quotes\n/sphinx-doc__sphinx/doc/usage/configuration.rst:474: WARNING: Unknown directive type \"confval\".\n\n.. confval:: smartquotes_action\n\n   This string, for use with Docutils ``0.14`` or later, customizes the Smart\n   Quotes transform.  See the file :file:`smartquotes.py` at the `Docutils\n   repository`__ for details.  The default ``'qDe'`` educates normal **q**\\\n   uote characters ``\"``, ``'``, em- and en-**D**\\ ashes ``---``, ``--``, and\n   **e**\\ llipses ``...``.\n\n   .. versionadded:: 1.6.6\n\n   __ https://sourceforge.net/p/docutils/code/HEAD/tree/trunk/docutils/\n/sphinx-doc__sphinx/doc/usage/configuration.rst:486: WARNING: Unknown directive type \"confval\".\n\n.. confval:: smartquotes_excludes\n\n   This is a ``dict`` whose default is::\n\n     {'languages': ['ja'], 'builders': ['man', 'text']}\n\n   Each entry gives a sufficient condition to ignore the\n   :confval:`smartquotes` setting and deactivate the Smart Quotes transform.\n   Accepted keys are as above ``'builders'`` or ``'languages'``.\n   The values are lists.\n\n   .. note:: Currently, in case of invocation of :program:`make` with multiple\n      targets, the first target name is the only one which is tested against\n      the ``'builders'`` entry and it decides for all.  Also, a ``make text``\n      following ``make html`` needs to be issued in the form ``make text\n      O=\"-E\"`` to force re-parsing of source files, as the cached ones are\n      already transformed.  On the other hand the issue does not arise with\n      direct usage of :program:`sphinx-build` as it caches\n      (in its default usage) the parsed source files in per builder locations.\n\n   .. hint:: An alternative way to effectively deactivate (or customize) the\n      smart quotes for a given builder, for example ``latex``, is to use\n      ``make`` this way:\n\n      .. code-block:: console\n\n         make latex O=\"-D smartquotes_action=\"\n\n      This can follow some ``make html`` with no problem, in contrast to the\n      situation from the prior note.  It requires Docutils 0.14 or later.\n\n   .. versionadded:: 1.6.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:519: WARNING: Unknown directive type \"confval\".\n\n.. confval:: user_agent\n\n   A User-Agent of Sphinx.  It is used for a header on HTTP access (ex.\n   linkcheck, intersphinx and so on).  Default is ``\"Sphinx/X.Y.Z\n   requests/X.Y.Z python/X.Y.Z\"``.\n\n   .. versionadded:: 2.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:527: WARNING: Unknown directive type \"confval\".\n\n.. confval:: tls_verify\n\n   If true, Sphinx verifies server certifications.  Default is ``True``.\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:533: WARNING: Unknown directive type \"confval\".\n\n.. confval:: tls_cacerts\n\n   A path to a certification file of CA or a path to directory which\n   contains the certificates.  This also allows a dictionary mapping\n   hostname to the path to certificate file.\n   The certificates are used to verify server certifications.\n\n   .. versionadded:: 1.5\n\n   .. tip:: Sphinx uses requests_ as a HTTP library internally.\n            Therefore, Sphinx refers a certification file on the\n            directory pointed ``REQUESTS_CA_BUNDLE`` environment\n            variable if ``tls_cacerts`` not set.\n\n            .. _requests: https://requests.readthedocs.io/en/master/\n/sphinx-doc__sphinx/doc/usage/configuration.rst:549: WARNING: Unknown directive type \"confval\".\n\n.. confval:: today\n             today_fmt\n\n   These values determine how to format the current date, used as the\n   replacement for ``|today|``.\n\n   * If you set :confval:`today` to a non-empty value, it is used.\n   * Otherwise, the current time is formatted using :func:`time.strftime` and\n     the format given in :confval:`today_fmt`.\n\n   The default is now :confval:`today` and a :confval:`today_fmt` of ``'%B %d,\n   %Y'`` (or, if translation is enabled with :confval:`language`, an equivalent\n   format for the selected locale).\n/sphinx-doc__sphinx/doc/usage/configuration.rst:563: WARNING: Unknown directive type \"confval\".\n\n.. confval:: highlight_language\n\n   The default language to highlight source code in.  The default is\n   ``'python3'``.  The value should be a valid Pygments lexer name, see\n   :ref:`code-examples` for more details.\n\n   .. versionadded:: 0.5\n\n   .. versionchanged:: 1.4\n      The default is now ``'default'``. It is similar to ``'python3'``;\n      it is mostly a superset of ``'python'`` but it fallbacks to\n      ``'none'`` without warning if failed.  ``'python3'`` and other\n      languages will emit warning if failed.  If you prefer Python 2\n      only highlighting, you can set it back to ``'python'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:578: WARNING: Unknown directive type \"confval\".\n\n.. confval:: highlight_options\n\n   A dictionary of options that modify how the lexer specified by\n   :confval:`highlight_language` generates highlighted source code. These are\n   lexer-specific; for the options understood by each, see the\n   `Pygments documentation <https://pygments.org/docs/lexers>`_.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:587: WARNING: Unknown directive type \"confval\".\n\n.. confval:: pygments_style\n\n   The style name to use for Pygments highlighting of source code.  If not set,\n   either the theme's default style or ``'sphinx'`` is selected for HTML\n   output.\n\n   .. versionchanged:: 0.3\n      If the value is a fully-qualified name of a custom Pygments style class,\n      this is then used as custom style.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:597: WARNING: Unknown directive type \"confval\".\n\n.. confval:: add_function_parentheses\n\n   A boolean that decides whether parentheses are appended to function and\n   method role text (e.g. the content of ``:func:`input```) to signify that the\n   name is callable.  Default is ``True``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:603: WARNING: Unknown directive type \"confval\".\n\n.. confval:: add_module_names\n\n   A boolean that decides whether module names are prepended to all\n   :term:`object` names (for object types where a \"module\" of some kind is\n   defined), e.g. for :rst:dir:`py:function` directives.  Default is ``True``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:609: WARNING: Unknown directive type \"confval\".\n\n.. confval:: show_authors\n\n   A boolean that decides whether :rst:dir:`codeauthor` and\n   :rst:dir:`sectionauthor` directives produce any output in the built files.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:614: WARNING: Unknown directive type \"confval\".\n\n.. confval:: modindex_common_prefix\n\n   A list of prefixes that are ignored for sorting the Python module index\n   (e.g., if this is set to ``['foo.']``, then ``foo.bar`` is shown under ``B``,\n   not ``F``). This can be handy if you document a project that consists of a\n   single package.  Works only for the HTML builder currently.  Default is\n   ``[]``.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:624: WARNING: Unknown directive type \"confval\".\n\n.. confval:: trim_footnote_reference_space\n\n   Trim spaces before footnote references that are necessary for the reST\n   parser to recognize the footnote, but do not look too nice in the output.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:631: WARNING: Unknown directive type \"confval\".\n\n.. confval:: trim_doctest_flags\n\n   If true, doctest flags (comments looking like ``# doctest: FLAG, ...``) at\n   the ends of lines and ``<BLANKLINE>`` markers are removed for all code\n   blocks showing interactive Python sessions (i.e. doctests).  Default is\n   ``True``.  See the extension :mod:`~sphinx.ext.doctest` for more\n   possibilities of including doctests.\n\n   .. versionadded:: 1.0\n   .. versionchanged:: 1.1\n      Now also removes ``<BLANKLINE>``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:643: WARNING: Unknown directive type \"confval\".\n\n.. confval:: strip_signature_backslash\n\n   Default is ``False``.\n   When backslash stripping is enabled then every occurrence of ``\\\\`` in a\n   domain directive will be changed to ``\\``, even within string literals.\n   This was the behaviour before version 3.0, and setting this variable to\n   ``True`` will reinstate that behaviour.\n\n    .. versionadded:: 3.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:662: WARNING: Unknown directive type \"confval\".\n\n.. confval:: language\n\n   The code for the language the docs are written in.  Any text automatically\n   generated by Sphinx will be in that language.  Also, Sphinx will try to\n   substitute individual paragraphs from your documents with the translation\n   sets obtained from :confval:`locale_dirs`.  Sphinx will search\n   language-specific figures named by :confval:`figure_language_filename`\n   (e.g. the German version of ``myfigure.png`` will be ``myfigure.de.png``\n   by default setting) and substitute them for original figures.  In the LaTeX\n   builder, a suitable language will be selected as an option for the *Babel*\n   package.  Default is ``None``, which means that no translation will be done.\n\n   .. versionadded:: 0.5\n\n   .. versionchanged:: 1.4\n\n      Support figure substitution\n\n   Currently supported languages by Sphinx are:\n\n   * ``ar`` -- Arabic\n   * ``bg`` -- Bulgarian\n   * ``bn`` -- Bengali\n   * ``ca`` -- Catalan\n   * ``cak`` -- Kaqchikel\n   * ``cs`` -- Czech\n   * ``cy`` -- Welsh\n   * ``da`` -- Danish\n   * ``de`` -- German\n   * ``el`` -- Greek\n   * ``en`` -- English\n   * ``eo`` -- Esperanto\n   * ``es`` -- Spanish\n   * ``et`` -- Estonian\n   * ``eu`` -- Basque\n   * ``fa`` -- Iranian\n   * ``fi`` -- Finnish\n   * ``fr`` -- French\n   * ``he`` -- Hebrew\n   * ``hi`` -- Hindi\n   * ``hi_IN`` -- Hindi (India)\n   * ``hr`` -- Croatian\n   * ``hu`` -- Hungarian\n   * ``id`` -- Indonesian\n   * ``it`` -- Italian\n   * ``ja`` -- Japanese\n   * ``ko`` -- Korean\n   * ``lt`` -- Lithuanian\n   * ``lv`` -- Latvian\n   * ``mk`` -- Macedonian\n   * ``nb_NO`` -- Norwegian Bokmal\n   * ``ne`` -- Nepali\n   * ``nl`` -- Dutch\n   * ``pl`` -- Polish\n   * ``pt`` -- Portuguese\n   * ``pt_BR`` -- Brazilian Portuguese\n   * ``pt_PT`` -- European Portuguese\n   * ``ro`` -- Romanian\n   * ``ru`` -- Russian\n   * ``si`` -- Sinhala\n   * ``sk`` -- Slovak\n   * ``sl`` -- Slovenian\n   * ``sq`` -- Albanian\n   * ``sr`` -- Serbian\n   * ``sr@latin`` -- Serbian (Latin)\n   * ``sr_RS`` -- Serbian (Cyrillic)\n   * ``sv`` -- Swedish\n   * ``ta`` -- Tamil\n   * ``te`` -- Telugu\n   * ``tr`` -- Turkish\n   * ``uk_UA`` -- Ukrainian\n   * ``ur`` -- Urdu\n   * ``vi`` -- Vietnamese\n   * ``zh_CN`` -- Simplified Chinese\n   * ``zh_TW`` -- Traditional Chinese\n/sphinx-doc__sphinx/doc/usage/configuration.rst:738: WARNING: Unknown directive type \"confval\".\n\n.. confval:: locale_dirs\n\n   .. versionadded:: 0.5\n\n   Directories in which to search for additional message catalogs (see\n   :confval:`language`), relative to the source directory.  The directories on\n   this path are searched by the standard :mod:`gettext` module.\n\n   Internal messages are fetched from a text domain of ``sphinx``; so if you\n   add the directory :file:`./locale` to this setting, the message catalogs\n   (compiled from ``.po`` format using :program:`msgfmt`) must be in\n   :file:`./locale/{language}/LC_MESSAGES/sphinx.mo`.  The text domain of\n   individual documents depends on :confval:`gettext_compact`.\n\n   The default is ``['locales']``.\n\n   .. versionchanged:: 1.5\n      Use ``locales`` directory as a default value\n/sphinx-doc__sphinx/doc/usage/configuration.rst:757: WARNING: Unknown directive type \"confval\".\n\n.. confval:: gettext_compact\n\n   .. versionadded:: 1.1\n\n   If true, a document's text domain is its docname if it is a top-level\n   project file and its very base directory otherwise.\n\n   If set to string, all document's text domain is this string, making all\n   documents use single text domain.\n\n   By default, the document ``markup/code.rst`` ends up in the ``markup`` text\n   domain.  With this option set to ``False``, it is ``markup/code``.\n\n   .. versionchanged:: 3.3\n      The string value is now accepted.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:773: WARNING: Unknown directive type \"confval\".\n\n.. confval:: gettext_uuid\n\n   If true, Sphinx generates uuid information for version tracking in message\n   catalogs. It is used for:\n\n   * Add uid line for each msgids in .pot files.\n   * Calculate similarity between new msgids and previously saved old msgids.\n     This calculation takes a long time.\n\n   If you want to accelerate the calculation, you can use\n   ``python-levenshtein`` 3rd-party package written in C by using\n   :command:`pip install python-levenshtein`.\n\n   The default is ``False``.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:790: WARNING: Unknown directive type \"confval\".\n\n.. confval:: gettext_location\n\n   If true, Sphinx generates location information for messages in message\n   catalogs.\n\n   The default is ``True``.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:799: WARNING: Unknown directive type \"confval\".\n\n.. confval:: gettext_auto_build\n\n   If true, Sphinx builds mo file for each translation catalog files.\n\n   The default is ``True``.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:807: WARNING: Unknown directive type \"confval\".\n\n.. confval:: gettext_additional_targets\n\n   To specify names to enable gettext extracting and translation applying for\n   i18n additionally. You can specify below names:\n\n   :index: index terms\n   :literal-block: literal blocks (``::`` annotation and ``code-block`` directive)\n   :doctest-block: doctest block\n   :raw: raw content\n   :image: image/figure uri and alt\n\n   For example: ``gettext_additional_targets = ['literal-block', 'image']``.\n\n   The default is ``[]``.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:824: WARNING: Unknown directive type \"confval\".\n\n.. confval:: figure_language_filename\n\n   The filename format for language-specific figures.  The default value is\n   ``{root}.{language}{ext}``.  It will be expanded to\n   ``dirname/filename.en.png`` from ``.. image:: dirname/filename.png``.\n   The available format tokens are:\n\n   * ``{root}`` - the filename, including any path component, without the file\n     extension, e.g. ``dirname/filename``\n   * ``{path}`` - the directory path component of the filename, with a trailing\n     slash if non-empty, e.g. ``dirname/``\n   * ``{docpath}`` - the directory path component for the current document, with\n     a trailing slash if non-empty.\n   * ``{basename}`` - the filename without the directory path or file extension\n     components, e.g. ``filename``\n   * ``{ext}`` - the file extension, e.g. ``.png``\n   * ``{language}`` - the translation language, e.g. ``en``\n\n   For example, setting this to ``{path}{language}/{basename}{ext}`` will\n   expand to ``dirname/en/filename.png`` instead.\n\n   .. versionadded:: 1.4\n\n   .. versionchanged:: 1.5\n      Added ``{path}`` and ``{basename}`` tokens.\n\n   .. versionchanged:: 3.2\n      Added ``{docpath}`` token.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:861: WARNING: Unknown directive type \"confval\".\n\n.. confval:: math_number_all\n\n   Set this option to ``True`` if you want all displayed math to be numbered.\n   The default is ``False``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:866: WARNING: Unknown directive type \"confval\".\n\n.. confval:: math_eqref_format\n\n   A string used for formatting the labels of references to equations.\n   The ``{number}`` place-holder stands for the equation number.\n\n   Example: ``'Eq.{number}'`` gets rendered as, for example, ``Eq.10``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:873: WARNING: Unknown directive type \"confval\".\n\n.. confval:: math_numfig\n\n   If ``True``, displayed math equations are numbered across pages when\n   :confval:`numfig` is enabled.  The :confval:`numfig_secnum_depth` setting\n   is respected.  The :rst:role:`eq`, not :rst:role:`numref`, role\n   must be used to reference equation numbers.  Default is ``True``.\n\n   .. versionadded:: 1.7\n/sphinx-doc__sphinx/doc/usage/configuration.rst:891: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_theme\n\n   The \"theme\" that the HTML output should use.  See the :doc:`section about\n   theming </usage/theming>`.  The default is ``'alabaster'``.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:898: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_theme_options\n\n   A dictionary of options that influence the look and feel of the selected\n   theme.  These are theme-specific.  For the options understood by the builtin\n   themes, see :ref:`this section <builtin-themes>`.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:906: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_theme_path\n\n   A list of paths that contain custom themes, either as subdirectories or as\n   zip files.  Relative paths are taken as relative to the configuration\n   directory.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:914: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_style\n\n   The style sheet to use for HTML pages.  A file of that name must exist\n   either in Sphinx's :file:`static/` path, or in one of the custom paths given\n   in :confval:`html_static_path`.  Default is the stylesheet given by the\n   selected theme.  If you only want to add or override a few things compared\n   to the theme's stylesheet, use CSS ``@import`` to import the theme's\n   stylesheet.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:923: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_title\n\n   The \"title\" for HTML documentation generated with Sphinx's own templates.\n   This is appended to the ``<title>`` tag of individual pages, and used in the\n   navigation bar as the \"topmost\" element.  It defaults to :samp:`'{<project>}\n   v{<revision>} documentation'`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:930: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_short_title\n\n   A shorter \"title\" for the HTML docs.  This is used for links in the\n   header and in the HTML Help docs.  If not given, it defaults to the value of\n   :confval:`html_title`.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:938: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_baseurl\n\n   The URL which points to the root of the HTML documentation.  It is used to\n   indicate the location of document like ``canonical_url``.\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:945: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_codeblock_linenos_style\n\n   The style of line numbers for code-blocks.\n\n   * ``'table'`` -- display line numbers using ``<table>`` tag (default)\n   * ``'inline'`` -- display line numbers using ``<span>`` tag\n\n   .. versionadded:: 3.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:954: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_context\n\n   A dictionary of values to pass into the template engine's context for all\n   pages.  Single values can also be put in this dictionary using the\n   :option:`-A <sphinx-build -A>` command-line option of ``sphinx-build``.\n\n   .. versionadded:: 0.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:962: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_logo\n\n   If given, this must be the name of an image file (path relative to the\n   :term:`configuration directory`) that is the logo of the docs.  It is placed\n   at the top of the sidebar; its width should therefore not exceed 200 pixels.\n   Default: ``None``.\n\n   .. versionadded:: 0.4.1\n      The image file will be copied to the ``_static`` directory of the output\n      HTML, but only if the file does not already exist there.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:973: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_favicon\n\n   If given, this must be the name of an image file (path relative to the\n   :term:`configuration directory`) that is the favicon of the docs.  Modern\n   browsers use this as the icon for tabs, windows and bookmarks.  It should\n   be a Windows-style icon file (``.ico``), which is 16x16 or 32x32\n   pixels large.  Default: ``None``.\n\n   .. versionadded:: 0.4\n      The image file will be copied to the ``_static`` directory of the output\n      HTML, but only if the file does not already exist there.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:985: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_css_files\n\n   A list of CSS files.  The entry must be a *filename* string or a tuple\n   containing the *filename* string and the *attributes* dictionary.  The\n   *filename* must be relative to the :confval:`html_static_path`, or a full URI\n   with scheme like ``http://example.org/style.css``.  The *attributes* is used\n   for attributes of ``<link>`` tag.  It defaults to an empty list.\n\n   Example::\n\n       html_css_files = ['custom.css',\n                         'https://example.com/css/custom.css',\n                         ('print.css', {'media': 'print'})]\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1001: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_js_files\n\n   A list of JavaScript *filename*.  The entry must be a *filename* string or a\n   tuple containing the *filename* string and the *attributes* dictionary.  The\n   *filename* must be relative to the :confval:`html_static_path`, or a full\n   URI with scheme like ``http://example.org/script.js``.  The *attributes* is\n   used for attributes of ``<script>`` tag.  It defaults to an empty list.\n\n   Example::\n\n       html_js_files = ['script.js',\n                        'https://example.com/scripts/custom.js',\n                        ('custom.js', {'async': 'async'})]\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1017: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_static_path\n\n   A list of paths that contain custom static files (such as style\n   sheets or script files).  Relative paths are taken as relative to\n   the configuration directory.  They are copied to the output's\n   :file:`_static` directory after the theme's static files, so a file\n   named :file:`default.css` will overwrite the theme's\n   :file:`default.css`.\n\n   As these files are not meant to be built, they are automatically excluded\n   from source files.\n\n   .. note::\n\n      For security reasons, dotfiles under ``html_static_path`` will\n      not be copied.  If you would like to copy them intentionally, please\n      add each filepath to this setting::\n\n          html_static_path = ['_static', '_static/.htaccess']\n\n      Another way to do that, you can also use\n      :confval:`html_extra_path`.  It allows to copy dotfiles under\n      the directories.\n\n   .. versionchanged:: 0.4\n      The paths in :confval:`html_static_path` can now contain subdirectories.\n\n   .. versionchanged:: 1.0\n      The entries in :confval:`html_static_path` can now be single files.\n\n   .. versionchanged:: 1.8\n      The files under :confval:`html_static_path` are excluded from source\n      files.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1051: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_extra_path\n\n   A list of paths that contain extra files not directly related to\n   the documentation, such as :file:`robots.txt` or :file:`.htaccess`.\n   Relative paths are taken as relative to the configuration\n   directory.  They are copied to the output directory.  They will\n   overwrite any existing file of the same name.\n\n   As these files are not meant to be built, they are automatically excluded\n   from source files.\n\n   .. versionadded:: 1.2\n\n   .. versionchanged:: 1.4\n      The dotfiles in the extra directory will be copied to the output\n      directory.  And it refers :confval:`exclude_patterns` on copying extra\n      files and directories, and ignores if path matches to patterns.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1069: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_last_updated_fmt\n\n   If this is not None, a 'Last updated on:' timestamp is inserted\n   at every page bottom, using the given :func:`strftime` format.\n   The empty string is equivalent to ``'%b %d, %Y'`` (or a\n   locale-dependent equivalent).\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1076: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_use_smartypants\n\n   If true, quotes and dashes are converted to typographically correct\n   entities.  Default: ``True``.\n\n   .. deprecated:: 1.6\n      To disable smart quotes, use rather :confval:`smartquotes`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1084: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_add_permalinks\n\n   Sphinx will add \"permalinks\" for each heading and description environment as\n   paragraph signs that become visible when the mouse hovers over them.\n\n   This value determines the text for the permalink; it defaults to ``\"\u00b6\"``.\n   Set it to ``None`` or the empty string to disable permalinks.\n\n   .. versionadded:: 0.6\n      Previously, this was always activated.\n\n   .. versionchanged:: 1.1\n      This can now be a string to select the actual text of the link.\n      Previously, only boolean values were accepted.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1099: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_sidebars\n\n   Custom sidebar templates, must be a dictionary that maps document names to\n   template names.\n\n   The keys can contain glob-style patterns [1]_, in which case all matching\n   documents will get the specified sidebars.  (A warning is emitted when a\n   more than one glob-style pattern matches for any document.)\n\n   The values can be either lists or single strings.\n\n   * If a value is a list, it specifies the complete list of sidebar templates\n     to include.  If all or some of the default sidebars are to be included,\n     they must be put into this list as well.\n\n     The default sidebars (for documents that don't match any pattern) are\n     defined by theme itself.  Builtin themes are using these templates by\n     default: ``['localtoc.html', 'relations.html', 'sourcelink.html',\n     'searchbox.html']``.\n\n   * If a value is a single string, it specifies a custom sidebar to be added\n     between the ``'sourcelink.html'`` and ``'searchbox.html'`` entries.  This\n     is for compatibility with Sphinx versions before 1.0.\n\n   .. deprecated:: 1.7\n\n      a single string value for ``html_sidebars`` will be removed in 2.0\n\n   Builtin sidebar templates that can be rendered are:\n\n   * **localtoc.html** -- a fine-grained table of contents of the current\n     document\n   * **globaltoc.html** -- a coarse-grained table of contents for the whole\n     documentation set, collapsed\n   * **relations.html** -- two links to the previous and next documents\n   * **sourcelink.html** -- a link to the source of the current document, if\n     enabled in :confval:`html_show_sourcelink`\n   * **searchbox.html** -- the \"quick search\" box\n\n   Example::\n\n      html_sidebars = {\n         '**': ['globaltoc.html', 'sourcelink.html', 'searchbox.html'],\n         'using/windows': ['windowssidebar.html', 'searchbox.html'],\n      }\n\n   This will render the custom template ``windowssidebar.html`` and the quick\n   search box within the sidebar of the given document, and render the default\n   sidebars for all other pages (except that the local TOC is replaced by the\n   global TOC).\n\n   .. versionadded:: 1.0\n      The ability to use globbing keys and to specify multiple sidebars.\n\n   Note that this value only has no effect if the chosen theme does not possess\n   a sidebar, like the builtin **scrolls** and **haiku** themes.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1156: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_additional_pages\n\n   Additional templates that should be rendered to HTML pages, must be a\n   dictionary that maps document names to template names.\n\n   Example::\n\n      html_additional_pages = {\n          'download': 'customdownload.html',\n      }\n\n   This will render the template ``customdownload.html`` as the page\n   ``download.html``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1170: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_domain_indices\n\n   If true, generate domain-specific indices in addition to the general index.\n   For e.g. the Python domain, this is the global module index.  Default is\n   ``True``.\n\n   This value can be a bool or a list of index names that should be generated.\n   To find out the index name for a specific index, look at the HTML file name.\n   For example, the Python module index has the name ``'py-modindex'``.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1182: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_use_index\n\n   If true, add an index to the HTML documents.  Default is ``True``.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1188: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_split_index\n\n   If true, the index is generated twice: once as a single page with all the\n   entries, and once as one page per starting letter.  Default is ``False``.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1195: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_copy_source\n\n   If true, the reST sources are included in the HTML build as\n   :file:`_sources/{name}`.  The default is ``True``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1200: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_show_sourcelink\n\n   If true (and :confval:`html_copy_source` is true as well), links to the\n   reST sources will be added to the sidebar.  The default is ``True``.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1207: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_sourcelink_suffix\n\n   Suffix to be appended to source links (see :confval:`html_show_sourcelink`),\n   unless they have this suffix already.  Default is ``'.txt'``.\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1214: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_use_opensearch\n\n   If nonempty, an `OpenSearch <http://www.opensearch.org/Home>`_ description\n   file will be output, and all pages will contain a ``<link>`` tag referring\n   to it.  Since OpenSearch doesn't support relative URLs for its search page\n   location, the value of this option must be the base URL from which these\n   documents are served (without trailing slash), e.g.\n   ``\"https://docs.python.org\"``.  The default is ``''``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1223: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_file_suffix\n\n   This is the file name suffix for generated HTML files.  The default is\n   ``\".html\"``.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1230: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_link_suffix\n\n   Suffix for generated links to HTML files.  The default is whatever\n   :confval:`html_file_suffix` is set to; it can be set differently (e.g. to\n   support different web server setups).\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1238: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_show_copyright\n\n   If true, \"(C) Copyright ...\" is shown in the HTML footer. Default is\n   ``True``.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1245: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_show_sphinx\n\n   If true, \"Created using Sphinx\" is shown in the HTML footer.  Default is\n   ``True``.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1252: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_output_encoding\n\n   Encoding of HTML output files. Default is ``'utf-8'``.  Note that this\n   encoding name must both be a valid Python encoding name and a valid HTML\n   ``charset`` value.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1260: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_compact_lists\n\n   If true, a list all whose items consist of a single paragraph and/or a\n   sub-list all whose items etc... (recursive definition) will not use the\n   ``<p>`` element for any of its items. This is standard docutils behavior.\n   Default: ``True``.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1269: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_secnumber_suffix\n\n   Suffix for section numbers.  Default: ``\". \"``.  Set to ``\" \"`` to suppress\n   the final dot on section numbers.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1276: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_search_language\n\n   Language to be used for generating the HTML full-text search index.  This\n   defaults to the global language selected with :confval:`language`.  If there\n   is no support for this language, ``\"en\"`` is used which selects the English\n   language.\n\n   Support is present for these languages:\n\n   * ``da`` -- Danish\n   * ``nl`` -- Dutch\n   * ``en`` -- English\n   * ``fi`` -- Finnish\n   * ``fr`` -- French\n   * ``de`` -- German\n   * ``hu`` -- Hungarian\n   * ``it`` -- Italian\n   * ``ja`` -- Japanese\n   * ``no`` -- Norwegian\n   * ``pt`` -- Portuguese\n   * ``ro`` -- Romanian\n   * ``ru`` -- Russian\n   * ``es`` -- Spanish\n   * ``sv`` -- Swedish\n   * ``tr`` -- Turkish\n   * ``zh`` -- Chinese\n\n   .. admonition:: Accelerating build speed\n\n      Each language (except Japanese) provides its own stemming algorithm.\n      Sphinx uses a Python implementation by default.  You can use a C\n      implementation to accelerate building the index file.\n\n      * `PorterStemmer <https://pypi.org/project/PorterStemmer/>`_ (``en``)\n      * `PyStemmer <https://pypi.org/project/PyStemmer/>`_ (all languages)\n\n   .. versionadded:: 1.1\n      With support for ``en`` and ``ja``.\n\n   .. versionchanged:: 1.3\n      Added additional languages.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1318: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_search_options\n\n   A dictionary with options for the search language support, empty by default.\n   The meaning of these options depends on the language selected.\n\n   The English support has no options.\n\n   The Japanese support has these options:\n\n   :type:\n      _`type` is dotted module path string to specify Splitter implementation\n      which should be derived from :class:`sphinx.search.ja.BaseSplitter`.  If\n      not specified or None is specified,\n      ``'sphinx.search.ja.DefaultSplitter'`` will be used.\n\n      You can choose from these modules:\n\n      :'sphinx.search.ja.DefaultSplitter':\n         TinySegmenter algorithm. This is default splitter.\n      :'sphinx.search.ja.MecabSplitter':\n         MeCab binding. To use this splitter, 'mecab' python binding or dynamic\n         link library ('libmecab.so' for linux, 'libmecab.dll' for windows) is\n         required.\n      :'sphinx.search.ja.JanomeSplitter':\n         Janome binding. To use this splitter,\n         `Janome <https://pypi.org/project/Janome/>`_ is required.\n\n      .. deprecated:: 1.6\n         ``'mecab'``, ``'janome'`` and ``'default'`` is deprecated.\n         To keep compatibility, ``'mecab'``, ``'janome'`` and ``'default'`` are\n         also acceptable.\n\n   Other option values depend on splitter value which you choose.\n\n   Options for ``'mecab'``:\n      :dic_enc:\n         _`dic_enc option` is the encoding for the MeCab algorithm.\n      :dict:\n         _`dict option` is the dictionary to use for the MeCab algorithm.\n      :lib:\n         _`lib option` is the library name for finding the MeCab library via\n         ctypes if the Python binding is not installed.\n\n      For example::\n\n          html_search_options = {\n              'type': 'mecab',\n              'dic_enc': 'utf-8',\n              'dict': '/path/to/mecab.dic',\n              'lib': '/path/to/libmecab.so',\n          }\n\n   Options for ``'janome'``:\n      :user_dic:\n         _`user_dic option` is the user dictionary file path for Janome.\n      :user_dic_enc:\n         _`user_dic_enc option` is the encoding for the user dictionary file\n         specified by ``user_dic`` option. Default is 'utf8'.\n\n   .. versionadded:: 1.1\n\n   .. versionchanged:: 1.4\n      html_search_options for Japanese is re-organized and any custom splitter\n      can be used by `type`_ settings.\n\n   The Chinese support has these options:\n\n   * ``dict``  -- the ``jieba`` dictionary path if want to use\n     custom dictionary.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1388: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_search_scorer\n\n   The name of a JavaScript file (relative to the configuration directory) that\n   implements a search results scorer.  If empty, the default will be used.\n\n   .. XXX describe interface for scorer here\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1397: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_scaled_image_link\n\n   If true, images itself links to the original image if it doesn't have\n   'target' option or scale related options: 'scale', 'width', 'height'.\n   The default is ``True``.\n\n   Document authors can this feature manually with giving ``no-scaled-link``\n   class to the image:\n\n   .. code-block:: rst\n\n      .. image:: sphinx.png\n         :scale: 50%\n         :class: no-scaled-link\n\n   .. versionadded:: 1.3\n\n   .. versionchanged:: 3.0\n\n      It is disabled for images having ``no-scaled-link`` class\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1418: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_math_renderer\n\n   The name of math_renderer extension for HTML output.  The default is\n   ``'mathjax'``.\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1425: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_experimental_html5_writer\n\n   Output is processed with HTML5 writer.  This feature needs docutils 0.13 or\n   newer.  Default is ``False``.\n\n   .. versionadded:: 1.6\n\n   .. deprecated:: 2.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1434: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html4_writer\n\n   Output is processed with HTML4 writer.  Default is ``False``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1441: WARNING: Unknown directive type \"confval\".\n\n.. confval:: singlehtml_sidebars\n\n   Custom sidebar templates, must be a dictionary that maps document names to\n   template names.  And it only allows a key named `'index'`.  All other keys\n   are ignored.  For more information, refer to :confval:`html_sidebars`.  By\n   default, it is same as :confval:`html_sidebars`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1454: WARNING: Unknown directive type \"confval\".\n\n.. confval:: htmlhelp_basename\n\n   Output file base name for HTML help builder.  Default is ``'pydoc'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1458: WARNING: Unknown directive type \"confval\".\n\n.. confval:: htmlhelp_file_suffix\n\n   This is the file name suffix for generated HTML help files.  The\n   default is ``\".html\"``.\n\n   .. versionadded:: 2.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1465: WARNING: Unknown directive type \"confval\".\n\n.. confval:: htmlhelp_link_suffix\n\n   Suffix for generated links to HTML files.  The default is ``\".html\"``.\n\n   .. versionadded:: 2.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1488: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1493: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_bundle_name\n\n   The basename for the Apple Help Book.  Defaults to the :confval:`project`\n   name.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1498: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_bundle_id\n\n   The bundle ID for the help book bundle.\n\n   .. warning::\n\n      You *must* set this value in order to generate Apple Help.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1506: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_dev_region\n\n   The development region.  Defaults to ``'en-us'``, which is Apple\u2019s\n   recommended setting.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1511: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_bundle_version\n\n   The bundle version (as a string).  Defaults to ``'1'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1515: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_icon\n\n   The help bundle icon file, or ``None`` for no icon.  According to Apple's\n   documentation, this should be a 16-by-16 pixel version of the application's\n   icon with a transparent background, saved as a PNG file.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1521: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_kb_product\n\n   The product tag for use with :confval:`applehelp_kb_url`.  Defaults to\n   :samp:`'{<project>}-{<release>}'`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1526: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_kb_url\n\n   The URL for your knowledgebase server,\n   e.g. ``https://example.com/kbsearch.py?p='product'&q='query'&l='lang'``.\n   Help Viewer will replace the values ``'product'``, ``'query'`` and\n   ``'lang'`` at runtime with the contents of :confval:`applehelp_kb_product`,\n   the text entered by the user in the search box and the user's system\n   language respectively.\n\n   Defaults to ``None`` for no remote search.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1537: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_remote_url\n\n   The URL for remote content.  You can place a copy of your Help Book's\n   ``Resources`` folder at this location and Help Viewer will attempt to use\n   it to fetch updated content.\n\n   e.g. if you set it to ``https://example.com/help/Foo/`` and Help Viewer\n   wants a copy of ``index.html`` for an English speaking customer, it will\n   look at ``https://example.com/help/Foo/en.lproj/index.html``.\n\n   Defaults to ``None`` for no remote content.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1549: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_index_anchors\n\n   If ``True``, tell the help indexer to index anchors in the generated HTML.\n   This can be useful for jumping to a particular topic using the\n   ``AHLookupAnchor`` function or the ``openHelpAnchor:inBook:`` method in\n   your code.  It also allows you to use ``help:anchor`` URLs; see the Apple\n   documentation for more information on this topic.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1557: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_min_term_length\n\n   Controls the minimum term length for the help indexer.  Defaults to\n   ``None``, which means the default will be used.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1562: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_stopwords\n\n   Either a language specification (to use the built-in stopwords), or the\n   path to a stopwords plist, or ``None`` if you do not want to use stopwords.\n   The default stopwords plist can be found at\n   ``/usr/share/hiutil/Stopwords.plist`` and contains, at time of writing,\n   stopwords for the following languages:\n\n   =========  ====\n   Language   Code\n   =========  ====\n   English    en\n   German     de\n   Spanish    es\n   French     fr\n   Swedish    sv\n   Hungarian  hu\n   Italian    it\n   =========  ====\n\n   Defaults to :confval:`language`, or if that is not set, to :confval:`en`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1584: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_locale\n\n   Specifies the locale to generate help for.  This is used to determine\n   the name of the ``.lproj`` folder inside the Help Book\u2019s ``Resources``, and\n   is passed to the help indexer.\n\n   Defaults to :confval:`language`, or if that is not set, to :confval:`en`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1592: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_title\n\n   Specifies the help book title.  Defaults to :samp:`'{<project>} Help'`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1596: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_codesign_identity\n\n   Specifies the identity to use for code signing, or ``None`` if code signing\n   is not to be performed.\n\n   Defaults to the value of the environment variable ``CODE_SIGN_IDENTITY``,\n   which is set by Xcode for script build phases, or ``None`` if that variable\n   is not set.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1605: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_codesign_flags\n\n   A *list* of additional arguments to pass to :program:`codesign` when\n   signing the help book.\n\n   Defaults to a list based on the value of the environment variable\n   ``OTHER_CODE_SIGN_FLAGS``, which is set by Xcode for script build phases,\n   or the empty list if that variable is not set.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1614: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_indexer_path\n\n   The path to the :program:`hiutil` program.  Defaults to\n   ``'/usr/bin/hiutil'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1619: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_codesign_path\n\n   The path to the :program:`codesign` program.  Defaults to\n   ``'/usr/bin/codesign'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1624: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_disable_external_tools\n\n   If ``True``, the builder will not run the indexer or the code signing tool,\n   no matter what other settings are specified.\n\n   This is mainly useful for testing, or where you want to run the Sphinx\n   build on a non-Mac OS X platform and then complete the final steps on OS X\n   for some reason.\n\n   Defaults to ``False``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1646: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_basename\n\n   The basename for the epub file.  It defaults to the :confval:`project` name.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1650: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_theme\n\n   The HTML theme for the epub output.  Since the default themes are not\n   optimized for small screen space, using the same theme for HTML and epub\n   output is usually not wise.  This defaults to ``'epub'``, a theme designed\n   to save visual space.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1657: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_theme_options\n\n   A dictionary of options that influence the look and feel of the selected\n   theme.  These are theme-specific.  For the options understood by the builtin\n   themes, see :ref:`this section <builtin-themes>`.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1665: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_title\n\n   The title of the document.  It defaults to the :confval:`html_title` option\n   but can be set independently for epub creation.  It defaults to the\n   :confval:`project` option.\n\n   .. versionchanged:: 2.0\n      It defaults to the ``project`` option.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1674: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_description\n\n   The description of the document. The default value is ``'unknown'``.\n\n   .. versionadded:: 1.4\n\n   .. versionchanged:: 1.5\n      Renamed from ``epub3_description``\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1683: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_author\n\n   The author of the document.  This is put in the Dublin Core metadata.  It\n   defaults to the :confval:`author` option.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1688: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_contributor\n\n   The name of a person, organization, etc. that played a secondary role in\n   the creation of the content of an EPUB Publication. The default value is\n   ``'unknown'``.\n\n   .. versionadded:: 1.4\n\n   .. versionchanged:: 1.5\n      Renamed from ``epub3_contributor``\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1699: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_language\n\n   The language of the document.  This is put in the Dublin Core metadata.  The\n   default is the :confval:`language` option or ``'en'`` if unset.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1704: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_publisher\n\n   The publisher of the document.  This is put in the Dublin Core metadata.\n   You may use any sensible string, e.g. the project homepage.  The defaults to\n   the :confval:`author` option.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1710: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_copyright\n\n   The copyright of the document.  It defaults to the :confval:`copyright`\n   option but can be set independently for epub creation.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1715: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_identifier\n\n   An identifier for the document.  This is put in the Dublin Core metadata.\n   For published documents this is the ISBN number, but you can also use an\n   alternative scheme, e.g. the project homepage.  The default value is\n   ``'unknown'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1722: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_scheme\n\n   The publication scheme for the :confval:`epub_identifier`.  This is put in\n   the Dublin Core metadata.  For published books the scheme is ``'ISBN'``.  If\n   you use the project homepage, ``'URL'`` seems reasonable.  The default value\n   is ``'unknown'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1729: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_uid\n\n   A unique identifier for the document.  This is put in the Dublin Core\n   metadata.  You may use a\n   `XML's Name format <https://www.w3.org/TR/REC-xml/#NT-NameStartChar>`_\n   string.  You can't use hyphen, period, numbers as a first character.  The\n   default value is ``'unknown'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1737: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_cover\n\n   The cover page information.  This is a tuple containing the filenames of\n   the cover image and the html template.  The rendered html cover page is\n   inserted as the first item in the spine in :file:`content.opf`.  If the\n   template filename is empty, no html cover page is created.  No cover at all\n   is created if the tuple is empty.  Examples::\n\n      epub_cover = ('_static/cover.png', 'epub-cover.html')\n      epub_cover = ('_static/cover.png', '')\n      epub_cover = ()\n\n   The default value is ``()``.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1753: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_css_files\n\n   A list of CSS files.  The entry must be a *filename* string or a tuple\n   containing the *filename* string and the *attributes* dictionary.  For more\n   information, see :confval:`html_css_files`.\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1761: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_guide\n\n   Meta data for the guide element of :file:`content.opf`. This is a\n   sequence of tuples containing the *type*, the *uri* and the *title* of\n   the optional guide information. See the OPF documentation\n   at `<http://idpf.org/epub>`_ for details. If possible, default entries\n   for the *cover* and *toc* types are automatically inserted. However,\n   the types can be explicitly overwritten if the default entries are not\n   appropriate. Example::\n\n      epub_guide = (('cover', 'cover.html', u'Cover Page'),)\n\n   The default value is ``()``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1775: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_pre_files\n\n   Additional files that should be inserted before the text generated by\n   Sphinx. It is a list of tuples containing the file name and the title.\n   If the title is empty, no entry is added to :file:`toc.ncx`.  Example::\n\n      epub_pre_files = [\n          ('index.html', 'Welcome'),\n      ]\n\n   The default value is ``[]``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1787: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_post_files\n\n   Additional files that should be inserted after the text generated by Sphinx.\n   It is a list of tuples containing the file name and the title.  This option\n   can be used to add an appendix.  If the title is empty, no entry is added\n   to :file:`toc.ncx`.  The default value is ``[]``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1794: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_exclude_files\n\n   A list of files that are generated/copied in the build directory but should\n   not be included in the epub file.  The default value is ``[]``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1799: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_tocdepth\n\n   The depth of the table of contents in the file :file:`toc.ncx`.  It should\n   be an integer greater than zero.  The default value is 3.  Note: A deeply\n   nested table of contents may be difficult to navigate.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1805: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_tocdup\n\n   This flag determines if a toc entry is inserted again at the beginning of\n   its nested toc listing.  This allows easier navigation to the top of\n   a chapter, but can be confusing because it mixes entries of different\n   depth in one list.  The default value is ``True``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1812: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_tocscope\n\n   This setting control the scope of the epub table of contents.  The setting\n   can have the following values:\n\n   * ``'default'`` -- include all toc entries that are not hidden (default)\n   * ``'includehidden'`` -- include all toc entries\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1822: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_fix_images\n\n   This flag determines if sphinx should try to fix image formats that are not\n   supported by some epub readers.  At the moment palette images with a small\n   color table are upgraded.  You need Pillow, the Python Image Library,\n   installed to use this option.  The default value is ``False`` because the\n   automatic conversion may lose information.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1832: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_max_image_width\n\n   This option specifies the maximum width of images.  If it is set to a value\n   greater than zero, images with a width larger than the given value are\n   scaled accordingly.  If it is zero, no scaling is performed. The default\n   value is ``0``.  You need the Python Image Library (Pillow) installed to use\n   this option.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1842: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_show_urls\n\n   Control whether to display URL addresses. This is very useful for\n   readers that have no other means to display the linked URL. The\n   settings can have the following values:\n\n   * ``'inline'`` -- display URLs inline in parentheses (default)\n   * ``'footnote'`` -- display URLs in footnotes\n   * ``'no'`` -- do not display URLs\n\n   The display of inline URLs can be customized by adding CSS rules for the\n   class ``link-target``.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1857: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_use_index\n\n   If true, add an index to the epub document.  It defaults to the\n   :confval:`html_use_index` option but can be set independently for epub\n   creation.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1865: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_writing_mode\n\n   It specifies writing direction. It can accept ``'horizontal'`` (default) and\n   ``'vertical'``\n\n   .. list-table::\n      :header-rows: 1\n      :stub-columns: 1\n\n      - * ``epub_writing_mode``\n        * ``'horizontal'``\n        * ``'vertical'``\n      - * writing-mode [#]_\n        * ``horizontal-tb``\n        * ``vertical-rl``\n      - * page progression\n        * left to right\n        * right to left\n      - * iBook's Scroll Theme support\n        * scroll-axis is vertical.\n        * scroll-axis is horizontal.\n\n   .. [#] https://developer.mozilla.org/en-US/docs/Web/CSS/writing-mode\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1897: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_engine\n\n   The LaTeX engine to build the docs.  The setting can have the following\n   values:\n\n   * ``'pdflatex'`` -- PDFLaTeX (default)\n   * ``'xelatex'`` -- XeLaTeX\n   * ``'lualatex'`` -- LuaLaTeX\n   * ``'platex'`` -- pLaTeX (default if :confval:`language` is ``'ja'``)\n   * ``'uplatex'`` -- upLaTeX (experimental)\n\n   ``'pdflatex'``\\ 's support for Unicode characters is limited.\n\n   .. note::\n\n      2.0 adds to ``'pdflatex'`` support in Latin language document of\n      occasional Cyrillic or Greek letters or words.  This is not automatic,\n      see the discussion of the :confval:`latex_elements` ``'fontenc'`` key.\n\n   If your project uses Unicode characters, setting the engine to\n   ``'xelatex'`` or ``'lualatex'`` and making sure to use an OpenType font\n   with wide-enough glyph coverage is often easier than trying to make\n   ``'pdflatex'`` work with the extra Unicode characters.  Since Sphinx 2.0\n   the default is the GNU FreeFont which covers well Latin, Cyrillic and\n   Greek.\n\n   .. versionchanged:: 2.1.0\n\n      Use ``xelatex`` (and LaTeX package ``xeCJK``) by default for Chinese\n      documents.\n\n   .. versionchanged:: 2.2.1\n\n      Use ``xelatex`` by default for Greek documents.\n\n   .. versionchanged:: 2.3\n\n      Add ``uplatex`` support.\n\n   Contrarily to :ref:`MathJaX math rendering in HTML output <math-support>`,\n   LaTeX requires some extra configuration to support Unicode literals in\n   :rst:dir:`math`: the only comprehensive solution (as far as we know) is to\n   use ``'xelatex'`` or ``'lualatex'`` *and* to add\n   ``r'\\usepackage{unicode-math}'`` (e.g. via the :confval:`latex_elements`\n   ``'preamble'`` key).  You may prefer\n   ``r'\\usepackage[math-style=literal]{unicode-math}'`` to keep a Unicode\n   literal such as ``\u03b1`` (U+03B1) for example as is in output, rather than\n   being rendered as :math:`\\alpha`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1946: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_documents\n\n   This value determines how to group the document tree into LaTeX source files.\n   It must be a list of tuples ``(startdocname, targetname, title, author,\n   theme, toctree_only)``, where the items are:\n\n   *startdocname*\n     String that specifies the :term:`document name` of the LaTeX file's master\n     document.  All documents referenced by the *startdoc* document in TOC trees\n     will be included in the LaTeX file.  (If you want to use the default master\n     document for your LaTeX build, provide your :confval:`master_doc` here.)\n\n   *targetname*\n     File name of the LaTeX file in the output directory.\n\n   *title*\n     LaTeX document title.  Can be empty to use the title of the *startdoc*\n     document.  This is inserted as LaTeX markup, so special characters like a\n     backslash or ampersand must be represented by the proper LaTeX commands if\n     they are to be inserted literally.\n\n   *author*\n     Author for the LaTeX document.  The same LaTeX markup caveat as for *title*\n     applies.  Use ``\\\\and`` to separate multiple authors, as in:\n     ``'John \\\\and Sarah'`` (backslashes must be Python-escaped to reach LaTeX).\n\n   *theme*\n     LaTeX theme.  See :confval:`latex_theme`.\n\n   *toctree_only*\n     Must be ``True`` or ``False``.  If true, the *startdoc* document itself is\n     not included in the output, only the documents referenced by it via TOC\n     trees.  With this option, you can put extra stuff in the master document\n     that shows up in the HTML, but not the LaTeX output.\n\n   .. versionadded:: 1.2\n      In the past including your own document class required you to prepend the\n      document class name with the string \"sphinx\". This is not necessary\n      anymore.\n\n   .. versionadded:: 0.3\n      The 6th item ``toctree_only``.  Tuples with 5 items are still accepted.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1989: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_logo\n\n   If given, this must be the name of an image file (relative to the\n   configuration directory) that is the logo of the docs.  It is placed at the\n   top of the title page.  Default: ``None``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1995: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_toplevel_sectioning\n\n   This value determines the topmost sectioning unit. It should be chosen from\n   ``'part'``, ``'chapter'`` or ``'section'``. The default is ``None``;\n   the topmost\n   sectioning unit is switched by documentclass: ``section`` is used if\n   documentclass will be ``howto``, otherwise ``chapter`` will be used.\n\n   Note that if LaTeX uses ``\\part`` command, then the numbering of sectioning\n   units one level deep gets off-sync with HTML numbering, because LaTeX\n   numbers continuously ``\\chapter`` (or ``\\section`` for ``howto``.)\n\n   .. versionadded:: 1.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2009: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_appendices\n\n   A list of document names to append as an appendix to all manuals.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2013: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_domain_indices\n\n   If true, generate domain-specific indices in addition to the general index.\n   For e.g. the Python domain, this is the global module index.  Default is\n   ``True``.\n\n   This value can be a bool or a list of index names that should be generated,\n   like for :confval:`html_domain_indices`.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2024: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_show_pagerefs\n\n   If true, add page references after internal references.  This is very useful\n   for printed copies of the manual.  Default is ``False``.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2031: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_show_urls\n\n   Control whether to display URL addresses.  This is very useful for printed\n   copies of the manual.  The setting can have the following values:\n\n   * ``'no'`` -- do not display URLs (default)\n   * ``'footnote'`` -- display URLs in footnotes\n   * ``'inline'`` -- display URLs inline in parentheses\n\n   .. versionadded:: 1.0\n   .. versionchanged:: 1.1\n      This value is now a string; previously it was a boolean value, and a true\n      value selected the ``'inline'`` display.  For backwards compatibility,\n      ``True`` is still accepted.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2046: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_use_latex_multicolumn\n\n   The default is ``False``: it means that Sphinx's own macros are used for\n   merged cells from grid tables. They allow general contents (literal blocks,\n   lists, blockquotes, ...) but may have problems if the\n   :rst:dir:`tabularcolumns` directive was used to inject LaTeX mark-up of the\n   type ``>{..}``, ``<{..}``, ``@{..}`` as column specification.\n\n   Setting to ``True`` means to use LaTeX's standard ``\\multicolumn``; this is\n   incompatible with literal blocks in the horizontally merged cell, and also\n   with multiple paragraphs in such cell if the table is rendered using\n   ``tabulary``.\n\n   .. versionadded:: 1.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2061: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_use_xindy\n\n   If ``True``, the PDF build from the LaTeX files created by Sphinx\n   will use :program:`xindy` (doc__) rather than :program:`makeindex`\n   for preparing the index of general terms (from :rst:dir:`index`\n   usage).  This means that words with UTF-8 characters will get\n   ordered correctly for the :confval:`language`.\n\n   __ http://xindy.sourceforge.net/\n\n   - This option is ignored if :confval:`latex_engine` is ``'platex'``\n     (Japanese documents; :program:`mendex` replaces :program:`makeindex`\n     then).\n\n   - The default is ``True`` for ``'xelatex'`` or ``'lualatex'`` as\n     :program:`makeindex`, if any indexed term starts with a non-ascii\n     character, creates ``.ind`` files containing invalid bytes for\n     UTF-8 encoding. With ``'lualatex'`` this then breaks the PDF\n     build.\n\n   - The default is ``False`` for ``'pdflatex'`` but ``True`` is\n     recommended for non-English documents as soon as some indexed\n     terms use non-ascii characters from the language script.\n\n   Sphinx adds to :program:`xindy` base distribution some dedicated support\n   for using ``'pdflatex'`` engine with Cyrillic scripts.  And whether with\n   ``'pdflatex'`` or Unicode engines, Cyrillic documents handle correctly the\n   indexing of Latin names, even with diacritics.\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2092: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_elements\n\n   .. versionadded:: 0.5\n\n   Its :ref:`documentation <latex_elements_confval>` has moved to :doc:`/latex`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2098: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_docclass\n\n   A dictionary mapping ``'howto'`` and ``'manual'`` to names of real document\n   classes that will be used as the base for the two Sphinx classes.  Default\n   is to use ``'article'`` for ``'howto'`` and ``'report'`` for ``'manual'``.\n\n   .. versionadded:: 1.0\n\n   .. versionchanged:: 1.5\n\n      In Japanese docs (:confval:`language` is ``'ja'``), by default\n      ``'jreport'`` is used for ``'howto'`` and ``'jsbook'`` for ``'manual'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2111: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_additional_files\n\n   A list of file names, relative to the configuration directory, to copy to\n   the build directory when building LaTeX output.  This is useful to copy\n   files that Sphinx doesn't copy automatically, e.g. if they are referenced in\n   custom LaTeX added in ``latex_elements``.  Image files that are referenced\n   in source files (e.g. via ``.. image::``) are copied automatically.\n\n   You have to make sure yourself that the filenames don't collide with those\n   of any automatically copied files.\n\n   .. versionadded:: 0.6\n\n   .. versionchanged:: 1.2\n      This overrides the files which is provided from Sphinx such as\n      ``sphinx.sty``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2128: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_theme\n\n   The \"theme\" that the LaTeX output should use.  It is a collection of settings\n   for LaTeX output (ex. document class, top level sectioning unit and so on).\n\n   As a built-in LaTeX themes, ``manual`` and ``howto`` are bundled.\n\n   ``manual``\n     A LaTeX theme for writing a manual.  It imports the ``report`` document\n     class (Japanese documents use ``jsbook``).\n\n   ``howto``\n     A LaTeX theme for writing an article.  It imports the ``article`` document\n     class (Japanese documents use ``jreport`` rather).  :confval:`latex_appendices`\n     is available only for this theme.\n\n   It defaults to ``'manual'``.\n\n   .. versionadded:: 3.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2148: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_theme_options\n\n   A dictionary of options that influence the look and feel of the selected\n   theme.\n\n   .. versionadded:: 3.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2155: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_theme_path\n\n   A list of paths that contain custom LaTeX themes as subdirectories.  Relative\n   paths are taken as relative to the configuration directory.\n\n   .. versionadded:: 3.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2170: WARNING: Unknown directive type \"confval\".\n\n.. confval:: text_newlines\n\n   Determines which end-of-line character(s) are used in text output.\n\n   * ``'unix'``: use Unix-style line endings (``\\n``)\n   * ``'windows'``: use Windows-style line endings (``\\r\\n``)\n   * ``'native'``: use the line ending style of the platform the documentation\n     is built on\n\n   Default: ``'unix'``.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2183: WARNING: Unknown directive type \"confval\".\n\n.. confval:: text_sectionchars\n\n   A string of 7 characters that should be used for underlining sections.\n   The first character is used for first-level headings, the second for\n   second-level headings and so on.\n\n   The default is ``'*=-~\"+`'``.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2193: WARNING: Unknown directive type \"confval\".\n\n.. confval:: text_add_secnumbers\n\n   A boolean that decides whether section numbers are included in text output.\n   Default is ``True``.\n\n   .. versionadded:: 1.7\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2200: WARNING: Unknown directive type \"confval\".\n\n.. confval:: text_secnumber_suffix\n\n   Suffix for section numbers in text output.  Default: ``\". \"``. Set to\n   ``\" \"`` to suppress the final dot on section numbers.\n\n   .. versionadded:: 1.7\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2215: WARNING: Unknown directive type \"confval\".\n\n.. confval:: man_pages\n\n   This value determines how to group the document tree into manual pages.  It\n   must be a list of tuples ``(startdocname, name, description, authors,\n   section)``, where the items are:\n\n   *startdocname*\n     String that specifies the :term:`document name` of the manual page's master\n     document. All documents referenced by the *startdoc* document in TOC trees\n     will be included in the manual file.  (If you want to use the default\n     master document for your manual pages build, use your :confval:`master_doc`\n     here.)\n\n   *name*\n     Name of the manual page.  This should be a short string without spaces or\n     special characters.  It is used to determine the file name as well as the\n     name of the manual page (in the NAME section).\n\n   *description*\n     Description of the manual page.  This is used in the NAME section.\n\n   *authors*\n     A list of strings with authors, or a single string.  Can be an empty\n     string or list if you do not want to automatically generate an AUTHORS\n     section in the manual page.\n\n   *section*\n     The manual page section.  Used for the output file name as well as in the\n     manual page header.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2247: WARNING: Unknown directive type \"confval\".\n\n.. confval:: man_show_urls\n\n   If true, add URL addresses after links.  Default is ``False``.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2253: WARNING: Unknown directive type \"confval\".\n\n.. confval:: man_make_section_directory\n\n   If true, make a section directory on build man page.  Default is False.\n\n   .. versionadded:: 3.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2267: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_documents\n\n   This value determines how to group the document tree into Texinfo source\n   files.  It must be a list of tuples ``(startdocname, targetname, title,\n   author, dir_entry, description, category, toctree_only)``, where the items\n   are:\n\n   *startdocname*\n     String that specifies the :term:`document name` of the the Texinfo file's\n     master document.  All documents referenced by the *startdoc* document in\n     TOC trees will be included in the Texinfo file.  (If you want to use the\n     default master document for your Texinfo build, provide your\n     :confval:`master_doc` here.)\n\n   *targetname*\n     File name (no extension) of the Texinfo file in the output directory.\n\n   *title*\n     Texinfo document title.  Can be empty to use the title of the *startdoc*\n     document.  Inserted as Texinfo markup, so special characters like ``@`` and\n     ``{}`` will need to be escaped to be inserted literally.\n\n   *author*\n     Author for the Texinfo document.  Inserted as Texinfo markup.  Use ``@*``\n     to separate multiple authors, as in: ``'John@*Sarah'``.\n\n   *dir_entry*\n     The name that will appear in the top-level ``DIR`` menu file.\n\n   *description*\n     Descriptive text to appear in the top-level ``DIR`` menu file.\n\n   *category*\n     Specifies the section which this entry will appear in the top-level\n     ``DIR`` menu file.\n\n   *toctree_only*\n     Must be ``True`` or ``False``.  If true, the *startdoc* document itself is\n     not included in the output, only the documents referenced by it via TOC\n     trees.  With this option, you can put extra stuff in the master document\n     that shows up in the HTML, but not the Texinfo output.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2311: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_appendices\n\n   A list of document names to append as an appendix to all manuals.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2317: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_domain_indices\n\n   If true, generate domain-specific indices in addition to the general index.\n   For e.g. the Python domain, this is the global module index.  Default is\n   ``True``.\n\n   This value can be a bool or a list of index names that should be generated,\n   like for :confval:`html_domain_indices`.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2328: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_show_urls\n\n   Control how to display URL addresses.\n\n   * ``'footnote'`` -- display URLs in footnotes (default)\n   * ``'no'`` -- do not display URLs\n   * ``'inline'`` -- display URLs inline in parentheses\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2338: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_no_detailmenu\n\n   If true, do not generate a ``@detailmenu`` in the \"Top\" node's menu\n   containing entries for each sub-node in the document.  Default is ``False``.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2345: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_elements\n\n   A dictionary that contains Texinfo snippets that override those Sphinx\n   usually puts into the generated ``.texi`` files.\n\n   * Keys that you may want to override include:\n\n     ``'paragraphindent'``\n        Number of spaces to indent the first line of each paragraph, default\n        ``2``.  Specify ``0`` for no indentation.\n\n     ``'exampleindent'``\n        Number of spaces to indent the lines for examples or literal blocks,\n        default ``4``.  Specify ``0`` for no indentation.\n\n     ``'preamble'``\n        Texinfo markup inserted near the beginning of the file.\n\n     ``'copying'``\n        Texinfo markup inserted within the ``@copying`` block and displayed\n        after the title.  The default value consists of a simple title page\n        identifying the project.\n\n   * Keys that are set by other options and therefore should not be overridden\n     are:\n\n     ``'author'``\n     ``'body'``\n     ``'date'``\n     ``'direntry'``\n     ``'filename'``\n     ``'project'``\n     ``'release'``\n     ``'title'``\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2391: WARNING: Unknown directive type \"confval\".\n\n.. confval:: qthelp_basename\n\n   The basename for the qthelp file.  It defaults to the :confval:`project`\n   name.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2396: WARNING: Unknown directive type \"confval\".\n\n.. confval:: qthelp_namespace\n\n   The namespace for the qthelp file.  It defaults to\n   ``org.sphinx.<project_name>.<project_version>``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2401: WARNING: Unknown directive type \"confval\".\n\n.. confval:: qthelp_theme\n\n   The HTML theme for the qthelp output.\n   This defaults to ``'nonav'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2406: WARNING: Unknown directive type \"confval\".\n\n.. confval:: qthelp_theme_options\n\n   A dictionary of options that influence the look and feel of the selected\n   theme.  These are theme-specific.  For the options understood by the builtin\n   themes, see :ref:`this section <builtin-themes>`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2416: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_ignore\n\n   A list of regular expressions that match URIs that should not be checked\n   when doing a ``linkcheck`` build.  Example::\n\n      linkcheck_ignore = [r'http://localhost:\\d+/']\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2425: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_request_headers\n\n   A dictionary that maps baseurls to HTTP request headers.\n\n   The key is a URL base string like ``\"https://sphinx-doc.org/\"``.  To specify\n   headers for other hosts, ``\"*\"`` can be used.  It matches all hosts only when\n   the URL does not match other settings.\n\n   The value is a dictionary that maps header name to its value.\n\n   Example:\n\n   .. code-block:: python\n\n      linkcheck_request_headers = {\n          \"https://sphinx-doc.org/\": {\n              \"Accept\": \"text/html\",\n              \"Accept-Encoding\": \"utf-8\",\n          },\n          \"*\": {\n              \"Accept\": \"text/html,application/xhtml+xml\",\n          }\n      }\n\n   .. versionadded:: 3.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2451: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_retries\n\n   The number of times the linkcheck builder will attempt to check a URL before\n   declaring it broken. Defaults to 1 attempt.\n\n   .. versionadded:: 1.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2458: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_timeout\n\n   A timeout value, in seconds, for the linkcheck builder.  The default is to\n   use Python's global socket timeout.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2465: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_workers\n\n   The number of worker threads to use when checking links.  Default is 5\n   threads.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2472: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_anchors\n\n   If true, check the validity of ``#anchor``\\ s in links. Since this requires\n   downloading the whole document, it's considerably slower when enabled.\n   Default is ``True``.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2480: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_anchors_ignore\n\n   A list of regular expressions that match anchors Sphinx should skip when\n   checking the validity of anchors in links. This allows skipping anchors that\n   a website's JavaScript adds to control dynamic pages or when triggering an\n   internal REST request. Default is ``[\"^!\"]``.\n\n   .. note::\n\n      If you want to ignore anchors of a specific page or of pages that match a\n      specific pattern (but still check occurrences of the same page(s) that\n      don't have anchors), use :confval:`linkcheck_ignore` instead, for example\n      as follows::\n\n         linkcheck_ignore = [\n            'http://www.sphinx-doc.org/en/1.7/intro.html#'\n         ]\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2500: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_auth\n\n   Pass authentication information when doing a ``linkcheck`` build.\n\n   A list of ``(regex_pattern, auth_info)`` tuples where the items are:\n\n   *regex_pattern*\n     A regular expression that matches a URI.\n   *auth_info*\n     Authentication information to use for that URI. The value can be anything\n     that is understood by the ``requests`` library (see `requests\n     Authentication <requests-auth>`_ for details).\n\n     .. _requests-auth: https://requests.readthedocs.io/en/master/user/authentication/\n\n   The ``linkcheck`` builder will use the first matching ``auth_info`` value\n   it can find in the :confval:`linkcheck_auth` list, so values earlier in the\n   list have higher priority.\n\n   Example::\n\n      linkcheck_auth = [\n        ('https://foo\\.yourcompany\\.com/.+', ('johndoe', 'secret')),\n        ('https://.+\\.yourcompany\\.com/.+', HTTPDigestAuth(...)),\n      ]\n\n   .. versionadded:: 2.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2532: WARNING: Unknown directive type \"confval\".\n\n.. confval:: xml_pretty\n\n   If true, pretty-print the XML.  Default is ``True``.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2552: WARNING: Unknown directive type \"confval\".\n\n.. confval:: c_id_attributes\n\n   A list of strings that the parser additionally should accept as attributes.\n   This can for example be used when attributes have been ``#define`` d for\n   portability.\n\n   .. versionadded:: 3.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2560: WARNING: Unknown directive type \"confval\".\n\n.. confval:: c_paren_attributes\n\n   A list of strings that the parser additionally should accept as attributes\n   with one argument.  That is, if ``my_align_as`` is in the list, then\n   ``my_align_as(X)`` is parsed as an attribute for all strings ``X`` that have\n   balanced braces (``()``, ``[]``, and ``{}``).  This can for example be used\n   when attributes have been ``#define`` d for portability.\n\n   .. versionadded:: 3.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2570: WARNING: Unknown directive type \"confval\".\n\n.. confval:: c_allow_pre_v3\n\n   A boolean (default ``False``) controlling whether to parse and try to\n   convert pre-v3 style type directives and type roles.\n\n   .. versionadded:: 3.2\n   .. deprecated:: 3.2\n      Use the directives and roles added in v3.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2579: WARNING: Unknown directive type \"confval\".\n\n.. confval:: c_warn_on_allowed_pre_v3\n\n   A boolean (default ``True``) controlling whether to warn when a pre-v3\n   style type directive/role is parsed and converted.\n\n   .. versionadded:: 3.2\n   .. deprecated:: 3.2\n      Use the directives and roles added in v3.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2593: WARNING: Unknown directive type \"confval\".\n\n.. confval:: cpp_index_common_prefix\n\n   A list of prefixes that will be ignored when sorting C++ objects in the\n   global index.  For example ``['awesome_lib::']``.\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2600: WARNING: Unknown directive type \"confval\".\n\n.. confval:: cpp_id_attributes\n\n   A list of strings that the parser additionally should accept as attributes.\n   This can for example be used when attributes have been ``#define`` d for\n   portability.\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2608: WARNING: Unknown directive type \"confval\".\n\n.. confval:: cpp_paren_attributes\n\n   A list of strings that the parser additionally should accept as attributes\n   with one argument.  That is, if ``my_align_as`` is in the list, then\n   ``my_align_as(X)`` is parsed as an attribute for all strings ``X`` that have\n   balanced braces (``()``, ``[]``, and ``{}``).  This can for example be used\n   when attributes have been ``#define`` d for portability.\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2622: WARNING: Include file '/sphinx-doc__sphinx/_static/conf.py.txt' not found or reading it failed\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2541: WARNING: Footnote [1] is not referenced.\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:119: WARNING: Unknown directive type \"todo\".\n\n.. todo:: Update the below link when we add new guides on these.\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:161: WARNING: Unknown directive type \"todo\".\n\n.. todo:: Move this whole section into a guide on rST or directives\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:252: WARNING: Unknown directive type \"todo\".\n\n.. todo:: Move this entire doc to a different section\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:262: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:297: WARNING: Unknown directive type \"todo\".\n\n.. todo:: Move this doc to another section\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:308: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:308: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:312: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:317: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:13: WARNING: Unknown directive type \"todo\".\n\n.. todo:: Populate when the 'builders' document is split up.\n/sphinx-doc__sphinx/doc/usage/theming.rst:39: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:46: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:57: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:161: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:168: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:176: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:183: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:296: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:117: WARNING: image file not readable: _static/themes/alabaster.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:118: WARNING: image file not readable: _static/themes/classic.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:119: WARNING: image file not readable: _static/themes/sphinxdoc.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:120: WARNING: image file not readable: _static/themes/scrolls.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:121: WARNING: image file not readable: _static/themes/agogo.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:122: WARNING: image file not readable: _static/themes/traditional.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:123: WARNING: image file not readable: _static/themes/nature.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:124: WARNING: image file not readable: _static/themes/haiku.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:125: WARNING: image file not readable: _static/themes/pyramid.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:126: WARNING: image file not readable: _static/themes/bizstyle.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:347: WARNING: image file not readable: _static/themes/sphinx_rtd_theme.png\nWARNING: autodoc: failed to import module 'autodoc_dummy_module'; the following exception was raised:\nNo module named 'autodoc_dummy_module'\nWARNING: autodoc: failed to import module 'autodoc_dummy_foo' from module 'bug2437'; the following exception was raised:\nNo module named 'bug2437'\nWARNING: autodoc: failed to import module 'autodoc_dummy_bar'; the following exception was raised:\nNo module named 'autodoc_dummy_bar'\nWARNING: autodoc: failed to import function 'typehints.incr' from module 'target'; the following exception was raised:\nNo module named 'target'\nWARNING: autodoc: failed to import function 'typehints.tuple_args' from module 'target'; the following exception was raised:\nNo module named 'target'\nWARNING: autodoc: failed to import module 'coverage_ignored'; the following exception was raised:\nNo module named 'coverage_ignored'\nWARNING: autodoc: failed to import module 'coverage_not_ignored'; the following exception was raised:\nNo module named 'coverage_not_ignored'\nWARNING: autodoc: failed to import module 'bar' from module 'dir'; the following exception was raised:\nNo module named 'dir'\nWARNING: autodoc: failed to import module 'foo'; the following exception was raised:\nNo module named 'foo'\nWARNING: autodoc: failed to import function 'func1' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'func2' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'mod1.func1' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'mod2.func2' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'Class1' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'Class2' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'mod1.Class1' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'mod2.Class2' from module 'spam'; the following exception was raised:\nNo module named 'spam'\n/sphinx-doc__sphinx/tests/roots/test-ext-viewcode/index.rst:23: WARNING: Object named 'func1' not found in include file '/sphinx-doc__sphinx/tests/roots/test-ext-viewcode/spam/__init__.py'\nWARNING: autodoc: failed to import class 'mod3.Class3' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import module 'mod3' from module 'spam'; the following exception was raised:\nNo module named 'spam'\n/sphinx-doc__sphinx/tests/roots/test-latex-labels/index.rst:10: WARNING: image file not readable: tests/roots/test-latex-labels/logo.jpg\n/sphinx-doc__sphinx/tests/roots/test-latex-labels/index.rst:14: WARNING: image file not readable: tests/roots/test-latex-labels/logo.jpg\n/sphinx-doc__sphinx/tests/roots/test-latex-title/index.rst:8: WARNING: toctree contains reference to nonexisting document 'tests/roots/test-latex-title/foo'\n/sphinx-doc__sphinx/tests/roots/test-latex-title/index.rst:8: WARNING: toctree contains reference to nonexisting document 'tests/roots/test-latex-title/bar'\n/sphinx-doc__sphinx/tests/roots/test-prolog/index.rst:4: WARNING: toctree contains reference to nonexisting document 'tests/roots/test-prolog/markdown'\n/sphinx-doc__sphinx/tests/roots/test-roles-download/index.rst:6: WARNING: download file not readable: /sphinx-doc__sphinx/tests/roots/test-roles-download/not_found.dat\nWARNING: autodoc: failed to import module 'autodoc_fodder'; the following exception was raised:\nNo module named 'autodoc_fodder'\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:19: WARNING: Encoding 'utf-8-sig' used for reading included file '/sphinx-doc__sphinx/tests/roots/test-warnings/wrongenc.inc' seems to be wrong, try giving an :encoding: option\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:27: WARNING: invalid single index entry ''\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:10: WARNING: image file not readable: tests/roots/test-warnings/foo.png\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:24: WARNING: download file not readable: /sphinx-doc__sphinx/tests/roots/test-warnings/nonexisting.png\n/sphinx-doc__sphinx/tests/roots/test-numbered-circular/sub.rst:1: WARNING: tests/roots/test-numbered-circular/index is already assigned section numbers (nested numbered toctree?)\n/sphinx-doc__sphinx/tests/roots/test-toctree-maxdepth/qux.rst:4: WARNING: tests/roots/test-toctree-maxdepth/foo is already assigned section numbers (nested numbered toctree?)\n/sphinx-doc__sphinx/tests/roots/test-toctree-maxdepth/qux.rst:4: WARNING: tests/roots/test-toctree-maxdepth/bar is already assigned section numbers (nested numbered toctree?)\n/sphinx-doc__sphinx/CONTRIBUTING.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/README.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/doc/contents.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/sphinx/ext/autosummary/templates/autosummary/base.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/sphinx/ext/autosummary/templates/autosummary/class.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/sphinx/ext/autosummary/templates/autosummary/module.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-add_enumerable_node/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-api-set-translator/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-autosummary/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-autosummary/sphinx.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-basic/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-build-html-translator/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-builder-dirhtml/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-builder-gettext-dont-rebuild-mo/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-changes/contents.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-correct-year/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-default_role/foo.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-default_role/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-directive-code/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-directive-only/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-directives-raw/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-docutilsconf/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-c/anon-dup-decl.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-c/function_param_target.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-c/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-c/namespace.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-c/semicolon.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/anon-dup-decl.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/any-role.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/backslash.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/lookup-key-overload.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/multi-decl-lookup.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/roles.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/roles-targets-ok.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/roles-targets-warn.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/roles2.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/semicolon.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/warn-template-param-qualified-name.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/xref_consistency.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-js/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-py/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-py/module_option.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-double-inheriting-theme/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-epub-anchor-id/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autodoc/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosectionlabel-prefix-document/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosectionlabel/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-filename-map/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-imported_members/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-mock_imports/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-recursive/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-skip-member/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-template/_templates/empty.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-template/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-coverage/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-doctest-with-autodoc/dir/inner.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-doctest-with-autodoc/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-githubpages/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-graphviz/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-ifconfig/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-imgconverter/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-inheritance_diagram/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-intersphinx-cppdomain/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-math-compat/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-math-simple/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-math/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-todo/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-viewcode-find/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-viewcode/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-footnotes/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-gettext-template/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-glossary/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_assets/extra/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_assets/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_assets/static/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_entity/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_scaled_image_link/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_style/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-image-in-parsed-literal/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-image-in-section/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-images/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-images/subdir/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-index_on_title/contents.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-inheritance/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-keep_warnings/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-babel/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-equations/equations.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-figure-in-admonition/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-includegraphics/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-index/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-labels/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-numfig/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-table/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-theme/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-title/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-unicode/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-linkcheck-localserver/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-manpage_url/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-markup-citation/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-markup-rubric/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-maxlistdepth/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-metadata/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-need-escaped/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-nested-enumerated-list/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-nested-tables/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-numfig/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-productionlist/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-prolog/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-pycode-egg/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-reST-code-block/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-refonly_bullet_list/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-roles-download/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-search/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-search/nosearch.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-smartquotes/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-stylesheets/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-templating/_templates/autosummary/class.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-theming/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-tocdepth/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-duplicated/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-empty/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-glob/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-glob/quux.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-maxdepth/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-maxdepth/qux.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree/qux.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree/tocdepth.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-trim_doctest_flags/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/doc/usage/index.rst:5: WARNING: unknown document: /development/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:5: WARNING: unknown document: /usage/restructuredtext/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:5: WARNING: unknown document: /usage/markdown\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:12: WARNING: unknown document: /usage/restructuredtext/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:12: WARNING: unknown document: /development/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:18: WARNING: unknown document: /usage/installation\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:18: WARNING: unknown document: /usage/restructuredtext/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:121: WARNING: unknown document: /usage/restructuredtext/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:140: WARNING: unknown document: /man/sphinx-build\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:223: WARNING: unknown document: /usage/restructuredtext/domains\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:248: WARNING: unknown document: /usage/configuration\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:332: WARNING: unknown document: /usage/extensions/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:334: WARNING: unknown document: /usage/theming\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:335: WARNING: unknown document: /usage/advanced/setuptools\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:343: WARNING: unknown document: /man/sphinx-build\n/sphinx-doc__sphinx/doc/usage/theming.rst:23: WARNING: unknown document: /development/theming\n/sphinx-doc__sphinx/doc/usage/theming.rst:83: WARNING: unknown document: /development/theming\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:41: WARNING: unknown option: &option\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:45: WARNING: citation not found: missing\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:13: WARNING: a suitable image for html builder not found: tests/roots/test-warnings/foo.*\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:33: WARNING: Could not lex literal_block as \"c\". Highlighting skipped.\n",
      "response": "It seems the `sphinx-build` command took too long to execute. Let's try running it again, but this time we'll limit the output to see if it helps.\n\n```\nsphinx-build -b html . _build -q\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/example.py\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "It seems the `sphinx-build` command took too long to execute. Let's try running it again, but this time we'll limit the output to see if it helps.\n\n"
    },
    {
      "action": "open _build/index.html\n",
      "observation": "[File: /sphinx-doc__sphinx/_build/index.html (100 lines total)]\n1:\n2:<!DOCTYPE html>\n3:\n4:<html>\n5:  <head>\n6:    <meta charset=\"utf-8\" />\n7:    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n8:\n9:    <title>Welcome to Example Project\u2019s documentation! &#8212; Example Project  documentation</title>\n10:    <link rel=\"stylesheet\" href=\"_static/pygments.css\" type=\"text/css\" />\n11:    <link rel=\"stylesheet\" href=\"_static/alabaster.css\" type=\"text/css\" />\n12:    <script id=\"documentation_options\" data-url_root=\"./\" src=\"_static/documentation_options.js\"></script>\n13:    <script src=\"_static/jquery.js\"></script>\n14:    <script src=\"_static/underscore.js\"></script>\n15:    <script src=\"_static/doctools.js\"></script>\n16:    <script src=\"_static/language_data.js\"></script>\n17:    <script async=\"async\" src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/latest.js?config=TeX-AMS-MML_HTMLorMML\"></script>\n18:    <link rel=\"index\" title=\"Index\" href=\"genindex.html\" />\n19:    <link rel=\"search\" title=\"Search\" href=\"search.html\" />\n20:   \n21:  <link rel=\"stylesheet\" href=\"_static/custom.css\" type=\"text/css\" />\n22:  \n23:  \n24:  <meta name=\"viewport\" content=\"width=device-width, initial-scale=0.9, maximum-scale=0.9\" />\n25:\n26:  </head><body>\n27:  \n28:\n29:    <div class=\"document\">\n30:      <div class=\"documentwrapper\">\n31:        <div class=\"bodywrapper\">\n32:          \n33:\n34:          <div class=\"body\" role=\"main\">\n35:            \n36:  <section id=\"module-example\">\n37:<span id=\"welcome-to-example-project-s-documentation\"></span><h1>Welcome to Example Project\u2019s documentation!<a class=\"headerlink\" href=\"#module-example\" title=\"Permalink to this headline\">\u00b6</a></h1>\n38:<dl class=\"py function\">\n39:<dt id=\"example.foo\">\n40:<code class=\"sig-prename descclassname\">example.</code><code class=\"sig-name descname\">foo</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#example.foo\" title=\"Permalink to this definition\">\u00b6</a></dt>\n41:<dd></dd></dl>\n42:\n43:</section>\n44:\n45:\n46:          </div>\n47:          \n48:        </div>\n49:      </div>\n50:      <div class=\"sphinxsidebar\" role=\"navigation\" aria-label=\"main navigation\">\n51:        <div class=\"sphinxsidebarwrapper\">\n52:<h1 class=\"logo\"><a href=\"#\">Example Project</a></h1>\n53:\n54:\n55:\n56:\n57:\n58:\n59:\n60:\n61:<h3>Navigation</h3>\n62:\n63:<div class=\"relations\">\n64:<h3>Related Topics</h3>\n65:<ul>\n66:  <li><a href=\"#\">Documentation overview</a><ul>\n67:  </ul></li>\n68:</ul>\n69:</div>\n70:<div id=\"searchbox\" style=\"display: none\" role=\"search\">\n71:  <h3 id=\"searchlabel\">Quick search</h3>\n72:    <div class=\"searchformwrapper\">\n73:    <form class=\"search\" action=\"search.html\" method=\"get\">\n74:      <input type=\"text\" name=\"q\" aria-labelledby=\"searchlabel\" />\n75:      <input type=\"submit\" value=\"Go\" />\n76:    </form>\n77:    </div>\n78:</div>\n79:<script>$('#searchbox').show(0);</script>\n80:        </div>\n81:      </div>\n82:      <div class=\"clearer\"></div>\n83:    </div>\n84:    <div class=\"footer\">\n85:      &copy;2023, Example Author.\n86:      \n87:      |\n88:      Powered by <a href=\"http://sphinx-doc.org/\">Sphinx 3.3.0+/2c2335bbb</a>\n89:      &amp; <a href=\"https://github.com/bitprophet/alabaster\">Alabaster 0.7.11</a>\n90:      \n91:      |\n92:      <a href=\"_sources/index.rst.txt\"\n93:          rel=\"nofollow\">Page source</a>\n94:    </div>\n95:\n96:    \n97:\n98:    \n99:  </body>\n100:</html>\n",
      "response": "The Sphinx build process completed with several warnings, but it did not fail. To verify if the `autodoc_typehints` setting is respected for overloaded callables, we need to check the generated HTML documentation.\n\nLet's open the generated HTML file for the `example` module to see if the type hints are displayed correctly.\n\n```\nopen _build/index.html\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/example.py\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "The Sphinx build process completed with several warnings, but it did not fail. To verify if the `autodoc_typehints` setting is respected for overloaded callables, we need to check the generated HTML documentation.\n\nLet's open the generated HTML file for the `example` module to see if the type hints are displayed correctly.\n\n"
    },
    {
      "action": "search_file \"class FunctionDocumenter\" sphinx/ext/autodoc/__init__.py\n",
      "observation": "Found 1 matches for \"class FunctionDocumenter\" in /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py:\nLine 1196:class FunctionDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type: ignore\nEnd of matches for \"class FunctionDocumenter\" in /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py\n",
      "response": "The generated HTML file does not show the type hints for the overloaded `foo` function, which means the `autodoc_typehints` setting is not being respected for overloaded callables.\n\nLet's investigate further by checking the `FunctionDocumenter` class in the `sphinx/ext/autodoc/__init__.py` file to ensure that the `autodoc_typehints` setting is applied correctly for overloaded callables.\n\n```\nsearch_file \"class FunctionDocumenter\" sphinx/ext/autodoc/__init__.py\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/_build/index.html\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "The generated HTML file does not show the type hints for the overloaded `foo` function, which means the `autodoc_typehints` setting is not being respected for overloaded callables.\n\nLet's investigate further by checking the `FunctionDocumenter` class in the `sphinx/ext/autodoc/__init__.py` file to ensure that the `autodoc_typehints` setting is applied correctly for overloaded callables.\n\n"
    },
    {
      "action": "goto 1196\n",
      "observation": "Error: <line> must be less than or equal to 100\n",
      "response": "The `FunctionDocumenter` class is defined at line 1196 in the `sphinx/ext/autodoc/__init__.py` file. Let's navigate to that line to examine the class and its methods.\n\n```\ngoto 1196\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/_build/index.html\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "The `FunctionDocumenter` class is defined at line 1196 in the `sphinx/ext/autodoc/__init__.py` file. Let's navigate to that line to examine the class and its methods.\n\n"
    },
    {
      "action": "open sphinx/ext/autodoc/__init__.py 1196\n",
      "observation": "[File: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py (2284 lines total)]\n(1180 more lines above)\n1181:    feature of stripping any function signature from the docstring.\n1182:    \"\"\"\n1183:    def format_signature(self, **kwargs: Any) -> str:\n1184:        if self.args is None and self.env.config.autodoc_docstring_signature:  # type: ignore\n1185:            # only act if a signature is not explicitly given already, and if\n1186:            # the feature is enabled\n1187:            result = self._find_signature()\n1188:            if result is not None:\n1189:                # Discarding _args is a only difference with\n1190:                # DocstringSignatureMixin.format_signature.\n1191:                # Documenter.format_signature use self.args value to format.\n1192:                _args, self.retann = result\n1193:        return super().format_signature(**kwargs)\n1194:\n1195:\n1196:class FunctionDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type: ignore\n1197:    \"\"\"\n1198:    Specialized Documenter subclass for functions.\n1199:    \"\"\"\n1200:    objtype = 'function'\n1201:    member_order = 30\n1202:\n1203:    @classmethod\n1204:    def can_document_member(cls, member: Any, membername: str, isattr: bool, parent: Any\n1205:                            ) -> bool:\n1206:        # supports functions, builtins and bound methods exported at the module level\n1207:        return (inspect.isfunction(member) or inspect.isbuiltin(member) or\n1208:                (inspect.isroutine(member) and isinstance(parent, ModuleDocumenter)))\n1209:\n1210:    def format_args(self, **kwargs: Any) -> str:\n1211:        if self.env.config.autodoc_typehints in ('none', 'description'):\n1212:            kwargs.setdefault('show_annotation', False)\n1213:\n1214:        try:\n1215:            self.env.app.emit('autodoc-before-process-signature', self.object, False)\n1216:            sig = inspect.signature(self.object, follow_wrapped=True,\n1217:                                    type_aliases=self.env.config.autodoc_type_aliases)\n1218:            args = stringify_signature(sig, **kwargs)\n1219:        except TypeError as exc:\n1220:            logger.warning(__(\"Failed to get a function signature for %s: %s\"),\n1221:                           self.fullname, exc)\n1222:            return None\n1223:        except ValueError:\n1224:            args = ''\n1225:\n1226:        if self.env.config.strip_signature_backslash:\n1227:            # escape backslashes for reST\n1228:            args = args.replace('\\\\', '\\\\\\\\')\n1229:        return args\n1230:\n1231:    def document_members(self, all_members: bool = False) -> None:\n1232:        pass\n1233:\n1234:    def add_directive_header(self, sig: str) -> None:\n1235:        sourcename = self.get_sourcename()\n1236:        super().add_directive_header(sig)\n1237:\n1238:        if inspect.iscoroutinefunction(self.object):\n1239:            self.add_line('   :async:', sourcename)\n1240:\n1241:    def format_signature(self, **kwargs: Any) -> str:\n1242:        sigs = []\n1243:        if self.analyzer and '.'.join(self.objpath) in self.analyzer.overloads:\n1244:            # Use signatures for overloaded functions instead of the implementation function.\n1245:            overloaded = True\n1246:        else:\n1247:            overloaded = False\n1248:            sig = super().format_signature(**kwargs)\n1249:            sigs.append(sig)\n1250:\n1251:        if inspect.is_singledispatch_function(self.object):\n1252:            # append signature of singledispatch'ed functions\n1253:            for typ, func in self.object.registry.items():\n1254:                if typ is object:\n1255:                    pass  # default implementation. skipped.\n1256:                else:\n1257:                    self.annotate_to_first_argument(func, typ)\n1258:\n1259:                    documenter = FunctionDocumenter(self.directive, '')\n1260:                    documenter.object = func\n1261:                    documenter.objpath = [None]\n1262:                    sigs.append(documenter.format_signature())\n1263:        if overloaded:\n1264:            __globals__ = safe_getattr(self.object, '__globals__', {})\n1265:            for overload in self.analyzer.overloads.get('.'.join(self.objpath)):\n1266:                overload = evaluate_signature(overload, __globals__,\n1267:                                              self.env.config.autodoc_type_aliases)\n1268:\n1269:                if self.env.config.autodoc_typehints in ('none', 'description'):\n1270:                    kwargs.setdefault('show_annotation', False)\n1271:                sig = stringify_signature(overload, **kwargs)\n1272:\n1273:        return \"\\n\".join(sigs)\n1274:\n1275:    def annotate_to_first_argument(self, func: Callable, typ: Type) -> None:\n1276:        \"\"\"Annotate type hint to the first argument of function if needed.\"\"\"\n1277:        try:\n1278:            sig = inspect.signature(func, type_aliases=self.env.config.autodoc_type_aliases)\n1279:        except TypeError as exc:\n1280:            logger.warning(__(\"Failed to get a function signature for %s: %s\"),\n(1004 more lines below)\n",
      "response": "Let's open the `sphinx/ext/autodoc/__init__.py` file and navigate to line 1196 to examine the `FunctionDocumenter` class.\n\n```\nopen sphinx/ext/autodoc/__init__.py 1196\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/_build/index.html\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "Let's open the `sphinx/ext/autodoc/__init__.py` file and navigate to line 1196 to examine the `FunctionDocumenter` class.\n\n"
    },
    {
      "action": "edit 1269:1272\n                if self.env.config.autodoc_typehints in ('none', 'description'):\n                    kwargs.setdefault('show_annotation', False)\n                sig = stringify_signature(overload, **kwargs)\n                sigs.append(sig)\nend_of_edit\n",
      "observation": "[File: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py (2284 lines total)]\n(1218 more lines above)\n1219:        except TypeError as exc:\n1220:            logger.warning(__(\"Failed to get a function signature for %s: %s\"),\n1221:                           self.fullname, exc)\n1222:            return None\n1223:        except ValueError:\n1224:            args = ''\n1225:\n1226:        if self.env.config.strip_signature_backslash:\n1227:            # escape backslashes for reST\n1228:            args = args.replace('\\\\', '\\\\\\\\')\n1229:        return args\n1230:\n1231:    def document_members(self, all_members: bool = False) -> None:\n1232:        pass\n1233:\n1234:    def add_directive_header(self, sig: str) -> None:\n1235:        sourcename = self.get_sourcename()\n1236:        super().add_directive_header(sig)\n1237:\n1238:        if inspect.iscoroutinefunction(self.object):\n1239:            self.add_line('   :async:', sourcename)\n1240:\n1241:    def format_signature(self, **kwargs: Any) -> str:\n1242:        sigs = []\n1243:        if self.analyzer and '.'.join(self.objpath) in self.analyzer.overloads:\n1244:            # Use signatures for overloaded functions instead of the implementation function.\n1245:            overloaded = True\n1246:        else:\n1247:            overloaded = False\n1248:            sig = super().format_signature(**kwargs)\n1249:            sigs.append(sig)\n1250:\n1251:        if inspect.is_singledispatch_function(self.object):\n1252:            # append signature of singledispatch'ed functions\n1253:            for typ, func in self.object.registry.items():\n1254:                if typ is object:\n1255:                    pass  # default implementation. skipped.\n1256:                else:\n1257:                    self.annotate_to_first_argument(func, typ)\n1258:\n1259:                    documenter = FunctionDocumenter(self.directive, '')\n1260:                    documenter.object = func\n1261:                    documenter.objpath = [None]\n1262:                    sigs.append(documenter.format_signature())\n1263:        if overloaded:\n1264:            __globals__ = safe_getattr(self.object, '__globals__', {})\n1265:            for overload in self.analyzer.overloads.get('.'.join(self.objpath)):\n1266:                overload = evaluate_signature(overload, __globals__,\n1267:                                              self.env.config.autodoc_type_aliases)\n1268:\n1269:                if self.env.config.autodoc_typehints in ('none', 'description'):\n1270:                    kwargs.setdefault('show_annotation', False)\n1271:                sig = stringify_signature(overload, **kwargs)\n1272:                sigs.append(sig)\n1273:        return \"\\n\".join(sigs)\n1274:\n1275:    def annotate_to_first_argument(self, func: Callable, typ: Type) -> None:\n1276:        \"\"\"Annotate type hint to the first argument of function if needed.\"\"\"\n1277:        try:\n1278:            sig = inspect.signature(func, type_aliases=self.env.config.autodoc_type_aliases)\n1279:        except TypeError as exc:\n1280:            logger.warning(__(\"Failed to get a function signature for %s: %s\"),\n1281:                           self.fullname, exc)\n1282:            return\n1283:        except ValueError:\n1284:            return\n1285:\n1286:        if len(sig.parameters) == 0:\n1287:            return\n1288:\n1289:        params = list(sig.parameters.values())\n1290:        if params[0].annotation is Parameter.empty:\n1291:            params[0] = params[0].replace(annotation=typ)\n1292:            try:\n1293:                func.__signature__ = sig.replace(parameters=params)  # type: ignore\n1294:            except TypeError:\n1295:                # failed to update signature (ex. built-in or extension types)\n1296:                return\n1297:\n1298:\n1299:class SingledispatchFunctionDocumenter(FunctionDocumenter):\n1300:    \"\"\"\n1301:    Used to be a specialized Documenter subclass for singledispatch'ed functions.\n1302:\n1303:    Retained for backwards compatibility, now does the same as the FunctionDocumenter\n1304:    \"\"\"\n1305:\n1306:    def __init__(self, *args: Any, **kwargs: Any) -> None:\n1307:        warnings.warn(\"%s is deprecated.\" % self.__class__.__name__,\n1308:                      RemovedInSphinx50Warning, stacklevel=2)\n1309:        super().__init__(*args, **kwargs)\n1310:\n1311:\n1312:class DecoratorDocumenter(FunctionDocumenter):\n1313:    \"\"\"\n1314:    Specialized Documenter subclass for decorator functions.\n1315:    \"\"\"\n1316:    objtype = 'decorator'\n1317:\n1318:    # must be lower than FunctionDocumenter\n(966 more lines below)\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.\n",
      "response": "The `FunctionDocumenter` class has a `format_signature` method that handles the formatting of function signatures, including overloaded functions. The `autodoc_typehints` setting is checked within this method.\n\nTo ensure that the `autodoc_typehints` setting is respected for overloaded callables, we need to make sure that the `show_annotation` flag is set correctly when formatting the signatures of overloaded functions.\n\nLet's edit the `format_signature` method to ensure that the `show_annotation` flag is set based on the `autodoc_typehints` setting for overloaded callables.\n\n```\nedit 1269:1272\n                if self.env.config.autodoc_typehints in ('none', 'description'):\n                    kwargs.setdefault('show_annotation', False)\n                sig = stringify_signature(overload, **kwargs)\n                sigs.append(sig)\nend_of_edit\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "The `FunctionDocumenter` class has a `format_signature` method that handles the formatting of function signatures, including overloaded functions. The `autodoc_typehints` setting is checked within this method.\n\nTo ensure that the `autodoc_typehints` setting is respected for overloaded callables, we need to make sure that the `show_annotation` flag is set correctly when formatting the signatures of overloaded functions.\n\nLet's edit the `format_signature` method to ensure that the `show_annotation` flag is set based on the `autodoc_typehints` setting for overloaded callables.\n\n"
    },
    {
      "action": "sphinx-build -b html . _build -q\n",
      "observation": "WARNING: while setting up extension sphinx.addnodes: node class 'meta' is already registered, its visitors will be overridden\nWARNING: autodoc: failed to import method 'websupport.WebSupport.build' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.WebSupport.get_document' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.WebSupport.get_data' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.WebSupport.add_comment' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.WebSupport.process_vote' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.WebSupport.get_search_results' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.init_indexing' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.finish_indexing' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.feed' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.add_document' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.query' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.handle_query' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.extract_context' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.pre_build' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.add_node' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.post_build' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.add_comment' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.delete_comment' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.get_data' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.process_vote' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.update_username' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.accept_comment' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\n/sphinx-doc__sphinx/doc/usage/configuration.rst:64: WARNING: Unknown directive type \"confval\".\n\n.. confval:: project\n\n   The documented project's name.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:68: WARNING: Unknown directive type \"confval\".\n\n.. confval:: author\n\n   The author name(s) of the document.  The default value is ``'unknown'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:72: WARNING: Unknown directive type \"confval\".\n\n.. confval:: copyright\n\n   A copyright statement in the style ``'2008, Author Name'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:76: WARNING: Unknown directive type \"confval\".\n\n.. confval:: version\n\n   The major project version, used as the replacement for ``|version|``.  For\n   example, for the Python documentation, this may be something like ``2.6``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:81: WARNING: Unknown directive type \"confval\".\n\n.. confval:: release\n\n   The full project version, used as the replacement for ``|release|`` and\n   e.g. in the HTML templates.  For example, for the Python documentation, this\n   may be something like ``2.6.0rc1``.\n\n   If you don't need the separation provided between :confval:`version` and\n   :confval:`release`, just set them both to the same value.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:94: WARNING: Unknown directive type \"confval\".\n\n.. confval:: extensions\n\n   A list of strings that are module names of :doc:`extensions\n   <extensions/index>`. These can be extensions coming with Sphinx (named\n   ``sphinx.ext.*``) or custom ones.\n\n   Note that you can extend :data:`sys.path` within the conf file if your\n   extensions live in another directory -- but make sure you use absolute paths.\n   If your extension path is relative to the :term:`configuration directory`,\n   use :func:`os.path.abspath` like so::\n\n      import sys, os\n\n      sys.path.append(os.path.abspath('sphinxext'))\n\n      extensions = ['extname']\n\n   That way, you can load an extension called ``extname`` from the subdirectory\n   ``sphinxext``.\n\n   The configuration file itself can be an extension; for that, you only need\n   to provide a :func:`setup` function in it.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:117: WARNING: Unknown directive type \"confval\".\n\n.. confval:: source_suffix\n\n   The file extensions of source files.  Sphinx considers the files with this\n   suffix as sources.  The value can be a dictionary mapping file extensions\n   to file types.  For example::\n\n      source_suffix = {\n          '.rst': 'restructuredtext',\n          '.txt': 'restructuredtext',\n          '.md': 'markdown',\n      }\n\n   By default, Sphinx only supports ``'restructuredtext'`` file type.  You can\n   add a new file type using source parser extensions.  Please read a document\n   of the extension to know which file type the extension supports.\n\n   The value may also be a list of file extensions: then Sphinx will consider\n   that they all map to the ``'restructuredtext'`` file type.\n\n   Default is ``{'.rst': 'restructuredtext'}``.\n\n   .. note:: file extensions have to start with a dot (e.g. ``.rst``).\n\n   .. versionchanged:: 1.3\n      Can now be a list of extensions.\n\n   .. versionchanged:: 1.8\n      Support file type mapping\n/sphinx-doc__sphinx/doc/usage/configuration.rst:146: WARNING: Unknown directive type \"confval\".\n\n.. confval:: source_encoding\n\n   The encoding of all reST source files.  The recommended encoding, and the\n   default value, is ``'utf-8-sig'``.\n\n   .. versionadded:: 0.5\n      Previously, Sphinx accepted only UTF-8 encoded sources.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:154: WARNING: Unknown directive type \"confval\".\n\n.. confval:: source_parsers\n\n   If given, a dictionary of parser classes for different source suffices.  The\n   keys are the suffix, the values can be either a class or a string giving a\n   fully-qualified name of a parser class.  The parser class can be either\n   ``docutils.parsers.Parser`` or :class:`sphinx.parsers.Parser`.  Files with a\n   suffix that is not in the dictionary will be parsed with the default\n   reStructuredText parser.\n\n   For example::\n\n      source_parsers = {'.md': 'recommonmark.parser.CommonMarkParser'}\n\n   .. note::\n\n      Refer to :doc:`/usage/markdown` for more information on using Markdown\n      with Sphinx.\n\n   .. versionadded:: 1.3\n\n   .. deprecated:: 1.8\n      Now Sphinx provides an API :meth:`.Sphinx.add_source_parser` to register\n      a source parser.  Please use it instead.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:178: WARNING: Unknown directive type \"confval\".\n\n.. confval:: master_doc\n\n   The document name of the \"master\" document, that is, the document that\n   contains the root :rst:dir:`toctree` directive.  Default is ``'index'``.\n\n   .. versionchanged:: 2.0\n      The default is changed to ``'index'`` from ``'contents'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:186: WARNING: Unknown directive type \"confval\".\n\n.. confval:: exclude_patterns\n\n   A list of glob-style patterns that should be excluded when looking for\n   source files. [1]_ They are matched against the source file names relative\n   to the source directory, using slashes as directory separators on all\n   platforms.\n\n   Example patterns:\n\n   - ``'library/xml.rst'`` -- ignores the ``library/xml.rst`` file (replaces\n     entry in :confval:`unused_docs`)\n   - ``'library/xml'`` -- ignores the ``library/xml`` directory\n   - ``'library/xml*'`` -- ignores all files and directories starting with\n     ``library/xml``\n   - ``'**/.svn'`` -- ignores all ``.svn`` directories\n\n   :confval:`exclude_patterns` is also consulted when looking for static files\n   in :confval:`html_static_path` and :confval:`html_extra_path`.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:207: WARNING: Unknown directive type \"confval\".\n\n.. confval:: templates_path\n\n   A list of paths that contain extra templates (or templates that overwrite\n   builtin/theme-specific templates).  Relative paths are taken as relative to\n   the configuration directory.\n\n   .. versionchanged:: 1.3\n      As these files are not meant to be built, they are automatically added to\n      :confval:`exclude_patterns`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:217: WARNING: Unknown directive type \"confval\".\n\n.. confval:: template_bridge\n\n   A string with the fully-qualified name of a callable (or simply a class)\n   that returns an instance of :class:`~sphinx.application.TemplateBridge`.\n   This instance is then used to render HTML documents, and possibly the output\n   of other builders (currently the changes builder).  (Note that the template\n   bridge must be made theme-aware if HTML themes are to be used.)\n/sphinx-doc__sphinx/doc/usage/configuration.rst:225: WARNING: Unknown directive type \"confval\".\n\n.. confval:: rst_epilog\n\n   .. index:: pair: global; substitutions\n\n   A string of reStructuredText that will be included at the end of every source\n   file that is read.  This is a possible place to add substitutions that should\n   be available in every file (another being :confval:`rst_prolog`).  An\n   example::\n\n      rst_epilog = \"\"\"\n      .. |psf| replace:: Python Software Foundation\n      \"\"\"\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:240: WARNING: Unknown directive type \"confval\".\n\n.. confval:: rst_prolog\n\n   .. index:: pair: global; substitutions\n\n   A string of reStructuredText that will be included at the beginning of every\n   source file that is read.  This is a possible place to add substitutions that\n   should be available in every file (another being :confval:`rst_epilog`).  An\n   example::\n\n      rst_prolog = \"\"\"\n      .. |psf| replace:: Python Software Foundation\n      \"\"\"\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:255: WARNING: Unknown directive type \"confval\".\n\n.. confval:: primary_domain\n\n   .. index:: default; domain\n              primary; domain\n\n   The name of the default :doc:`domain </usage/restructuredtext/domains>`.\n   Can also be ``None`` to disable a default domain.  The default is ``'py'``.\n   Those objects in other domains (whether the domain name is given explicitly,\n   or selected by a :rst:dir:`default-domain` directive) will have the domain\n   name explicitly prepended when named (e.g., when the default domain is C,\n   Python functions will be named \"Python function\", not just \"function\").\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:269: WARNING: Unknown directive type \"confval\".\n\n.. confval:: default_role\n\n   .. index:: default; role\n\n   The name of a reST role (builtin or Sphinx extension) to use as the default\n   role, that is, for text marked up ```like this```.  This can be set to\n   ``'py:obj'`` to make ```filter``` a cross-reference to the Python function\n   \"filter\".  The default is ``None``, which doesn't reassign the default role.\n\n   The default role can always be set within individual documents using the\n   standard reST :rst:dir:`default-role` directive.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:283: WARNING: Unknown directive type \"confval\".\n\n.. confval:: keep_warnings\n\n   If true, keep warnings as \"system message\" paragraphs in the built\n   documents.  Regardless of this setting, warnings are always written to the\n   standard error stream when ``sphinx-build`` is run.\n\n   The default is ``False``, the pre-0.5 behavior was to always keep them.\n\n   .. versionadded:: 0.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:293: WARNING: Unknown directive type \"confval\".\n\n.. confval:: suppress_warnings\n\n   A list of warning types to suppress arbitrary warning messages.\n\n   Sphinx supports following warning types:\n\n   * ``app.add_node``\n   * ``app.add_directive``\n   * ``app.add_role``\n   * ``app.add_generic_role``\n   * ``app.add_source_parser``\n   * ``download.not_readable``\n   * ``image.not_readable``\n   * ``ref.term``\n   * ``ref.ref``\n   * ``ref.numref``\n   * ``ref.keyword``\n   * ``ref.option``\n   * ``ref.citation``\n   * ``ref.footnote``\n   * ``ref.doc``\n   * ``ref.python``\n   * ``misc.highlighting_failure``\n   * ``toc.circular``\n   * ``toc.secnum``\n   * ``epub.unknown_project_files``\n   * ``epub.duplicated_toc_entry``\n   * ``autosectionlabel.*``\n\n   You can choose from these types.\n\n   Now, this option should be considered *experimental*.\n\n   .. versionadded:: 1.4\n\n   .. versionchanged:: 1.5\n\n      Added ``misc.highlighting_failure``\n\n   .. versionchanged:: 1.5.1\n\n      Added ``epub.unknown_project_files``\n\n   .. versionchanged:: 1.6\n\n      Added ``ref.footnote``\n\n   .. versionchanged:: 2.1\n\n      Added ``autosectionlabel.*``\n\n   .. versionchanged:: 3.3.0\n\n      Added ``epub.duplicated_toc_entry``\n/sphinx-doc__sphinx/doc/usage/configuration.rst:348: WARNING: Unknown directive type \"confval\".\n\n.. confval:: needs_sphinx\n\n   If set to a ``major.minor`` version string like ``'1.1'``, Sphinx will\n   compare it with its version and refuse to build if it is too old.  Default\n   is no requirement.\n\n   .. versionadded:: 1.0\n\n   .. versionchanged:: 1.4\n      also accepts micro version string\n/sphinx-doc__sphinx/doc/usage/configuration.rst:359: WARNING: Unknown directive type \"confval\".\n\n.. confval:: needs_extensions\n\n   This value can be a dictionary specifying version requirements for\n   extensions in :confval:`extensions`, e.g. ``needs_extensions =\n   {'sphinxcontrib.something': '1.5'}``.  The version strings should be in the\n   form ``major.minor``.  Requirements do not have to be specified for all\n   extensions, only for those you want to check.\n\n   This requires that the extension specifies its version to Sphinx (see\n   :ref:`dev-extensions` for how to do that).\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:372: WARNING: Unknown directive type \"confval\".\n\n.. confval:: manpages_url\n\n   A URL to cross-reference :rst:role:`manpage` directives. If this is\n   defined to ``https://manpages.debian.org/{path}``, the\n   :literal:`:manpage:`man(1)`` role will link to\n   <https://manpages.debian.org/man(1)>. The patterns available are:\n\n     * ``page`` - the manual page (``man``)\n     * ``section`` - the manual section (``1``)\n     * ``path`` - the original manual page and section specified (``man(1)``)\n\n   This also supports manpages specified as ``man.1``.\n\n   .. note:: This currently affects only HTML writers but could be\n             expanded in the future.\n\n   .. versionadded:: 1.7\n/sphinx-doc__sphinx/doc/usage/configuration.rst:390: WARNING: Unknown directive type \"confval\".\n\n.. confval:: nitpicky\n\n   If true, Sphinx will warn about *all* references where the target cannot be\n   found.  Default is ``False``.  You can activate this mode temporarily using\n   the :option:`-n <sphinx-build -n>` command-line switch.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:398: WARNING: Unknown directive type \"confval\".\n\n.. confval:: nitpick_ignore\n\n   A list of ``(type, target)`` tuples (by default empty) that should be\n   ignored when generating warnings in \"nitpicky mode\".  Note that ``type``\n   should include the domain name if present.  Example entries would be\n   ``('py:func', 'int')`` or ``('envvar', 'LD_LIBRARY_PATH')``.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:407: WARNING: Unknown directive type \"confval\".\n\n.. confval:: numfig\n\n   If true, figures, tables and code-blocks are automatically numbered if they\n   have a caption.  The :rst:role:`numref` role is enabled.\n   Obeyed so far only by HTML and LaTeX builders. Default is ``False``.\n\n   .. note::\n\n      The LaTeX builder always assigns numbers whether this option is enabled\n      or not.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:420: WARNING: Unknown directive type \"confval\".\n\n.. confval:: numfig_format\n\n   A dictionary mapping ``'figure'``, ``'table'``, ``'code-block'`` and\n   ``'section'`` to strings that are used for format of figure numbers.\n   As a special character, ``%s`` will be replaced to figure number.\n\n   Default is to use ``'Fig. %s'`` for ``'figure'``, ``'Table %s'`` for\n   ``'table'``, ``'Listing %s'`` for ``'code-block'`` and ``'Section'`` for\n   ``'section'``.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:432: WARNING: Unknown directive type \"confval\".\n\n.. confval:: numfig_secnum_depth\n\n   - if set to ``0``, figures, tables and code-blocks are continuously numbered\n     starting at ``1``.\n   - if ``1`` (default) numbers will be ``x.1``, ``x.2``, ... with ``x``\n     the section number (top level sectioning; no ``x.`` if no section).\n     This naturally applies only if section numbering has been activated via\n     the ``:numbered:`` option of the :rst:dir:`toctree` directive.\n   - ``2`` means that numbers will be ``x.y.1``, ``x.y.2``, ... if located in\n     a sub-section (but still ``x.1``, ``x.2``, ... if located directly under a\n     section and ``1``, ``2``, ... if not in any top level section.)\n   - etc...\n\n   .. versionadded:: 1.3\n\n   .. versionchanged:: 1.7\n      The LaTeX builder obeys this setting (if :confval:`numfig` is set to\n      ``True``).\n/sphinx-doc__sphinx/doc/usage/configuration.rst:451: WARNING: Unknown directive type \"confval\".\n\n.. confval:: smartquotes\n\n   If true, the `Docutils Smart Quotes transform`__, originally based on\n   `SmartyPants`__ (limited to English) and currently applying to many\n   languages, will be used to convert quotes and dashes to typographically\n   correct entities.  Default: ``True``.\n\n   __ http://docutils.sourceforge.net/docs/user/smartquotes.html\n   __ https://daringfireball.net/projects/smartypants/\n\n   .. versionadded:: 1.6.6\n      It replaces deprecated :confval:`html_use_smartypants`.\n      It applies by default to all builders except ``man`` and ``text``\n      (see :confval:`smartquotes_excludes`.)\n\n   A `docutils.conf`__ file located in the configuration directory (or a\n   global :file:`~/.docutils` file) is obeyed unconditionally if it\n   *deactivates* smart quotes via the corresponding `Docutils option`__.  But\n   if it *activates* them, then :confval:`smartquotes` does prevail.\n\n   __ http://docutils.sourceforge.net/docs/user/config.html\n   __ http://docutils.sourceforge.net/docs/user/config.html#smart-quotes\n/sphinx-doc__sphinx/doc/usage/configuration.rst:474: WARNING: Unknown directive type \"confval\".\n\n.. confval:: smartquotes_action\n\n   This string, for use with Docutils ``0.14`` or later, customizes the Smart\n   Quotes transform.  See the file :file:`smartquotes.py` at the `Docutils\n   repository`__ for details.  The default ``'qDe'`` educates normal **q**\\\n   uote characters ``\"``, ``'``, em- and en-**D**\\ ashes ``---``, ``--``, and\n   **e**\\ llipses ``...``.\n\n   .. versionadded:: 1.6.6\n\n   __ https://sourceforge.net/p/docutils/code/HEAD/tree/trunk/docutils/\n/sphinx-doc__sphinx/doc/usage/configuration.rst:486: WARNING: Unknown directive type \"confval\".\n\n.. confval:: smartquotes_excludes\n\n   This is a ``dict`` whose default is::\n\n     {'languages': ['ja'], 'builders': ['man', 'text']}\n\n   Each entry gives a sufficient condition to ignore the\n   :confval:`smartquotes` setting and deactivate the Smart Quotes transform.\n   Accepted keys are as above ``'builders'`` or ``'languages'``.\n   The values are lists.\n\n   .. note:: Currently, in case of invocation of :program:`make` with multiple\n      targets, the first target name is the only one which is tested against\n      the ``'builders'`` entry and it decides for all.  Also, a ``make text``\n      following ``make html`` needs to be issued in the form ``make text\n      O=\"-E\"`` to force re-parsing of source files, as the cached ones are\n      already transformed.  On the other hand the issue does not arise with\n      direct usage of :program:`sphinx-build` as it caches\n      (in its default usage) the parsed source files in per builder locations.\n\n   .. hint:: An alternative way to effectively deactivate (or customize) the\n      smart quotes for a given builder, for example ``latex``, is to use\n      ``make`` this way:\n\n      .. code-block:: console\n\n         make latex O=\"-D smartquotes_action=\"\n\n      This can follow some ``make html`` with no problem, in contrast to the\n      situation from the prior note.  It requires Docutils 0.14 or later.\n\n   .. versionadded:: 1.6.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:519: WARNING: Unknown directive type \"confval\".\n\n.. confval:: user_agent\n\n   A User-Agent of Sphinx.  It is used for a header on HTTP access (ex.\n   linkcheck, intersphinx and so on).  Default is ``\"Sphinx/X.Y.Z\n   requests/X.Y.Z python/X.Y.Z\"``.\n\n   .. versionadded:: 2.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:527: WARNING: Unknown directive type \"confval\".\n\n.. confval:: tls_verify\n\n   If true, Sphinx verifies server certifications.  Default is ``True``.\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:533: WARNING: Unknown directive type \"confval\".\n\n.. confval:: tls_cacerts\n\n   A path to a certification file of CA or a path to directory which\n   contains the certificates.  This also allows a dictionary mapping\n   hostname to the path to certificate file.\n   The certificates are used to verify server certifications.\n\n   .. versionadded:: 1.5\n\n   .. tip:: Sphinx uses requests_ as a HTTP library internally.\n            Therefore, Sphinx refers a certification file on the\n            directory pointed ``REQUESTS_CA_BUNDLE`` environment\n            variable if ``tls_cacerts`` not set.\n\n            .. _requests: https://requests.readthedocs.io/en/master/\n/sphinx-doc__sphinx/doc/usage/configuration.rst:549: WARNING: Unknown directive type \"confval\".\n\n.. confval:: today\n             today_fmt\n\n   These values determine how to format the current date, used as the\n   replacement for ``|today|``.\n\n   * If you set :confval:`today` to a non-empty value, it is used.\n   * Otherwise, the current time is formatted using :func:`time.strftime` and\n     the format given in :confval:`today_fmt`.\n\n   The default is now :confval:`today` and a :confval:`today_fmt` of ``'%B %d,\n   %Y'`` (or, if translation is enabled with :confval:`language`, an equivalent\n   format for the selected locale).\n/sphinx-doc__sphinx/doc/usage/configuration.rst:563: WARNING: Unknown directive type \"confval\".\n\n.. confval:: highlight_language\n\n   The default language to highlight source code in.  The default is\n   ``'python3'``.  The value should be a valid Pygments lexer name, see\n   :ref:`code-examples` for more details.\n\n   .. versionadded:: 0.5\n\n   .. versionchanged:: 1.4\n      The default is now ``'default'``. It is similar to ``'python3'``;\n      it is mostly a superset of ``'python'`` but it fallbacks to\n      ``'none'`` without warning if failed.  ``'python3'`` and other\n      languages will emit warning if failed.  If you prefer Python 2\n      only highlighting, you can set it back to ``'python'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:578: WARNING: Unknown directive type \"confval\".\n\n.. confval:: highlight_options\n\n   A dictionary of options that modify how the lexer specified by\n   :confval:`highlight_language` generates highlighted source code. These are\n   lexer-specific; for the options understood by each, see the\n   `Pygments documentation <https://pygments.org/docs/lexers>`_.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:587: WARNING: Unknown directive type \"confval\".\n\n.. confval:: pygments_style\n\n   The style name to use for Pygments highlighting of source code.  If not set,\n   either the theme's default style or ``'sphinx'`` is selected for HTML\n   output.\n\n   .. versionchanged:: 0.3\n      If the value is a fully-qualified name of a custom Pygments style class,\n      this is then used as custom style.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:597: WARNING: Unknown directive type \"confval\".\n\n.. confval:: add_function_parentheses\n\n   A boolean that decides whether parentheses are appended to function and\n   method role text (e.g. the content of ``:func:`input```) to signify that the\n   name is callable.  Default is ``True``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:603: WARNING: Unknown directive type \"confval\".\n\n.. confval:: add_module_names\n\n   A boolean that decides whether module names are prepended to all\n   :term:`object` names (for object types where a \"module\" of some kind is\n   defined), e.g. for :rst:dir:`py:function` directives.  Default is ``True``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:609: WARNING: Unknown directive type \"confval\".\n\n.. confval:: show_authors\n\n   A boolean that decides whether :rst:dir:`codeauthor` and\n   :rst:dir:`sectionauthor` directives produce any output in the built files.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:614: WARNING: Unknown directive type \"confval\".\n\n.. confval:: modindex_common_prefix\n\n   A list of prefixes that are ignored for sorting the Python module index\n   (e.g., if this is set to ``['foo.']``, then ``foo.bar`` is shown under ``B``,\n   not ``F``). This can be handy if you document a project that consists of a\n   single package.  Works only for the HTML builder currently.  Default is\n   ``[]``.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:624: WARNING: Unknown directive type \"confval\".\n\n.. confval:: trim_footnote_reference_space\n\n   Trim spaces before footnote references that are necessary for the reST\n   parser to recognize the footnote, but do not look too nice in the output.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:631: WARNING: Unknown directive type \"confval\".\n\n.. confval:: trim_doctest_flags\n\n   If true, doctest flags (comments looking like ``# doctest: FLAG, ...``) at\n   the ends of lines and ``<BLANKLINE>`` markers are removed for all code\n   blocks showing interactive Python sessions (i.e. doctests).  Default is\n   ``True``.  See the extension :mod:`~sphinx.ext.doctest` for more\n   possibilities of including doctests.\n\n   .. versionadded:: 1.0\n   .. versionchanged:: 1.1\n      Now also removes ``<BLANKLINE>``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:643: WARNING: Unknown directive type \"confval\".\n\n.. confval:: strip_signature_backslash\n\n   Default is ``False``.\n   When backslash stripping is enabled then every occurrence of ``\\\\`` in a\n   domain directive will be changed to ``\\``, even within string literals.\n   This was the behaviour before version 3.0, and setting this variable to\n   ``True`` will reinstate that behaviour.\n\n    .. versionadded:: 3.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:662: WARNING: Unknown directive type \"confval\".\n\n.. confval:: language\n\n   The code for the language the docs are written in.  Any text automatically\n   generated by Sphinx will be in that language.  Also, Sphinx will try to\n   substitute individual paragraphs from your documents with the translation\n   sets obtained from :confval:`locale_dirs`.  Sphinx will search\n   language-specific figures named by :confval:`figure_language_filename`\n   (e.g. the German version of ``myfigure.png`` will be ``myfigure.de.png``\n   by default setting) and substitute them for original figures.  In the LaTeX\n   builder, a suitable language will be selected as an option for the *Babel*\n   package.  Default is ``None``, which means that no translation will be done.\n\n   .. versionadded:: 0.5\n\n   .. versionchanged:: 1.4\n\n      Support figure substitution\n\n   Currently supported languages by Sphinx are:\n\n   * ``ar`` -- Arabic\n   * ``bg`` -- Bulgarian\n   * ``bn`` -- Bengali\n   * ``ca`` -- Catalan\n   * ``cak`` -- Kaqchikel\n   * ``cs`` -- Czech\n   * ``cy`` -- Welsh\n   * ``da`` -- Danish\n   * ``de`` -- German\n   * ``el`` -- Greek\n   * ``en`` -- English\n   * ``eo`` -- Esperanto\n   * ``es`` -- Spanish\n   * ``et`` -- Estonian\n   * ``eu`` -- Basque\n   * ``fa`` -- Iranian\n   * ``fi`` -- Finnish\n   * ``fr`` -- French\n   * ``he`` -- Hebrew\n   * ``hi`` -- Hindi\n   * ``hi_IN`` -- Hindi (India)\n   * ``hr`` -- Croatian\n   * ``hu`` -- Hungarian\n   * ``id`` -- Indonesian\n   * ``it`` -- Italian\n   * ``ja`` -- Japanese\n   * ``ko`` -- Korean\n   * ``lt`` -- Lithuanian\n   * ``lv`` -- Latvian\n   * ``mk`` -- Macedonian\n   * ``nb_NO`` -- Norwegian Bokmal\n   * ``ne`` -- Nepali\n   * ``nl`` -- Dutch\n   * ``pl`` -- Polish\n   * ``pt`` -- Portuguese\n   * ``pt_BR`` -- Brazilian Portuguese\n   * ``pt_PT`` -- European Portuguese\n   * ``ro`` -- Romanian\n   * ``ru`` -- Russian\n   * ``si`` -- Sinhala\n   * ``sk`` -- Slovak\n   * ``sl`` -- Slovenian\n   * ``sq`` -- Albanian\n   * ``sr`` -- Serbian\n   * ``sr@latin`` -- Serbian (Latin)\n   * ``sr_RS`` -- Serbian (Cyrillic)\n   * ``sv`` -- Swedish\n   * ``ta`` -- Tamil\n   * ``te`` -- Telugu\n   * ``tr`` -- Turkish\n   * ``uk_UA`` -- Ukrainian\n   * ``ur`` -- Urdu\n   * ``vi`` -- Vietnamese\n   * ``zh_CN`` -- Simplified Chinese\n   * ``zh_TW`` -- Traditional Chinese\n/sphinx-doc__sphinx/doc/usage/configuration.rst:738: WARNING: Unknown directive type \"confval\".\n\n.. confval:: locale_dirs\n\n   .. versionadded:: 0.5\n\n   Directories in which to search for additional message catalogs (see\n   :confval:`language`), relative to the source directory.  The directories on\n   this path are searched by the standard :mod:`gettext` module.\n\n   Internal messages are fetched from a text domain of ``sphinx``; so if you\n   add the directory :file:`./locale` to this setting, the message catalogs\n   (compiled from ``.po`` format using :program:`msgfmt`) must be in\n   :file:`./locale/{language}/LC_MESSAGES/sphinx.mo`.  The text domain of\n   individual documents depends on :confval:`gettext_compact`.\n\n   The default is ``['locales']``.\n\n   .. versionchanged:: 1.5\n      Use ``locales`` directory as a default value\n/sphinx-doc__sphinx/doc/usage/configuration.rst:757: WARNING: Unknown directive type \"confval\".\n\n.. confval:: gettext_compact\n\n   .. versionadded:: 1.1\n\n   If true, a document's text domain is its docname if it is a top-level\n   project file and its very base directory otherwise.\n\n   If set to string, all document's text domain is this string, making all\n   documents use single text domain.\n\n   By default, the document ``markup/code.rst`` ends up in the ``markup`` text\n   domain.  With this option set to ``False``, it is ``markup/code``.\n\n   .. versionchanged:: 3.3\n      The string value is now accepted.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:773: WARNING: Unknown directive type \"confval\".\n\n.. confval:: gettext_uuid\n\n   If true, Sphinx generates uuid information for version tracking in message\n   catalogs. It is used for:\n\n   * Add uid line for each msgids in .pot files.\n   * Calculate similarity between new msgids and previously saved old msgids.\n     This calculation takes a long time.\n\n   If you want to accelerate the calculation, you can use\n   ``python-levenshtein`` 3rd-party package written in C by using\n   :command:`pip install python-levenshtein`.\n\n   The default is ``False``.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:790: WARNING: Unknown directive type \"confval\".\n\n.. confval:: gettext_location\n\n   If true, Sphinx generates location information for messages in message\n   catalogs.\n\n   The default is ``True``.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:799: WARNING: Unknown directive type \"confval\".\n\n.. confval:: gettext_auto_build\n\n   If true, Sphinx builds mo file for each translation catalog files.\n\n   The default is ``True``.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:807: WARNING: Unknown directive type \"confval\".\n\n.. confval:: gettext_additional_targets\n\n   To specify names to enable gettext extracting and translation applying for\n   i18n additionally. You can specify below names:\n\n   :index: index terms\n   :literal-block: literal blocks (``::`` annotation and ``code-block`` directive)\n   :doctest-block: doctest block\n   :raw: raw content\n   :image: image/figure uri and alt\n\n   For example: ``gettext_additional_targets = ['literal-block', 'image']``.\n\n   The default is ``[]``.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:824: WARNING: Unknown directive type \"confval\".\n\n.. confval:: figure_language_filename\n\n   The filename format for language-specific figures.  The default value is\n   ``{root}.{language}{ext}``.  It will be expanded to\n   ``dirname/filename.en.png`` from ``.. image:: dirname/filename.png``.\n   The available format tokens are:\n\n   * ``{root}`` - the filename, including any path component, without the file\n     extension, e.g. ``dirname/filename``\n   * ``{path}`` - the directory path component of the filename, with a trailing\n     slash if non-empty, e.g. ``dirname/``\n   * ``{docpath}`` - the directory path component for the current document, with\n     a trailing slash if non-empty.\n   * ``{basename}`` - the filename without the directory path or file extension\n     components, e.g. ``filename``\n   * ``{ext}`` - the file extension, e.g. ``.png``\n   * ``{language}`` - the translation language, e.g. ``en``\n\n   For example, setting this to ``{path}{language}/{basename}{ext}`` will\n   expand to ``dirname/en/filename.png`` instead.\n\n   .. versionadded:: 1.4\n\n   .. versionchanged:: 1.5\n      Added ``{path}`` and ``{basename}`` tokens.\n\n   .. versionchanged:: 3.2\n      Added ``{docpath}`` token.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:861: WARNING: Unknown directive type \"confval\".\n\n.. confval:: math_number_all\n\n   Set this option to ``True`` if you want all displayed math to be numbered.\n   The default is ``False``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:866: WARNING: Unknown directive type \"confval\".\n\n.. confval:: math_eqref_format\n\n   A string used for formatting the labels of references to equations.\n   The ``{number}`` place-holder stands for the equation number.\n\n   Example: ``'Eq.{number}'`` gets rendered as, for example, ``Eq.10``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:873: WARNING: Unknown directive type \"confval\".\n\n.. confval:: math_numfig\n\n   If ``True``, displayed math equations are numbered across pages when\n   :confval:`numfig` is enabled.  The :confval:`numfig_secnum_depth` setting\n   is respected.  The :rst:role:`eq`, not :rst:role:`numref`, role\n   must be used to reference equation numbers.  Default is ``True``.\n\n   .. versionadded:: 1.7\n/sphinx-doc__sphinx/doc/usage/configuration.rst:891: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_theme\n\n   The \"theme\" that the HTML output should use.  See the :doc:`section about\n   theming </usage/theming>`.  The default is ``'alabaster'``.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:898: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_theme_options\n\n   A dictionary of options that influence the look and feel of the selected\n   theme.  These are theme-specific.  For the options understood by the builtin\n   themes, see :ref:`this section <builtin-themes>`.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:906: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_theme_path\n\n   A list of paths that contain custom themes, either as subdirectories or as\n   zip files.  Relative paths are taken as relative to the configuration\n   directory.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:914: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_style\n\n   The style sheet to use for HTML pages.  A file of that name must exist\n   either in Sphinx's :file:`static/` path, or in one of the custom paths given\n   in :confval:`html_static_path`.  Default is the stylesheet given by the\n   selected theme.  If you only want to add or override a few things compared\n   to the theme's stylesheet, use CSS ``@import`` to import the theme's\n   stylesheet.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:923: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_title\n\n   The \"title\" for HTML documentation generated with Sphinx's own templates.\n   This is appended to the ``<title>`` tag of individual pages, and used in the\n   navigation bar as the \"topmost\" element.  It defaults to :samp:`'{<project>}\n   v{<revision>} documentation'`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:930: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_short_title\n\n   A shorter \"title\" for the HTML docs.  This is used for links in the\n   header and in the HTML Help docs.  If not given, it defaults to the value of\n   :confval:`html_title`.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:938: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_baseurl\n\n   The URL which points to the root of the HTML documentation.  It is used to\n   indicate the location of document like ``canonical_url``.\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:945: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_codeblock_linenos_style\n\n   The style of line numbers for code-blocks.\n\n   * ``'table'`` -- display line numbers using ``<table>`` tag (default)\n   * ``'inline'`` -- display line numbers using ``<span>`` tag\n\n   .. versionadded:: 3.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:954: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_context\n\n   A dictionary of values to pass into the template engine's context for all\n   pages.  Single values can also be put in this dictionary using the\n   :option:`-A <sphinx-build -A>` command-line option of ``sphinx-build``.\n\n   .. versionadded:: 0.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:962: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_logo\n\n   If given, this must be the name of an image file (path relative to the\n   :term:`configuration directory`) that is the logo of the docs.  It is placed\n   at the top of the sidebar; its width should therefore not exceed 200 pixels.\n   Default: ``None``.\n\n   .. versionadded:: 0.4.1\n      The image file will be copied to the ``_static`` directory of the output\n      HTML, but only if the file does not already exist there.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:973: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_favicon\n\n   If given, this must be the name of an image file (path relative to the\n   :term:`configuration directory`) that is the favicon of the docs.  Modern\n   browsers use this as the icon for tabs, windows and bookmarks.  It should\n   be a Windows-style icon file (``.ico``), which is 16x16 or 32x32\n   pixels large.  Default: ``None``.\n\n   .. versionadded:: 0.4\n      The image file will be copied to the ``_static`` directory of the output\n      HTML, but only if the file does not already exist there.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:985: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_css_files\n\n   A list of CSS files.  The entry must be a *filename* string or a tuple\n   containing the *filename* string and the *attributes* dictionary.  The\n   *filename* must be relative to the :confval:`html_static_path`, or a full URI\n   with scheme like ``http://example.org/style.css``.  The *attributes* is used\n   for attributes of ``<link>`` tag.  It defaults to an empty list.\n\n   Example::\n\n       html_css_files = ['custom.css',\n                         'https://example.com/css/custom.css',\n                         ('print.css', {'media': 'print'})]\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1001: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_js_files\n\n   A list of JavaScript *filename*.  The entry must be a *filename* string or a\n   tuple containing the *filename* string and the *attributes* dictionary.  The\n   *filename* must be relative to the :confval:`html_static_path`, or a full\n   URI with scheme like ``http://example.org/script.js``.  The *attributes* is\n   used for attributes of ``<script>`` tag.  It defaults to an empty list.\n\n   Example::\n\n       html_js_files = ['script.js',\n                        'https://example.com/scripts/custom.js',\n                        ('custom.js', {'async': 'async'})]\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1017: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_static_path\n\n   A list of paths that contain custom static files (such as style\n   sheets or script files).  Relative paths are taken as relative to\n   the configuration directory.  They are copied to the output's\n   :file:`_static` directory after the theme's static files, so a file\n   named :file:`default.css` will overwrite the theme's\n   :file:`default.css`.\n\n   As these files are not meant to be built, they are automatically excluded\n   from source files.\n\n   .. note::\n\n      For security reasons, dotfiles under ``html_static_path`` will\n      not be copied.  If you would like to copy them intentionally, please\n      add each filepath to this setting::\n\n          html_static_path = ['_static', '_static/.htaccess']\n\n      Another way to do that, you can also use\n      :confval:`html_extra_path`.  It allows to copy dotfiles under\n      the directories.\n\n   .. versionchanged:: 0.4\n      The paths in :confval:`html_static_path` can now contain subdirectories.\n\n   .. versionchanged:: 1.0\n      The entries in :confval:`html_static_path` can now be single files.\n\n   .. versionchanged:: 1.8\n      The files under :confval:`html_static_path` are excluded from source\n      files.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1051: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_extra_path\n\n   A list of paths that contain extra files not directly related to\n   the documentation, such as :file:`robots.txt` or :file:`.htaccess`.\n   Relative paths are taken as relative to the configuration\n   directory.  They are copied to the output directory.  They will\n   overwrite any existing file of the same name.\n\n   As these files are not meant to be built, they are automatically excluded\n   from source files.\n\n   .. versionadded:: 1.2\n\n   .. versionchanged:: 1.4\n      The dotfiles in the extra directory will be copied to the output\n      directory.  And it refers :confval:`exclude_patterns` on copying extra\n      files and directories, and ignores if path matches to patterns.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1069: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_last_updated_fmt\n\n   If this is not None, a 'Last updated on:' timestamp is inserted\n   at every page bottom, using the given :func:`strftime` format.\n   The empty string is equivalent to ``'%b %d, %Y'`` (or a\n   locale-dependent equivalent).\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1076: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_use_smartypants\n\n   If true, quotes and dashes are converted to typographically correct\n   entities.  Default: ``True``.\n\n   .. deprecated:: 1.6\n      To disable smart quotes, use rather :confval:`smartquotes`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1084: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_add_permalinks\n\n   Sphinx will add \"permalinks\" for each heading and description environment as\n   paragraph signs that become visible when the mouse hovers over them.\n\n   This value determines the text for the permalink; it defaults to ``\"\u00b6\"``.\n   Set it to ``None`` or the empty string to disable permalinks.\n\n   .. versionadded:: 0.6\n      Previously, this was always activated.\n\n   .. versionchanged:: 1.1\n      This can now be a string to select the actual text of the link.\n      Previously, only boolean values were accepted.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1099: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_sidebars\n\n   Custom sidebar templates, must be a dictionary that maps document names to\n   template names.\n\n   The keys can contain glob-style patterns [1]_, in which case all matching\n   documents will get the specified sidebars.  (A warning is emitted when a\n   more than one glob-style pattern matches for any document.)\n\n   The values can be either lists or single strings.\n\n   * If a value is a list, it specifies the complete list of sidebar templates\n     to include.  If all or some of the default sidebars are to be included,\n     they must be put into this list as well.\n\n     The default sidebars (for documents that don't match any pattern) are\n     defined by theme itself.  Builtin themes are using these templates by\n     default: ``['localtoc.html', 'relations.html', 'sourcelink.html',\n     'searchbox.html']``.\n\n   * If a value is a single string, it specifies a custom sidebar to be added\n     between the ``'sourcelink.html'`` and ``'searchbox.html'`` entries.  This\n     is for compatibility with Sphinx versions before 1.0.\n\n   .. deprecated:: 1.7\n\n      a single string value for ``html_sidebars`` will be removed in 2.0\n\n   Builtin sidebar templates that can be rendered are:\n\n   * **localtoc.html** -- a fine-grained table of contents of the current\n     document\n   * **globaltoc.html** -- a coarse-grained table of contents for the whole\n     documentation set, collapsed\n   * **relations.html** -- two links to the previous and next documents\n   * **sourcelink.html** -- a link to the source of the current document, if\n     enabled in :confval:`html_show_sourcelink`\n   * **searchbox.html** -- the \"quick search\" box\n\n   Example::\n\n      html_sidebars = {\n         '**': ['globaltoc.html', 'sourcelink.html', 'searchbox.html'],\n         'using/windows': ['windowssidebar.html', 'searchbox.html'],\n      }\n\n   This will render the custom template ``windowssidebar.html`` and the quick\n   search box within the sidebar of the given document, and render the default\n   sidebars for all other pages (except that the local TOC is replaced by the\n   global TOC).\n\n   .. versionadded:: 1.0\n      The ability to use globbing keys and to specify multiple sidebars.\n\n   Note that this value only has no effect if the chosen theme does not possess\n   a sidebar, like the builtin **scrolls** and **haiku** themes.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1156: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_additional_pages\n\n   Additional templates that should be rendered to HTML pages, must be a\n   dictionary that maps document names to template names.\n\n   Example::\n\n      html_additional_pages = {\n          'download': 'customdownload.html',\n      }\n\n   This will render the template ``customdownload.html`` as the page\n   ``download.html``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1170: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_domain_indices\n\n   If true, generate domain-specific indices in addition to the general index.\n   For e.g. the Python domain, this is the global module index.  Default is\n   ``True``.\n\n   This value can be a bool or a list of index names that should be generated.\n   To find out the index name for a specific index, look at the HTML file name.\n   For example, the Python module index has the name ``'py-modindex'``.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1182: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_use_index\n\n   If true, add an index to the HTML documents.  Default is ``True``.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1188: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_split_index\n\n   If true, the index is generated twice: once as a single page with all the\n   entries, and once as one page per starting letter.  Default is ``False``.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1195: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_copy_source\n\n   If true, the reST sources are included in the HTML build as\n   :file:`_sources/{name}`.  The default is ``True``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1200: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_show_sourcelink\n\n   If true (and :confval:`html_copy_source` is true as well), links to the\n   reST sources will be added to the sidebar.  The default is ``True``.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1207: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_sourcelink_suffix\n\n   Suffix to be appended to source links (see :confval:`html_show_sourcelink`),\n   unless they have this suffix already.  Default is ``'.txt'``.\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1214: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_use_opensearch\n\n   If nonempty, an `OpenSearch <http://www.opensearch.org/Home>`_ description\n   file will be output, and all pages will contain a ``<link>`` tag referring\n   to it.  Since OpenSearch doesn't support relative URLs for its search page\n   location, the value of this option must be the base URL from which these\n   documents are served (without trailing slash), e.g.\n   ``\"https://docs.python.org\"``.  The default is ``''``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1223: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_file_suffix\n\n   This is the file name suffix for generated HTML files.  The default is\n   ``\".html\"``.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1230: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_link_suffix\n\n   Suffix for generated links to HTML files.  The default is whatever\n   :confval:`html_file_suffix` is set to; it can be set differently (e.g. to\n   support different web server setups).\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1238: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_show_copyright\n\n   If true, \"(C) Copyright ...\" is shown in the HTML footer. Default is\n   ``True``.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1245: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_show_sphinx\n\n   If true, \"Created using Sphinx\" is shown in the HTML footer.  Default is\n   ``True``.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1252: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_output_encoding\n\n   Encoding of HTML output files. Default is ``'utf-8'``.  Note that this\n   encoding name must both be a valid Python encoding name and a valid HTML\n   ``charset`` value.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1260: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_compact_lists\n\n   If true, a list all whose items consist of a single paragraph and/or a\n   sub-list all whose items etc... (recursive definition) will not use the\n   ``<p>`` element for any of its items. This is standard docutils behavior.\n   Default: ``True``.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1269: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_secnumber_suffix\n\n   Suffix for section numbers.  Default: ``\". \"``.  Set to ``\" \"`` to suppress\n   the final dot on section numbers.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1276: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_search_language\n\n   Language to be used for generating the HTML full-text search index.  This\n   defaults to the global language selected with :confval:`language`.  If there\n   is no support for this language, ``\"en\"`` is used which selects the English\n   language.\n\n   Support is present for these languages:\n\n   * ``da`` -- Danish\n   * ``nl`` -- Dutch\n   * ``en`` -- English\n   * ``fi`` -- Finnish\n   * ``fr`` -- French\n   * ``de`` -- German\n   * ``hu`` -- Hungarian\n   * ``it`` -- Italian\n   * ``ja`` -- Japanese\n   * ``no`` -- Norwegian\n   * ``pt`` -- Portuguese\n   * ``ro`` -- Romanian\n   * ``ru`` -- Russian\n   * ``es`` -- Spanish\n   * ``sv`` -- Swedish\n   * ``tr`` -- Turkish\n   * ``zh`` -- Chinese\n\n   .. admonition:: Accelerating build speed\n\n      Each language (except Japanese) provides its own stemming algorithm.\n      Sphinx uses a Python implementation by default.  You can use a C\n      implementation to accelerate building the index file.\n\n      * `PorterStemmer <https://pypi.org/project/PorterStemmer/>`_ (``en``)\n      * `PyStemmer <https://pypi.org/project/PyStemmer/>`_ (all languages)\n\n   .. versionadded:: 1.1\n      With support for ``en`` and ``ja``.\n\n   .. versionchanged:: 1.3\n      Added additional languages.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1318: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_search_options\n\n   A dictionary with options for the search language support, empty by default.\n   The meaning of these options depends on the language selected.\n\n   The English support has no options.\n\n   The Japanese support has these options:\n\n   :type:\n      _`type` is dotted module path string to specify Splitter implementation\n      which should be derived from :class:`sphinx.search.ja.BaseSplitter`.  If\n      not specified or None is specified,\n      ``'sphinx.search.ja.DefaultSplitter'`` will be used.\n\n      You can choose from these modules:\n\n      :'sphinx.search.ja.DefaultSplitter':\n         TinySegmenter algorithm. This is default splitter.\n      :'sphinx.search.ja.MecabSplitter':\n         MeCab binding. To use this splitter, 'mecab' python binding or dynamic\n         link library ('libmecab.so' for linux, 'libmecab.dll' for windows) is\n         required.\n      :'sphinx.search.ja.JanomeSplitter':\n         Janome binding. To use this splitter,\n         `Janome <https://pypi.org/project/Janome/>`_ is required.\n\n      .. deprecated:: 1.6\n         ``'mecab'``, ``'janome'`` and ``'default'`` is deprecated.\n         To keep compatibility, ``'mecab'``, ``'janome'`` and ``'default'`` are\n         also acceptable.\n\n   Other option values depend on splitter value which you choose.\n\n   Options for ``'mecab'``:\n      :dic_enc:\n         _`dic_enc option` is the encoding for the MeCab algorithm.\n      :dict:\n         _`dict option` is the dictionary to use for the MeCab algorithm.\n      :lib:\n         _`lib option` is the library name for finding the MeCab library via\n         ctypes if the Python binding is not installed.\n\n      For example::\n\n          html_search_options = {\n              'type': 'mecab',\n              'dic_enc': 'utf-8',\n              'dict': '/path/to/mecab.dic',\n              'lib': '/path/to/libmecab.so',\n          }\n\n   Options for ``'janome'``:\n      :user_dic:\n         _`user_dic option` is the user dictionary file path for Janome.\n      :user_dic_enc:\n         _`user_dic_enc option` is the encoding for the user dictionary file\n         specified by ``user_dic`` option. Default is 'utf8'.\n\n   .. versionadded:: 1.1\n\n   .. versionchanged:: 1.4\n      html_search_options for Japanese is re-organized and any custom splitter\n      can be used by `type`_ settings.\n\n   The Chinese support has these options:\n\n   * ``dict``  -- the ``jieba`` dictionary path if want to use\n     custom dictionary.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1388: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_search_scorer\n\n   The name of a JavaScript file (relative to the configuration directory) that\n   implements a search results scorer.  If empty, the default will be used.\n\n   .. XXX describe interface for scorer here\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1397: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_scaled_image_link\n\n   If true, images itself links to the original image if it doesn't have\n   'target' option or scale related options: 'scale', 'width', 'height'.\n   The default is ``True``.\n\n   Document authors can this feature manually with giving ``no-scaled-link``\n   class to the image:\n\n   .. code-block:: rst\n\n      .. image:: sphinx.png\n         :scale: 50%\n         :class: no-scaled-link\n\n   .. versionadded:: 1.3\n\n   .. versionchanged:: 3.0\n\n      It is disabled for images having ``no-scaled-link`` class\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1418: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_math_renderer\n\n   The name of math_renderer extension for HTML output.  The default is\n   ``'mathjax'``.\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1425: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_experimental_html5_writer\n\n   Output is processed with HTML5 writer.  This feature needs docutils 0.13 or\n   newer.  Default is ``False``.\n\n   .. versionadded:: 1.6\n\n   .. deprecated:: 2.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1434: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html4_writer\n\n   Output is processed with HTML4 writer.  Default is ``False``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1441: WARNING: Unknown directive type \"confval\".\n\n.. confval:: singlehtml_sidebars\n\n   Custom sidebar templates, must be a dictionary that maps document names to\n   template names.  And it only allows a key named `'index'`.  All other keys\n   are ignored.  For more information, refer to :confval:`html_sidebars`.  By\n   default, it is same as :confval:`html_sidebars`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1454: WARNING: Unknown directive type \"confval\".\n\n.. confval:: htmlhelp_basename\n\n   Output file base name for HTML help builder.  Default is ``'pydoc'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1458: WARNING: Unknown directive type \"confval\".\n\n.. confval:: htmlhelp_file_suffix\n\n   This is the file name suffix for generated HTML help files.  The\n   default is ``\".html\"``.\n\n   .. versionadded:: 2.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1465: WARNING: Unknown directive type \"confval\".\n\n.. confval:: htmlhelp_link_suffix\n\n   Suffix for generated links to HTML files.  The default is ``\".html\"``.\n\n   .. versionadded:: 2.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1488: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1493: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_bundle_name\n\n   The basename for the Apple Help Book.  Defaults to the :confval:`project`\n   name.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1498: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_bundle_id\n\n   The bundle ID for the help book bundle.\n\n   .. warning::\n\n      You *must* set this value in order to generate Apple Help.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1506: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_dev_region\n\n   The development region.  Defaults to ``'en-us'``, which is Apple\u2019s\n   recommended setting.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1511: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_bundle_version\n\n   The bundle version (as a string).  Defaults to ``'1'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1515: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_icon\n\n   The help bundle icon file, or ``None`` for no icon.  According to Apple's\n   documentation, this should be a 16-by-16 pixel version of the application's\n   icon with a transparent background, saved as a PNG file.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1521: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_kb_product\n\n   The product tag for use with :confval:`applehelp_kb_url`.  Defaults to\n   :samp:`'{<project>}-{<release>}'`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1526: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_kb_url\n\n   The URL for your knowledgebase server,\n   e.g. ``https://example.com/kbsearch.py?p='product'&q='query'&l='lang'``.\n   Help Viewer will replace the values ``'product'``, ``'query'`` and\n   ``'lang'`` at runtime with the contents of :confval:`applehelp_kb_product`,\n   the text entered by the user in the search box and the user's system\n   language respectively.\n\n   Defaults to ``None`` for no remote search.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1537: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_remote_url\n\n   The URL for remote content.  You can place a copy of your Help Book's\n   ``Resources`` folder at this location and Help Viewer will attempt to use\n   it to fetch updated content.\n\n   e.g. if you set it to ``https://example.com/help/Foo/`` and Help Viewer\n   wants a copy of ``index.html`` for an English speaking customer, it will\n   look at ``https://example.com/help/Foo/en.lproj/index.html``.\n\n   Defaults to ``None`` for no remote content.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1549: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_index_anchors\n\n   If ``True``, tell the help indexer to index anchors in the generated HTML.\n   This can be useful for jumping to a particular topic using the\n   ``AHLookupAnchor`` function or the ``openHelpAnchor:inBook:`` method in\n   your code.  It also allows you to use ``help:anchor`` URLs; see the Apple\n   documentation for more information on this topic.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1557: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_min_term_length\n\n   Controls the minimum term length for the help indexer.  Defaults to\n   ``None``, which means the default will be used.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1562: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_stopwords\n\n   Either a language specification (to use the built-in stopwords), or the\n   path to a stopwords plist, or ``None`` if you do not want to use stopwords.\n   The default stopwords plist can be found at\n   ``/usr/share/hiutil/Stopwords.plist`` and contains, at time of writing,\n   stopwords for the following languages:\n\n   =========  ====\n   Language   Code\n   =========  ====\n   English    en\n   German     de\n   Spanish    es\n   French     fr\n   Swedish    sv\n   Hungarian  hu\n   Italian    it\n   =========  ====\n\n   Defaults to :confval:`language`, or if that is not set, to :confval:`en`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1584: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_locale\n\n   Specifies the locale to generate help for.  This is used to determine\n   the name of the ``.lproj`` folder inside the Help Book\u2019s ``Resources``, and\n   is passed to the help indexer.\n\n   Defaults to :confval:`language`, or if that is not set, to :confval:`en`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1592: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_title\n\n   Specifies the help book title.  Defaults to :samp:`'{<project>} Help'`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1596: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_codesign_identity\n\n   Specifies the identity to use for code signing, or ``None`` if code signing\n   is not to be performed.\n\n   Defaults to the value of the environment variable ``CODE_SIGN_IDENTITY``,\n   which is set by Xcode for script build phases, or ``None`` if that variable\n   is not set.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1605: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_codesign_flags\n\n   A *list* of additional arguments to pass to :program:`codesign` when\n   signing the help book.\n\n   Defaults to a list based on the value of the environment variable\n   ``OTHER_CODE_SIGN_FLAGS``, which is set by Xcode for script build phases,\n   or the empty list if that variable is not set.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1614: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_indexer_path\n\n   The path to the :program:`hiutil` program.  Defaults to\n   ``'/usr/bin/hiutil'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1619: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_codesign_path\n\n   The path to the :program:`codesign` program.  Defaults to\n   ``'/usr/bin/codesign'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1624: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_disable_external_tools\n\n   If ``True``, the builder will not run the indexer or the code signing tool,\n   no matter what other settings are specified.\n\n   This is mainly useful for testing, or where you want to run the Sphinx\n   build on a non-Mac OS X platform and then complete the final steps on OS X\n   for some reason.\n\n   Defaults to ``False``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1646: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_basename\n\n   The basename for the epub file.  It defaults to the :confval:`project` name.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1650: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_theme\n\n   The HTML theme for the epub output.  Since the default themes are not\n   optimized for small screen space, using the same theme for HTML and epub\n   output is usually not wise.  This defaults to ``'epub'``, a theme designed\n   to save visual space.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1657: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_theme_options\n\n   A dictionary of options that influence the look and feel of the selected\n   theme.  These are theme-specific.  For the options understood by the builtin\n   themes, see :ref:`this section <builtin-themes>`.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1665: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_title\n\n   The title of the document.  It defaults to the :confval:`html_title` option\n   but can be set independently for epub creation.  It defaults to the\n   :confval:`project` option.\n\n   .. versionchanged:: 2.0\n      It defaults to the ``project`` option.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1674: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_description\n\n   The description of the document. The default value is ``'unknown'``.\n\n   .. versionadded:: 1.4\n\n   .. versionchanged:: 1.5\n      Renamed from ``epub3_description``\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1683: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_author\n\n   The author of the document.  This is put in the Dublin Core metadata.  It\n   defaults to the :confval:`author` option.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1688: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_contributor\n\n   The name of a person, organization, etc. that played a secondary role in\n   the creation of the content of an EPUB Publication. The default value is\n   ``'unknown'``.\n\n   .. versionadded:: 1.4\n\n   .. versionchanged:: 1.5\n      Renamed from ``epub3_contributor``\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1699: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_language\n\n   The language of the document.  This is put in the Dublin Core metadata.  The\n   default is the :confval:`language` option or ``'en'`` if unset.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1704: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_publisher\n\n   The publisher of the document.  This is put in the Dublin Core metadata.\n   You may use any sensible string, e.g. the project homepage.  The defaults to\n   the :confval:`author` option.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1710: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_copyright\n\n   The copyright of the document.  It defaults to the :confval:`copyright`\n   option but can be set independently for epub creation.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1715: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_identifier\n\n   An identifier for the document.  This is put in the Dublin Core metadata.\n   For published documents this is the ISBN number, but you can also use an\n   alternative scheme, e.g. the project homepage.  The default value is\n   ``'unknown'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1722: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_scheme\n\n   The publication scheme for the :confval:`epub_identifier`.  This is put in\n   the Dublin Core metadata.  For published books the scheme is ``'ISBN'``.  If\n   you use the project homepage, ``'URL'`` seems reasonable.  The default value\n   is ``'unknown'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1729: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_uid\n\n   A unique identifier for the document.  This is put in the Dublin Core\n   metadata.  You may use a\n   `XML's Name format <https://www.w3.org/TR/REC-xml/#NT-NameStartChar>`_\n   string.  You can't use hyphen, period, numbers as a first character.  The\n   default value is ``'unknown'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1737: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_cover\n\n   The cover page information.  This is a tuple containing the filenames of\n   the cover image and the html template.  The rendered html cover page is\n   inserted as the first item in the spine in :file:`content.opf`.  If the\n   template filename is empty, no html cover page is created.  No cover at all\n   is created if the tuple is empty.  Examples::\n\n      epub_cover = ('_static/cover.png', 'epub-cover.html')\n      epub_cover = ('_static/cover.png', '')\n      epub_cover = ()\n\n   The default value is ``()``.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1753: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_css_files\n\n   A list of CSS files.  The entry must be a *filename* string or a tuple\n   containing the *filename* string and the *attributes* dictionary.  For more\n   information, see :confval:`html_css_files`.\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1761: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_guide\n\n   Meta data for the guide element of :file:`content.opf`. This is a\n   sequence of tuples containing the *type*, the *uri* and the *title* of\n   the optional guide information. See the OPF documentation\n   at `<http://idpf.org/epub>`_ for details. If possible, default entries\n   for the *cover* and *toc* types are automatically inserted. However,\n   the types can be explicitly overwritten if the default entries are not\n   appropriate. Example::\n\n      epub_guide = (('cover', 'cover.html', u'Cover Page'),)\n\n   The default value is ``()``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1775: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_pre_files\n\n   Additional files that should be inserted before the text generated by\n   Sphinx. It is a list of tuples containing the file name and the title.\n   If the title is empty, no entry is added to :file:`toc.ncx`.  Example::\n\n      epub_pre_files = [\n          ('index.html', 'Welcome'),\n      ]\n\n   The default value is ``[]``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1787: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_post_files\n\n   Additional files that should be inserted after the text generated by Sphinx.\n   It is a list of tuples containing the file name and the title.  This option\n   can be used to add an appendix.  If the title is empty, no entry is added\n   to :file:`toc.ncx`.  The default value is ``[]``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1794: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_exclude_files\n\n   A list of files that are generated/copied in the build directory but should\n   not be included in the epub file.  The default value is ``[]``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1799: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_tocdepth\n\n   The depth of the table of contents in the file :file:`toc.ncx`.  It should\n   be an integer greater than zero.  The default value is 3.  Note: A deeply\n   nested table of contents may be difficult to navigate.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1805: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_tocdup\n\n   This flag determines if a toc entry is inserted again at the beginning of\n   its nested toc listing.  This allows easier navigation to the top of\n   a chapter, but can be confusing because it mixes entries of different\n   depth in one list.  The default value is ``True``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1812: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_tocscope\n\n   This setting control the scope of the epub table of contents.  The setting\n   can have the following values:\n\n   * ``'default'`` -- include all toc entries that are not hidden (default)\n   * ``'includehidden'`` -- include all toc entries\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1822: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_fix_images\n\n   This flag determines if sphinx should try to fix image formats that are not\n   supported by some epub readers.  At the moment palette images with a small\n   color table are upgraded.  You need Pillow, the Python Image Library,\n   installed to use this option.  The default value is ``False`` because the\n   automatic conversion may lose information.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1832: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_max_image_width\n\n   This option specifies the maximum width of images.  If it is set to a value\n   greater than zero, images with a width larger than the given value are\n   scaled accordingly.  If it is zero, no scaling is performed. The default\n   value is ``0``.  You need the Python Image Library (Pillow) installed to use\n   this option.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1842: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_show_urls\n\n   Control whether to display URL addresses. This is very useful for\n   readers that have no other means to display the linked URL. The\n   settings can have the following values:\n\n   * ``'inline'`` -- display URLs inline in parentheses (default)\n   * ``'footnote'`` -- display URLs in footnotes\n   * ``'no'`` -- do not display URLs\n\n   The display of inline URLs can be customized by adding CSS rules for the\n   class ``link-target``.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1857: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_use_index\n\n   If true, add an index to the epub document.  It defaults to the\n   :confval:`html_use_index` option but can be set independently for epub\n   creation.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1865: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_writing_mode\n\n   It specifies writing direction. It can accept ``'horizontal'`` (default) and\n   ``'vertical'``\n\n   .. list-table::\n      :header-rows: 1\n      :stub-columns: 1\n\n      - * ``epub_writing_mode``\n        * ``'horizontal'``\n        * ``'vertical'``\n      - * writing-mode [#]_\n        * ``horizontal-tb``\n        * ``vertical-rl``\n      - * page progression\n        * left to right\n        * right to left\n      - * iBook's Scroll Theme support\n        * scroll-axis is vertical.\n        * scroll-axis is horizontal.\n\n   .. [#] https://developer.mozilla.org/en-US/docs/Web/CSS/writing-mode\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1897: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_engine\n\n   The LaTeX engine to build the docs.  The setting can have the following\n   values:\n\n   * ``'pdflatex'`` -- PDFLaTeX (default)\n   * ``'xelatex'`` -- XeLaTeX\n   * ``'lualatex'`` -- LuaLaTeX\n   * ``'platex'`` -- pLaTeX (default if :confval:`language` is ``'ja'``)\n   * ``'uplatex'`` -- upLaTeX (experimental)\n\n   ``'pdflatex'``\\ 's support for Unicode characters is limited.\n\n   .. note::\n\n      2.0 adds to ``'pdflatex'`` support in Latin language document of\n      occasional Cyrillic or Greek letters or words.  This is not automatic,\n      see the discussion of the :confval:`latex_elements` ``'fontenc'`` key.\n\n   If your project uses Unicode characters, setting the engine to\n   ``'xelatex'`` or ``'lualatex'`` and making sure to use an OpenType font\n   with wide-enough glyph coverage is often easier than trying to make\n   ``'pdflatex'`` work with the extra Unicode characters.  Since Sphinx 2.0\n   the default is the GNU FreeFont which covers well Latin, Cyrillic and\n   Greek.\n\n   .. versionchanged:: 2.1.0\n\n      Use ``xelatex`` (and LaTeX package ``xeCJK``) by default for Chinese\n      documents.\n\n   .. versionchanged:: 2.2.1\n\n      Use ``xelatex`` by default for Greek documents.\n\n   .. versionchanged:: 2.3\n\n      Add ``uplatex`` support.\n\n   Contrarily to :ref:`MathJaX math rendering in HTML output <math-support>`,\n   LaTeX requires some extra configuration to support Unicode literals in\n   :rst:dir:`math`: the only comprehensive solution (as far as we know) is to\n   use ``'xelatex'`` or ``'lualatex'`` *and* to add\n   ``r'\\usepackage{unicode-math}'`` (e.g. via the :confval:`latex_elements`\n   ``'preamble'`` key).  You may prefer\n   ``r'\\usepackage[math-style=literal]{unicode-math}'`` to keep a Unicode\n   literal such as ``\u03b1`` (U+03B1) for example as is in output, rather than\n   being rendered as :math:`\\alpha`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1946: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_documents\n\n   This value determines how to group the document tree into LaTeX source files.\n   It must be a list of tuples ``(startdocname, targetname, title, author,\n   theme, toctree_only)``, where the items are:\n\n   *startdocname*\n     String that specifies the :term:`document name` of the LaTeX file's master\n     document.  All documents referenced by the *startdoc* document in TOC trees\n     will be included in the LaTeX file.  (If you want to use the default master\n     document for your LaTeX build, provide your :confval:`master_doc` here.)\n\n   *targetname*\n     File name of the LaTeX file in the output directory.\n\n   *title*\n     LaTeX document title.  Can be empty to use the title of the *startdoc*\n     document.  This is inserted as LaTeX markup, so special characters like a\n     backslash or ampersand must be represented by the proper LaTeX commands if\n     they are to be inserted literally.\n\n   *author*\n     Author for the LaTeX document.  The same LaTeX markup caveat as for *title*\n     applies.  Use ``\\\\and`` to separate multiple authors, as in:\n     ``'John \\\\and Sarah'`` (backslashes must be Python-escaped to reach LaTeX).\n\n   *theme*\n     LaTeX theme.  See :confval:`latex_theme`.\n\n   *toctree_only*\n     Must be ``True`` or ``False``.  If true, the *startdoc* document itself is\n     not included in the output, only the documents referenced by it via TOC\n     trees.  With this option, you can put extra stuff in the master document\n     that shows up in the HTML, but not the LaTeX output.\n\n   .. versionadded:: 1.2\n      In the past including your own document class required you to prepend the\n      document class name with the string \"sphinx\". This is not necessary\n      anymore.\n\n   .. versionadded:: 0.3\n      The 6th item ``toctree_only``.  Tuples with 5 items are still accepted.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1989: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_logo\n\n   If given, this must be the name of an image file (relative to the\n   configuration directory) that is the logo of the docs.  It is placed at the\n   top of the title page.  Default: ``None``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1995: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_toplevel_sectioning\n\n   This value determines the topmost sectioning unit. It should be chosen from\n   ``'part'``, ``'chapter'`` or ``'section'``. The default is ``None``;\n   the topmost\n   sectioning unit is switched by documentclass: ``section`` is used if\n   documentclass will be ``howto``, otherwise ``chapter`` will be used.\n\n   Note that if LaTeX uses ``\\part`` command, then the numbering of sectioning\n   units one level deep gets off-sync with HTML numbering, because LaTeX\n   numbers continuously ``\\chapter`` (or ``\\section`` for ``howto``.)\n\n   .. versionadded:: 1.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2009: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_appendices\n\n   A list of document names to append as an appendix to all manuals.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2013: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_domain_indices\n\n   If true, generate domain-specific indices in addition to the general index.\n   For e.g. the Python domain, this is the global module index.  Default is\n   ``True``.\n\n   This value can be a bool or a list of index names that should be generated,\n   like for :confval:`html_domain_indices`.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2024: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_show_pagerefs\n\n   If true, add page references after internal references.  This is very useful\n   for printed copies of the manual.  Default is ``False``.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2031: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_show_urls\n\n   Control whether to display URL addresses.  This is very useful for printed\n   copies of the manual.  The setting can have the following values:\n\n   * ``'no'`` -- do not display URLs (default)\n   * ``'footnote'`` -- display URLs in footnotes\n   * ``'inline'`` -- display URLs inline in parentheses\n\n   .. versionadded:: 1.0\n   .. versionchanged:: 1.1\n      This value is now a string; previously it was a boolean value, and a true\n      value selected the ``'inline'`` display.  For backwards compatibility,\n      ``True`` is still accepted.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2046: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_use_latex_multicolumn\n\n   The default is ``False``: it means that Sphinx's own macros are used for\n   merged cells from grid tables. They allow general contents (literal blocks,\n   lists, blockquotes, ...) but may have problems if the\n   :rst:dir:`tabularcolumns` directive was used to inject LaTeX mark-up of the\n   type ``>{..}``, ``<{..}``, ``@{..}`` as column specification.\n\n   Setting to ``True`` means to use LaTeX's standard ``\\multicolumn``; this is\n   incompatible with literal blocks in the horizontally merged cell, and also\n   with multiple paragraphs in such cell if the table is rendered using\n   ``tabulary``.\n\n   .. versionadded:: 1.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2061: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_use_xindy\n\n   If ``True``, the PDF build from the LaTeX files created by Sphinx\n   will use :program:`xindy` (doc__) rather than :program:`makeindex`\n   for preparing the index of general terms (from :rst:dir:`index`\n   usage).  This means that words with UTF-8 characters will get\n   ordered correctly for the :confval:`language`.\n\n   __ http://xindy.sourceforge.net/\n\n   - This option is ignored if :confval:`latex_engine` is ``'platex'``\n     (Japanese documents; :program:`mendex` replaces :program:`makeindex`\n     then).\n\n   - The default is ``True`` for ``'xelatex'`` or ``'lualatex'`` as\n     :program:`makeindex`, if any indexed term starts with a non-ascii\n     character, creates ``.ind`` files containing invalid bytes for\n     UTF-8 encoding. With ``'lualatex'`` this then breaks the PDF\n     build.\n\n   - The default is ``False`` for ``'pdflatex'`` but ``True`` is\n     recommended for non-English documents as soon as some indexed\n     terms use non-ascii characters from the language script.\n\n   Sphinx adds to :program:`xindy` base distribution some dedicated support\n   for using ``'pdflatex'`` engine with Cyrillic scripts.  And whether with\n   ``'pdflatex'`` or Unicode engines, Cyrillic documents handle correctly the\n   indexing of Latin names, even with diacritics.\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2092: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_elements\n\n   .. versionadded:: 0.5\n\n   Its :ref:`documentation <latex_elements_confval>` has moved to :doc:`/latex`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2098: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_docclass\n\n   A dictionary mapping ``'howto'`` and ``'manual'`` to names of real document\n   classes that will be used as the base for the two Sphinx classes.  Default\n   is to use ``'article'`` for ``'howto'`` and ``'report'`` for ``'manual'``.\n\n   .. versionadded:: 1.0\n\n   .. versionchanged:: 1.5\n\n      In Japanese docs (:confval:`language` is ``'ja'``), by default\n      ``'jreport'`` is used for ``'howto'`` and ``'jsbook'`` for ``'manual'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2111: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_additional_files\n\n   A list of file names, relative to the configuration directory, to copy to\n   the build directory when building LaTeX output.  This is useful to copy\n   files that Sphinx doesn't copy automatically, e.g. if they are referenced in\n   custom LaTeX added in ``latex_elements``.  Image files that are referenced\n   in source files (e.g. via ``.. image::``) are copied automatically.\n\n   You have to make sure yourself that the filenames don't collide with those\n   of any automatically copied files.\n\n   .. versionadded:: 0.6\n\n   .. versionchanged:: 1.2\n      This overrides the files which is provided from Sphinx such as\n      ``sphinx.sty``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2128: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_theme\n\n   The \"theme\" that the LaTeX output should use.  It is a collection of settings\n   for LaTeX output (ex. document class, top level sectioning unit and so on).\n\n   As a built-in LaTeX themes, ``manual`` and ``howto`` are bundled.\n\n   ``manual``\n     A LaTeX theme for writing a manual.  It imports the ``report`` document\n     class (Japanese documents use ``jsbook``).\n\n   ``howto``\n     A LaTeX theme for writing an article.  It imports the ``article`` document\n     class (Japanese documents use ``jreport`` rather).  :confval:`latex_appendices`\n     is available only for this theme.\n\n   It defaults to ``'manual'``.\n\n   .. versionadded:: 3.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2148: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_theme_options\n\n   A dictionary of options that influence the look and feel of the selected\n   theme.\n\n   .. versionadded:: 3.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2155: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_theme_path\n\n   A list of paths that contain custom LaTeX themes as subdirectories.  Relative\n   paths are taken as relative to the configuration directory.\n\n   .. versionadded:: 3.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2170: WARNING: Unknown directive type \"confval\".\n\n.. confval:: text_newlines\n\n   Determines which end-of-line character(s) are used in text output.\n\n   * ``'unix'``: use Unix-style line endings (``\\n``)\n   * ``'windows'``: use Windows-style line endings (``\\r\\n``)\n   * ``'native'``: use the line ending style of the platform the documentation\n     is built on\n\n   Default: ``'unix'``.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2183: WARNING: Unknown directive type \"confval\".\n\n.. confval:: text_sectionchars\n\n   A string of 7 characters that should be used for underlining sections.\n   The first character is used for first-level headings, the second for\n   second-level headings and so on.\n\n   The default is ``'*=-~\"+`'``.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2193: WARNING: Unknown directive type \"confval\".\n\n.. confval:: text_add_secnumbers\n\n   A boolean that decides whether section numbers are included in text output.\n   Default is ``True``.\n\n   .. versionadded:: 1.7\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2200: WARNING: Unknown directive type \"confval\".\n\n.. confval:: text_secnumber_suffix\n\n   Suffix for section numbers in text output.  Default: ``\". \"``. Set to\n   ``\" \"`` to suppress the final dot on section numbers.\n\n   .. versionadded:: 1.7\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2215: WARNING: Unknown directive type \"confval\".\n\n.. confval:: man_pages\n\n   This value determines how to group the document tree into manual pages.  It\n   must be a list of tuples ``(startdocname, name, description, authors,\n   section)``, where the items are:\n\n   *startdocname*\n     String that specifies the :term:`document name` of the manual page's master\n     document. All documents referenced by the *startdoc* document in TOC trees\n     will be included in the manual file.  (If you want to use the default\n     master document for your manual pages build, use your :confval:`master_doc`\n     here.)\n\n   *name*\n     Name of the manual page.  This should be a short string without spaces or\n     special characters.  It is used to determine the file name as well as the\n     name of the manual page (in the NAME section).\n\n   *description*\n     Description of the manual page.  This is used in the NAME section.\n\n   *authors*\n     A list of strings with authors, or a single string.  Can be an empty\n     string or list if you do not want to automatically generate an AUTHORS\n     section in the manual page.\n\n   *section*\n     The manual page section.  Used for the output file name as well as in the\n     manual page header.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2247: WARNING: Unknown directive type \"confval\".\n\n.. confval:: man_show_urls\n\n   If true, add URL addresses after links.  Default is ``False``.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2253: WARNING: Unknown directive type \"confval\".\n\n.. confval:: man_make_section_directory\n\n   If true, make a section directory on build man page.  Default is False.\n\n   .. versionadded:: 3.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2267: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_documents\n\n   This value determines how to group the document tree into Texinfo source\n   files.  It must be a list of tuples ``(startdocname, targetname, title,\n   author, dir_entry, description, category, toctree_only)``, where the items\n   are:\n\n   *startdocname*\n     String that specifies the :term:`document name` of the the Texinfo file's\n     master document.  All documents referenced by the *startdoc* document in\n     TOC trees will be included in the Texinfo file.  (If you want to use the\n     default master document for your Texinfo build, provide your\n     :confval:`master_doc` here.)\n\n   *targetname*\n     File name (no extension) of the Texinfo file in the output directory.\n\n   *title*\n     Texinfo document title.  Can be empty to use the title of the *startdoc*\n     document.  Inserted as Texinfo markup, so special characters like ``@`` and\n     ``{}`` will need to be escaped to be inserted literally.\n\n   *author*\n     Author for the Texinfo document.  Inserted as Texinfo markup.  Use ``@*``\n     to separate multiple authors, as in: ``'John@*Sarah'``.\n\n   *dir_entry*\n     The name that will appear in the top-level ``DIR`` menu file.\n\n   *description*\n     Descriptive text to appear in the top-level ``DIR`` menu file.\n\n   *category*\n     Specifies the section which this entry will appear in the top-level\n     ``DIR`` menu file.\n\n   *toctree_only*\n     Must be ``True`` or ``False``.  If true, the *startdoc* document itself is\n     not included in the output, only the documents referenced by it via TOC\n     trees.  With this option, you can put extra stuff in the master document\n     that shows up in the HTML, but not the Texinfo output.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2311: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_appendices\n\n   A list of document names to append as an appendix to all manuals.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2317: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_domain_indices\n\n   If true, generate domain-specific indices in addition to the general index.\n   For e.g. the Python domain, this is the global module index.  Default is\n   ``True``.\n\n   This value can be a bool or a list of index names that should be generated,\n   like for :confval:`html_domain_indices`.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2328: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_show_urls\n\n   Control how to display URL addresses.\n\n   * ``'footnote'`` -- display URLs in footnotes (default)\n   * ``'no'`` -- do not display URLs\n   * ``'inline'`` -- display URLs inline in parentheses\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2338: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_no_detailmenu\n\n   If true, do not generate a ``@detailmenu`` in the \"Top\" node's menu\n   containing entries for each sub-node in the document.  Default is ``False``.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2345: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_elements\n\n   A dictionary that contains Texinfo snippets that override those Sphinx\n   usually puts into the generated ``.texi`` files.\n\n   * Keys that you may want to override include:\n\n     ``'paragraphindent'``\n        Number of spaces to indent the first line of each paragraph, default\n        ``2``.  Specify ``0`` for no indentation.\n\n     ``'exampleindent'``\n        Number of spaces to indent the lines for examples or literal blocks,\n        default ``4``.  Specify ``0`` for no indentation.\n\n     ``'preamble'``\n        Texinfo markup inserted near the beginning of the file.\n\n     ``'copying'``\n        Texinfo markup inserted within the ``@copying`` block and displayed\n        after the title.  The default value consists of a simple title page\n        identifying the project.\n\n   * Keys that are set by other options and therefore should not be overridden\n     are:\n\n     ``'author'``\n     ``'body'``\n     ``'date'``\n     ``'direntry'``\n     ``'filename'``\n     ``'project'``\n     ``'release'``\n     ``'title'``\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2391: WARNING: Unknown directive type \"confval\".\n\n.. confval:: qthelp_basename\n\n   The basename for the qthelp file.  It defaults to the :confval:`project`\n   name.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2396: WARNING: Unknown directive type \"confval\".\n\n.. confval:: qthelp_namespace\n\n   The namespace for the qthelp file.  It defaults to\n   ``org.sphinx.<project_name>.<project_version>``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2401: WARNING: Unknown directive type \"confval\".\n\n.. confval:: qthelp_theme\n\n   The HTML theme for the qthelp output.\n   This defaults to ``'nonav'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2406: WARNING: Unknown directive type \"confval\".\n\n.. confval:: qthelp_theme_options\n\n   A dictionary of options that influence the look and feel of the selected\n   theme.  These are theme-specific.  For the options understood by the builtin\n   themes, see :ref:`this section <builtin-themes>`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2416: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_ignore\n\n   A list of regular expressions that match URIs that should not be checked\n   when doing a ``linkcheck`` build.  Example::\n\n      linkcheck_ignore = [r'http://localhost:\\d+/']\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2425: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_request_headers\n\n   A dictionary that maps baseurls to HTTP request headers.\n\n   The key is a URL base string like ``\"https://sphinx-doc.org/\"``.  To specify\n   headers for other hosts, ``\"*\"`` can be used.  It matches all hosts only when\n   the URL does not match other settings.\n\n   The value is a dictionary that maps header name to its value.\n\n   Example:\n\n   .. code-block:: python\n\n      linkcheck_request_headers = {\n          \"https://sphinx-doc.org/\": {\n              \"Accept\": \"text/html\",\n              \"Accept-Encoding\": \"utf-8\",\n          },\n          \"*\": {\n              \"Accept\": \"text/html,application/xhtml+xml\",\n          }\n      }\n\n   .. versionadded:: 3.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2451: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_retries\n\n   The number of times the linkcheck builder will attempt to check a URL before\n   declaring it broken. Defaults to 1 attempt.\n\n   .. versionadded:: 1.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2458: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_timeout\n\n   A timeout value, in seconds, for the linkcheck builder.  The default is to\n   use Python's global socket timeout.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2465: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_workers\n\n   The number of worker threads to use when checking links.  Default is 5\n   threads.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2472: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_anchors\n\n   If true, check the validity of ``#anchor``\\ s in links. Since this requires\n   downloading the whole document, it's considerably slower when enabled.\n   Default is ``True``.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2480: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_anchors_ignore\n\n   A list of regular expressions that match anchors Sphinx should skip when\n   checking the validity of anchors in links. This allows skipping anchors that\n   a website's JavaScript adds to control dynamic pages or when triggering an\n   internal REST request. Default is ``[\"^!\"]``.\n\n   .. note::\n\n      If you want to ignore anchors of a specific page or of pages that match a\n      specific pattern (but still check occurrences of the same page(s) that\n      don't have anchors), use :confval:`linkcheck_ignore` instead, for example\n      as follows::\n\n         linkcheck_ignore = [\n            'http://www.sphinx-doc.org/en/1.7/intro.html#'\n         ]\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2500: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_auth\n\n   Pass authentication information when doing a ``linkcheck`` build.\n\n   A list of ``(regex_pattern, auth_info)`` tuples where the items are:\n\n   *regex_pattern*\n     A regular expression that matches a URI.\n   *auth_info*\n     Authentication information to use for that URI. The value can be anything\n     that is understood by the ``requests`` library (see `requests\n     Authentication <requests-auth>`_ for details).\n\n     .. _requests-auth: https://requests.readthedocs.io/en/master/user/authentication/\n\n   The ``linkcheck`` builder will use the first matching ``auth_info`` value\n   it can find in the :confval:`linkcheck_auth` list, so values earlier in the\n   list have higher priority.\n\n   Example::\n\n      linkcheck_auth = [\n        ('https://foo\\.yourcompany\\.com/.+', ('johndoe', 'secret')),\n        ('https://.+\\.yourcompany\\.com/.+', HTTPDigestAuth(...)),\n      ]\n\n   .. versionadded:: 2.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2532: WARNING: Unknown directive type \"confval\".\n\n.. confval:: xml_pretty\n\n   If true, pretty-print the XML.  Default is ``True``.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2552: WARNING: Unknown directive type \"confval\".\n\n.. confval:: c_id_attributes\n\n   A list of strings that the parser additionally should accept as attributes.\n   This can for example be used when attributes have been ``#define`` d for\n   portability.\n\n   .. versionadded:: 3.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2560: WARNING: Unknown directive type \"confval\".\n\n.. confval:: c_paren_attributes\n\n   A list of strings that the parser additionally should accept as attributes\n   with one argument.  That is, if ``my_align_as`` is in the list, then\n   ``my_align_as(X)`` is parsed as an attribute for all strings ``X`` that have\n   balanced braces (``()``, ``[]``, and ``{}``).  This can for example be used\n   when attributes have been ``#define`` d for portability.\n\n   .. versionadded:: 3.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2570: WARNING: Unknown directive type \"confval\".\n\n.. confval:: c_allow_pre_v3\n\n   A boolean (default ``False``) controlling whether to parse and try to\n   convert pre-v3 style type directives and type roles.\n\n   .. versionadded:: 3.2\n   .. deprecated:: 3.2\n      Use the directives and roles added in v3.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2579: WARNING: Unknown directive type \"confval\".\n\n.. confval:: c_warn_on_allowed_pre_v3\n\n   A boolean (default ``True``) controlling whether to warn when a pre-v3\n   style type directive/role is parsed and converted.\n\n   .. versionadded:: 3.2\n   .. deprecated:: 3.2\n      Use the directives and roles added in v3.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2593: WARNING: Unknown directive type \"confval\".\n\n.. confval:: cpp_index_common_prefix\n\n   A list of prefixes that will be ignored when sorting C++ objects in the\n   global index.  For example ``['awesome_lib::']``.\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2600: WARNING: Unknown directive type \"confval\".\n\n.. confval:: cpp_id_attributes\n\n   A list of strings that the parser additionally should accept as attributes.\n   This can for example be used when attributes have been ``#define`` d for\n   portability.\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2608: WARNING: Unknown directive type \"confval\".\n\n.. confval:: cpp_paren_attributes\n\n   A list of strings that the parser additionally should accept as attributes\n   with one argument.  That is, if ``my_align_as`` is in the list, then\n   ``my_align_as(X)`` is parsed as an attribute for all strings ``X`` that have\n   balanced braces (``()``, ``[]``, and ``{}``).  This can for example be used\n   when attributes have been ``#define`` d for portability.\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2622: WARNING: Include file '/sphinx-doc__sphinx/_static/conf.py.txt' not found or reading it failed\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2541: WARNING: Footnote [1] is not referenced.\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:119: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:267: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:290: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:383: WARNING: Unknown directive type \"confval\".\n\n.. confval:: autoclass_content\n\n   This value selects what content will be inserted into the main body of an\n   :rst:dir:`autoclass` directive.  The possible values are:\n\n   ``\"class\"``\n      Only the class' docstring is inserted.  This is the default.  You can\n      still document ``__init__`` as a separate method using\n      :rst:dir:`automethod` or the ``members`` option to :rst:dir:`autoclass`.\n   ``\"both\"``\n      Both the class' and the ``__init__`` method's docstring are concatenated\n      and inserted.\n   ``\"init\"``\n      Only the ``__init__`` method's docstring is inserted.\n\n   .. versionadded:: 0.3\n\n   If the class has no ``__init__`` method or if the ``__init__`` method's\n   docstring is empty, but the class has a ``__new__`` method's docstring,\n   it is used instead.\n\n   .. versionadded:: 1.4\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:406: WARNING: Unknown directive type \"confval\".\n\n.. confval:: autodoc_member_order\n\n   This value selects if automatically documented members are sorted\n   alphabetical (value ``'alphabetical'``), by member type (value\n   ``'groupwise'``) or by source order (value ``'bysource'``).  The default is\n   alphabetical.\n\n   Note that for source order, the module must be a Python module with the\n   source code available.\n\n   .. versionadded:: 0.6\n   .. versionchanged:: 1.0\n      Support for ``'bysource'``.\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:420: WARNING: Unknown directive type \"confval\".\n\n.. confval:: autodoc_default_flags\n\n   This value is a list of autodoc directive flags that should be automatically\n   applied to all autodoc directives.  The supported flags are ``'members'``,\n   ``'undoc-members'``, ``'private-members'``, ``'special-members'``,\n   ``'inherited-members'``, ``'show-inheritance'``, ``'ignore-module-all'``\n   and ``'exclude-members'``.\n\n   .. versionadded:: 1.0\n\n   .. deprecated:: 1.8\n\n      Integrated into :confval:`autodoc_default_options`.\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:434: WARNING: Unknown directive type \"confval\".\n\n.. confval:: autodoc_default_options\n\n   The default options for autodoc directives.  They are applied to all autodoc\n   directives automatically.  It must be a dictionary which maps option names\n   to the values.  For example::\n\n       autodoc_default_options = {\n           'members': 'var1, var2',\n           'member-order': 'bysource',\n           'special-members': '__init__',\n           'undoc-members': True,\n           'exclude-members': '__weakref__'\n       }\n\n   Setting ``None`` or ``True`` to the value is equivalent to giving only the\n   option name to the directives.\n\n   The supported options are ``'members'``, ``'member-order'``,\n   ``'undoc-members'``, ``'private-members'``, ``'special-members'``,\n   ``'inherited-members'``, ``'show-inheritance'``, ``'ignore-module-all'``,\n   ``'imported-members'`` and ``'exclude-members'``.\n\n   .. versionadded:: 1.8\n\n   .. versionchanged:: 2.0\n      Accepts ``True`` as a value.\n\n   .. versionchanged:: 2.1\n      Added ``'imported-members'``.\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:464: WARNING: Unknown directive type \"confval\".\n\n.. confval:: autodoc_docstring_signature\n\n   Functions imported from C modules cannot be introspected, and therefore the\n   signature for such functions cannot be automatically determined.  However, it\n   is an often-used convention to put the signature into the first line of the\n   function's docstring.\n\n   If this boolean value is set to ``True`` (which is the default), autodoc will\n   look at the first line of the docstring for functions and methods, and if it\n   looks like a signature, use the line as the signature and remove it from the\n   docstring content.\n\n   If the signature line ends with backslash, autodoc considers the function has\n   multiple signatures and look at the next line of the docstring.  It is useful\n   for overloaded function.\n\n   .. versionadded:: 1.1\n   .. versionchanged:: 3.1\n\n      Support overloaded signatures\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:485: WARNING: Unknown directive type \"confval\".\n\n.. confval:: autodoc_mock_imports\n\n   This value contains a list of modules to be mocked up. This is useful when\n   some external dependencies are not met at build time and break the building\n   process. You may only specify the root package of the dependencies\n   themselves and omit the sub-modules:\n\n   .. code-block:: python\n\n      autodoc_mock_imports = [\"django\"]\n\n   Will mock all imports under the ``django`` package.\n\n   .. versionadded:: 1.3\n\n   .. versionchanged:: 1.6\n      This config value only requires to declare the top-level modules that\n      should be mocked.\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:504: WARNING: Unknown directive type \"confval\".\n\n.. confval:: autodoc_typehints\n\n   This value controls how to represents typehints.  The setting takes the\n   following values:\n\n   * ``'signature'`` -- Show typehints as its signature (default)\n   * ``'description'`` -- Show typehints as content of function or method\n   * ``'none'`` -- Do not show typehints\n\n   .. versionadded:: 2.1\n   .. versionadded:: 3.0\n\n      New option ``'description'`` is added.\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:518: WARNING: Unknown directive type \"confval\".\n\n.. confval:: autodoc_type_aliases\n\n   A dictionary for users defined `type aliases`__ that maps a type name to the\n   full-qualified object name.  It is used to keep type aliases not evaluated in\n   the document.  Defaults to empty (``{}``).\n\n   The type aliases are only available if your program enables `Postponed\n   Evaluation of Annotations (PEP 563)`__ feature via ``from __future__ import\n   annotations``.\n\n   For example, there is code using a type alias::\n\n     from __future__ import annotations\n\n     AliasType = Union[List[Dict[Tuple[int, str], Set[int]]], Tuple[str, List[str]]]\n\n     def f() -> AliasType:\n         ...\n\n   If ``autodoc_type_aliases`` is not set, autodoc will generate internal mark-up\n   from this code as following::\n\n     .. py:function:: f() -> Union[List[Dict[Tuple[int, str], Set[int]]], Tuple[str, List[str]]]\n\n        ...\n\n   If you set ``autodoc_type_aliases`` as\n   ``{'AliasType': 'your.module.TypeAlias'}``, it generates a following document\n   internally::\n\n     .. py:function:: f() -> your.module.AliasType:\n\n        ...\n\n   .. __: https://www.python.org/dev/peps/pep-0563/\n   .. __: https://mypy.readthedocs.io/en/latest/kinds_of_types.html#type-aliases\n   .. versionadded:: 3.3\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:556: WARNING: Unknown directive type \"confval\".\n\n.. confval:: autodoc_warningiserror\n\n   This value controls the behavior of :option:`sphinx-build -W` during\n   importing modules.\n   If ``False`` is given, autodoc forcedly suppresses the error if the imported\n   module emits warnings.  By default, ``True``.\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:563: WARNING: Unknown directive type \"confval\".\n\n.. confval:: autodoc_inherit_docstrings\n\n   This value controls the docstrings inheritance.\n   If set to True the docstring for classes or methods, if not explicitly set,\n   is inherited form parents.\n\n   The default is ``True``.\n\n   .. versionadded:: 1.7\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:573: WARNING: Unknown directive type \"confval\".\n\n.. confval:: suppress_warnings\n   :noindex:\n\n   :mod:`autodoc` supports to suppress warning messages via\n   :confval:`suppress_warnings`.  It allows following warnings types in\n   addition:\n\n   * autodoc\n   * autodoc.import_object\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:589: WARNING: Unknown directive type \"event\".\n\n.. event:: autodoc-process-docstring (app, what, name, obj, options, lines)\n\n   .. versionadded:: 0.4\n\n   Emitted when autodoc has read and processed a docstring.  *lines* is a list\n   of strings -- the lines of the processed docstring -- that the event handler\n   can modify **in place** to change what Sphinx puts into the output.\n\n   :param app: the Sphinx application object\n   :param what: the type of the object which the docstring belongs to (one of\n      ``\"module\"``, ``\"class\"``, ``\"exception\"``, ``\"function\"``, ``\"method\"``,\n      ``\"attribute\"``)\n   :param name: the fully qualified name of the object\n   :param obj: the object itself\n   :param options: the options given to the directive: an object with attributes\n      ``inherited_members``, ``undoc_members``, ``show_inheritance`` and\n      ``noindex`` that are true if the flag option of same name was given to the\n      auto directive\n   :param lines: the lines of the docstring, see above\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:609: WARNING: Unknown directive type \"event\".\n\n.. event:: autodoc-before-process-signature (app, obj, bound_method)\n\n   .. versionadded:: 2.4\n\n   Emitted before autodoc formats a signature for an object. The event handler\n   can modify an object to change its signature.\n\n   :param app: the Sphinx application object\n   :param obj: the object itself\n   :param bound_method: a boolean indicates an object is bound method or not\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:620: WARNING: Unknown directive type \"event\".\n\n.. event:: autodoc-process-signature (app, what, name, obj, options, signature, return_annotation)\n\n   .. versionadded:: 0.5\n\n   Emitted when autodoc has formatted a signature for an object. The event\n   handler can return a new tuple ``(signature, return_annotation)`` to change\n   what Sphinx puts into the output.\n\n   :param app: the Sphinx application object\n   :param what: the type of the object which the docstring belongs to (one of\n      ``\"module\"``, ``\"class\"``, ``\"exception\"``, ``\"function\"``, ``\"method\"``,\n      ``\"attribute\"``)\n   :param name: the fully qualified name of the object\n   :param obj: the object itself\n   :param options: the options given to the directive: an object with attributes\n      ``inherited_members``, ``undoc_members``, ``show_inheritance`` and\n      ``noindex`` that are true if the flag option of same name was given to the\n      auto directive\n   :param signature: function signature, as a string of the form\n      ``\"(parameter_1, parameter_2)\"``, or ``None`` if introspection didn't\n      succeed and signature wasn't specified in the directive.\n   :param return_annotation: function return annotation as a string of the form\n      ``\" -> annotation\"``, or ``None`` if there is no return annotation\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:644: WARNING: Unknown interpreted text role \"event\".\n/sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py:docstring of sphinx.ext.autodoc.cut_lines:10: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:657: WARNING: Unknown directive type \"event\".\n\n.. event:: autodoc-skip-member (app, what, name, obj, skip, options)\n\n   .. versionadded:: 0.5\n\n   Emitted when autodoc has to decide whether a member should be included in the\n   documentation.  The member is excluded if a handler returns ``True``.  It is\n   included if the handler returns ``False``.\n\n   If more than one enabled extension handles the ``autodoc-skip-member``\n   event, autodoc will use the first non-``None`` value returned by a handler.\n   Handlers should return ``None`` to fall back to the skipping behavior of\n   autodoc and other enabled extensions.\n\n   :param app: the Sphinx application object\n   :param what: the type of the object which the docstring belongs to (one of\n      ``\"module\"``, ``\"class\"``, ``\"exception\"``, ``\"function\"``, ``\"method\"``,\n      ``\"attribute\"``)\n   :param name: the fully qualified name of the object\n   :param obj: the object itself\n   :param skip: a boolean indicating if autodoc will skip this member if the\n      user handler does not override the decision\n   :param options: the options given to the directive: an object with attributes\n      ``inherited_members``, ``undoc_members``, ``show_inheritance`` and\n      ``noindex`` that are true if the flag option of same name was given to the\n      auto directive\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:119: WARNING: Unknown directive type \"todo\".\n\n.. todo:: Update the below link when we add new guides on these.\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:161: WARNING: Unknown directive type \"todo\".\n\n.. todo:: Move this whole section into a guide on rST or directives\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:252: WARNING: Unknown directive type \"todo\".\n\n.. todo:: Move this entire doc to a different section\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:262: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:297: WARNING: Unknown directive type \"todo\".\n\n.. todo:: Move this doc to another section\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:308: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:308: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:312: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:317: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:13: WARNING: Unknown directive type \"todo\".\n\n.. todo:: Populate when the 'builders' document is split up.\n/sphinx-doc__sphinx/doc/usage/theming.rst:39: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:46: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:57: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:161: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:168: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:176: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:183: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:296: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:117: WARNING: image file not readable: _static/themes/alabaster.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:118: WARNING: image file not readable: _static/themes/classic.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:119: WARNING: image file not readable: _static/themes/sphinxdoc.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:120: WARNING: image file not readable: _static/themes/scrolls.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:121: WARNING: image file not readable: _static/themes/agogo.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:122: WARNING: image file not readable: _static/themes/traditional.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:123: WARNING: image file not readable: _static/themes/nature.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:124: WARNING: image file not readable: _static/themes/haiku.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:125: WARNING: image file not readable: _static/themes/pyramid.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:126: WARNING: image file not readable: _static/themes/bizstyle.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:347: WARNING: image file not readable: _static/themes/sphinx_rtd_theme.png\nWARNING: autodoc: failed to import module 'autodoc_dummy_module'; the following exception was raised:\nNo module named 'autodoc_dummy_module'\nWARNING: autodoc: failed to import module 'autodoc_dummy_foo' from module 'bug2437'; the following exception was raised:\nNo module named 'bug2437'\nWARNING: autodoc: failed to import module 'autodoc_dummy_bar'; the following exception was raised:\nNo module named 'autodoc_dummy_bar'\nWARNING: autodoc: failed to import function 'typehints.incr' from module 'target'; the following exception was raised:\nNo module named 'target'\nWARNING: autodoc: failed to import function 'typehints.tuple_args' from module 'target'; the following exception was raised:\nNo module named 'target'\nWARNING: autodoc: failed to import module 'coverage_ignored'; the following exception was raised:\nNo module named 'coverage_ignored'\nWARNING: autodoc: failed to import module 'coverage_not_ignored'; the following exception was raised:\nNo module named 'coverage_not_ignored'\nWARNING: autodoc: failed to import module 'bar' from module 'dir'; the following exception was raised:\nNo module named 'dir'\nWARNING: autodoc: failed to import module 'foo'; the following exception was raised:\nNo module named 'foo'\nWARNING: autodoc: failed to import function 'func1' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'func2' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'mod1.func1' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'mod2.func2' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'Class1' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'Class2' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'mod1.Class1' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'mod2.Class2' from module 'spam'; the following exception was raised:\nNo module named 'spam'\n/sphinx-doc__sphinx/tests/roots/test-ext-viewcode/index.rst:23: WARNING: Object named 'func1' not found in include file '/sphinx-doc__sphinx/tests/roots/test-ext-viewcode/spam/__init__.py'\nWARNING: autodoc: failed to import class 'mod3.Class3' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import module 'mod3' from module 'spam'; the following exception was raised:\nNo module named 'spam'\n/sphinx-doc__sphinx/tests/roots/test-latex-labels/index.rst:10: WARNING: image file not readable: tests/roots/test-latex-labels/logo.jpg\n/sphinx-doc__sphinx/tests/roots/test-latex-labels/index.rst:14: WARNING: image file not readable: tests/roots/test-latex-labels/logo.jpg\n/sphinx-doc__sphinx/tests/roots/test-latex-title/index.rst:8: WARNING: toctree contains reference to nonexisting document 'tests/roots/test-latex-title/foo'\n/sphinx-doc__sphinx/tests/roots/test-latex-title/index.rst:8: WARNING: toctree contains reference to nonexisting document 'tests/roots/test-latex-title/bar'\n/sphinx-doc__sphinx/tests/roots/test-prolog/index.rst:4: WARNING: toctree contains reference to nonexisting document 'tests/roots/test-prolog/markdown'\n/sphinx-doc__sphinx/tests/roots/test-roles-download/index.rst:6: WARNING: download file not readable: /sphinx-doc__sphinx/tests/roots/test-roles-download/not_found.dat\nWARNING: autodoc: failed to import module 'autodoc_fodder'; the following exception was raised:\nNo module named 'autodoc_fodder'\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:19: WARNING: Encoding 'utf-8-sig' used for reading included file '/sphinx-doc__sphinx/tests/roots/test-warnings/wrongenc.inc' seems to be wrong, try giving an :encoding: option\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:27: WARNING: invalid single index entry ''\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:10: WARNING: image file not readable: tests/roots/test-warnings/foo.png\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:24: WARNING: download file not readable: /sphinx-doc__sphinx/tests/roots/test-warnings/nonexisting.png\n/sphinx-doc__sphinx/tests/roots/test-numbered-circular/sub.rst:1: WARNING: tests/roots/test-numbered-circular/index is already assigned section numbers (nested numbered toctree?)\n/sphinx-doc__sphinx/tests/roots/test-toctree-maxdepth/index.rst:4: WARNING: tests/roots/test-toctree-maxdepth/foo is already assigned section numbers (nested numbered toctree?)\n/sphinx-doc__sphinx/tests/roots/test-toctree-maxdepth/index.rst:4: WARNING: tests/roots/test-toctree-maxdepth/bar is already assigned section numbers (nested numbered toctree?)\n/sphinx-doc__sphinx/CONTRIBUTING.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/README.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/doc/contents.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/sphinx/ext/autosummary/templates/autosummary/base.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/sphinx/ext/autosummary/templates/autosummary/class.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/sphinx/ext/autosummary/templates/autosummary/module.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-add_enumerable_node/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-api-set-translator/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-autosummary/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-autosummary/sphinx.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-basic/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-build-html-translator/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-builder-dirhtml/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-builder-gettext-dont-rebuild-mo/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-changes/contents.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-correct-year/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-default_role/foo.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-default_role/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-directive-code/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-directive-only/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-directives-raw/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-docutilsconf/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-c/anon-dup-decl.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-c/function_param_target.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-c/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-c/namespace.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-c/semicolon.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/anon-dup-decl.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/any-role.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/backslash.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/lookup-key-overload.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/multi-decl-lookup.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/roles.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/roles-targets-ok.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/roles-targets-warn.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/roles2.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/semicolon.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/warn-template-param-qualified-name.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/xref_consistency.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-js/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-py/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-py/module_option.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-double-inheriting-theme/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-epub-anchor-id/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autodoc/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosectionlabel-prefix-document/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosectionlabel/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-filename-map/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-imported_members/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-mock_imports/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-recursive/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-skip-member/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-template/_templates/empty.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-template/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-coverage/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-doctest-with-autodoc/dir/inner.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-doctest-with-autodoc/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-githubpages/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-graphviz/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-ifconfig/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-imgconverter/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-inheritance_diagram/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-intersphinx-cppdomain/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-math-compat/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-math-simple/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-math/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-todo/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-viewcode-find/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-viewcode/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-footnotes/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-gettext-template/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-glossary/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_assets/extra/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_assets/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_assets/static/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_entity/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_scaled_image_link/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_style/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-image-in-parsed-literal/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-image-in-section/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-images/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-images/subdir/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-index_on_title/contents.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-inheritance/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-keep_warnings/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-babel/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-equations/equations.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-figure-in-admonition/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-includegraphics/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-index/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-labels/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-numfig/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-table/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-theme/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-title/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-unicode/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-linkcheck-localserver/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-manpage_url/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-markup-citation/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-markup-rubric/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-maxlistdepth/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-metadata/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-need-escaped/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-nested-enumerated-list/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-nested-tables/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-numfig/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-productionlist/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-prolog/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-pycode-egg/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-reST-code-block/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-refonly_bullet_list/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-roles-download/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-search/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-search/nosearch.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-smartquotes/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-stylesheets/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-templating/_templates/autosummary/class.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-theming/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-tocdepth/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-duplicated/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-empty/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-glob/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-glob/quux.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-maxdepth/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-maxdepth/qux.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree/qux.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree/tocdepth.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-trim_doctest_flags/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/doc/usage/index.rst:5: WARNING: unknown document: /development/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:5: WARNING: unknown document: /usage/restructuredtext/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:5: WARNING: unknown document: /usage/markdown\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:12: WARNING: unknown document: /usage/restructuredtext/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:12: WARNING: unknown document: /development/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:18: WARNING: unknown document: /usage/installation\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:18: WARNING: unknown document: /usage/restructuredtext/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:121: WARNING: unknown document: /usage/restructuredtext/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:140: WARNING: unknown document: /man/sphinx-build\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:223: WARNING: unknown document: /usage/restructuredtext/domains\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:248: WARNING: unknown document: /usage/configuration\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:332: WARNING: unknown document: /usage/extensions/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:334: WARNING: unknown document: /usage/theming\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:335: WARNING: unknown document: /usage/advanced/setuptools\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:343: WARNING: unknown document: /man/sphinx-build\n/sphinx-doc__sphinx/doc/usage/theming.rst:23: WARNING: unknown document: /development/theming\n/sphinx-doc__sphinx/doc/usage/theming.rst:83: WARNING: unknown document: /development/theming\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:41: WARNING: unknown option: &option\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:45: WARNING: citation not found: missing\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:13: WARNING: a suitable image for html builder not found: tests/roots/test-warnings/foo.*\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:33: WARNING: Could not lex literal_block as \"c\". Highlighting skipped.\n",
      "response": "The code has been updated to ensure that the `autodoc_typehints` setting is respected for overloaded callables. Now, let's run Sphinx to generate the documentation again and verify if the changes work as expected.\n\n```\nsphinx-build -b html . _build -q\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "The code has been updated to ensure that the `autodoc_typehints` setting is respected for overloaded callables. Now, let's run Sphinx to generate the documentation again and verify if the changes work as expected.\n\n"
    },
    {
      "action": "open _build/index.html\n",
      "observation": "[File: /sphinx-doc__sphinx/_build/index.html (100 lines total)]\n1:\n2:<!DOCTYPE html>\n3:\n4:<html>\n5:  <head>\n6:    <meta charset=\"utf-8\" />\n7:    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n8:\n9:    <title>Welcome to Example Project\u2019s documentation! &#8212; Example Project  documentation</title>\n10:    <link rel=\"stylesheet\" href=\"_static/pygments.css\" type=\"text/css\" />\n11:    <link rel=\"stylesheet\" href=\"_static/alabaster.css\" type=\"text/css\" />\n12:    <script id=\"documentation_options\" data-url_root=\"./\" src=\"_static/documentation_options.js\"></script>\n13:    <script src=\"_static/jquery.js\"></script>\n14:    <script src=\"_static/underscore.js\"></script>\n15:    <script src=\"_static/doctools.js\"></script>\n16:    <script src=\"_static/language_data.js\"></script>\n17:    <script async=\"async\" src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/latest.js?config=TeX-AMS-MML_HTMLorMML\"></script>\n18:    <link rel=\"index\" title=\"Index\" href=\"genindex.html\" />\n19:    <link rel=\"search\" title=\"Search\" href=\"search.html\" />\n20:   \n21:  <link rel=\"stylesheet\" href=\"_static/custom.css\" type=\"text/css\" />\n22:  \n23:  \n24:  <meta name=\"viewport\" content=\"width=device-width, initial-scale=0.9, maximum-scale=0.9\" />\n25:\n26:  </head><body>\n27:  \n28:\n29:    <div class=\"document\">\n30:      <div class=\"documentwrapper\">\n31:        <div class=\"bodywrapper\">\n32:          \n33:\n34:          <div class=\"body\" role=\"main\">\n35:            \n36:  <section id=\"module-example\">\n37:<span id=\"welcome-to-example-project-s-documentation\"></span><h1>Welcome to Example Project\u2019s documentation!<a class=\"headerlink\" href=\"#module-example\" title=\"Permalink to this headline\">\u00b6</a></h1>\n38:<dl class=\"py function\">\n39:<dt id=\"example.foo\">\n40:<code class=\"sig-prename descclassname\">example.</code><code class=\"sig-name descname\">foo</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#example.foo\" title=\"Permalink to this definition\">\u00b6</a></dt>\n41:<dd></dd></dl>\n42:\n43:</section>\n44:\n45:\n46:          </div>\n47:          \n48:        </div>\n49:      </div>\n50:      <div class=\"sphinxsidebar\" role=\"navigation\" aria-label=\"main navigation\">\n51:        <div class=\"sphinxsidebarwrapper\">\n52:<h1 class=\"logo\"><a href=\"#\">Example Project</a></h1>\n53:\n54:\n55:\n56:\n57:\n58:\n59:\n60:\n61:<h3>Navigation</h3>\n62:\n63:<div class=\"relations\">\n64:<h3>Related Topics</h3>\n65:<ul>\n66:  <li><a href=\"#\">Documentation overview</a><ul>\n67:  </ul></li>\n68:</ul>\n69:</div>\n70:<div id=\"searchbox\" style=\"display: none\" role=\"search\">\n71:  <h3 id=\"searchlabel\">Quick search</h3>\n72:    <div class=\"searchformwrapper\">\n73:    <form class=\"search\" action=\"search.html\" method=\"get\">\n74:      <input type=\"text\" name=\"q\" aria-labelledby=\"searchlabel\" />\n75:      <input type=\"submit\" value=\"Go\" />\n76:    </form>\n77:    </div>\n78:</div>\n79:<script>$('#searchbox').show(0);</script>\n80:        </div>\n81:      </div>\n82:      <div class=\"clearer\"></div>\n83:    </div>\n84:    <div class=\"footer\">\n85:      &copy;2023, Example Author.\n86:      \n87:      |\n88:      Powered by <a href=\"http://sphinx-doc.org/\">Sphinx 3.3.0+/2c2335bbb</a>\n89:      &amp; <a href=\"https://github.com/bitprophet/alabaster\">Alabaster 0.7.11</a>\n90:      \n91:      |\n92:      <a href=\"_sources/index.rst.txt\"\n93:          rel=\"nofollow\">Page source</a>\n94:    </div>\n95:\n96:    \n97:\n98:    \n99:  </body>\n100:</html>\n",
      "response": "The Sphinx build process completed with several warnings, but it did not fail. To verify if the `autodoc_typehints` setting is respected for overloaded callables, we need to check the generated HTML documentation.\n\nLet's open the generated HTML file for the `example` module to see if the type hints are displayed correctly.\n\n```\nopen _build/index.html\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "The Sphinx build process completed with several warnings, but it did not fail. To verify if the `autodoc_typehints` setting is respected for overloaded callables, we need to check the generated HTML documentation.\n\nLet's open the generated HTML file for the `example` module to see if the type hints are displayed correctly.\n\n"
    },
    {
      "action": "search_file \"class FunctionDocumenter\" sphinx/ext/autodoc/__init__.py\n",
      "observation": "Found 1 matches for \"class FunctionDocumenter\" in /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py:\nLine 1196:class FunctionDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type: ignore\nEnd of matches for \"class FunctionDocumenter\" in /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py\n",
      "response": "The generated HTML file does not show the type hints for the overloaded `foo` function, which means the `autodoc_typehints` setting is not being respected for overloaded callables.\n\nLet's investigate further by checking the `FunctionDocumenter` class in the `sphinx/ext/autodoc/__init__.py` file to ensure that the `autodoc_typehints` setting is applied correctly for overloaded callables.\n\n```\nsearch_file \"class FunctionDocumenter\" sphinx/ext/autodoc/__init__.py\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/_build/index.html\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "The generated HTML file does not show the type hints for the overloaded `foo` function, which means the `autodoc_typehints` setting is not being respected for overloaded callables.\n\nLet's investigate further by checking the `FunctionDocumenter` class in the `sphinx/ext/autodoc/__init__.py` file to ensure that the `autodoc_typehints` setting is applied correctly for overloaded callables.\n\n"
    },
    {
      "action": "open sphinx/ext/autodoc/__init__.py 1196\n",
      "observation": "[File: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py (2284 lines total)]\n(1180 more lines above)\n1181:    feature of stripping any function signature from the docstring.\n1182:    \"\"\"\n1183:    def format_signature(self, **kwargs: Any) -> str:\n1184:        if self.args is None and self.env.config.autodoc_docstring_signature:  # type: ignore\n1185:            # only act if a signature is not explicitly given already, and if\n1186:            # the feature is enabled\n1187:            result = self._find_signature()\n1188:            if result is not None:\n1189:                # Discarding _args is a only difference with\n1190:                # DocstringSignatureMixin.format_signature.\n1191:                # Documenter.format_signature use self.args value to format.\n1192:                _args, self.retann = result\n1193:        return super().format_signature(**kwargs)\n1194:\n1195:\n1196:class FunctionDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type: ignore\n1197:    \"\"\"\n1198:    Specialized Documenter subclass for functions.\n1199:    \"\"\"\n1200:    objtype = 'function'\n1201:    member_order = 30\n1202:\n1203:    @classmethod\n1204:    def can_document_member(cls, member: Any, membername: str, isattr: bool, parent: Any\n1205:                            ) -> bool:\n1206:        # supports functions, builtins and bound methods exported at the module level\n1207:        return (inspect.isfunction(member) or inspect.isbuiltin(member) or\n1208:                (inspect.isroutine(member) and isinstance(parent, ModuleDocumenter)))\n1209:\n1210:    def format_args(self, **kwargs: Any) -> str:\n1211:        if self.env.config.autodoc_typehints in ('none', 'description'):\n1212:            kwargs.setdefault('show_annotation', False)\n1213:\n1214:        try:\n1215:            self.env.app.emit('autodoc-before-process-signature', self.object, False)\n1216:            sig = inspect.signature(self.object, follow_wrapped=True,\n1217:                                    type_aliases=self.env.config.autodoc_type_aliases)\n1218:            args = stringify_signature(sig, **kwargs)\n1219:        except TypeError as exc:\n1220:            logger.warning(__(\"Failed to get a function signature for %s: %s\"),\n1221:                           self.fullname, exc)\n1222:            return None\n1223:        except ValueError:\n1224:            args = ''\n1225:\n1226:        if self.env.config.strip_signature_backslash:\n1227:            # escape backslashes for reST\n1228:            args = args.replace('\\\\', '\\\\\\\\')\n1229:        return args\n1230:\n1231:    def document_members(self, all_members: bool = False) -> None:\n1232:        pass\n1233:\n1234:    def add_directive_header(self, sig: str) -> None:\n1235:        sourcename = self.get_sourcename()\n1236:        super().add_directive_header(sig)\n1237:\n1238:        if inspect.iscoroutinefunction(self.object):\n1239:            self.add_line('   :async:', sourcename)\n1240:\n1241:    def format_signature(self, **kwargs: Any) -> str:\n1242:        sigs = []\n1243:        if self.analyzer and '.'.join(self.objpath) in self.analyzer.overloads:\n1244:            # Use signatures for overloaded functions instead of the implementation function.\n1245:            overloaded = True\n1246:        else:\n1247:            overloaded = False\n1248:            sig = super().format_signature(**kwargs)\n1249:            sigs.append(sig)\n1250:\n1251:        if inspect.is_singledispatch_function(self.object):\n1252:            # append signature of singledispatch'ed functions\n1253:            for typ, func in self.object.registry.items():\n1254:                if typ is object:\n1255:                    pass  # default implementation. skipped.\n1256:                else:\n1257:                    self.annotate_to_first_argument(func, typ)\n1258:\n1259:                    documenter = FunctionDocumenter(self.directive, '')\n1260:                    documenter.object = func\n1261:                    documenter.objpath = [None]\n1262:                    sigs.append(documenter.format_signature())\n1263:        if overloaded:\n1264:            __globals__ = safe_getattr(self.object, '__globals__', {})\n1265:            for overload in self.analyzer.overloads.get('.'.join(self.objpath)):\n1266:                overload = evaluate_signature(overload, __globals__,\n1267:                                              self.env.config.autodoc_type_aliases)\n1268:\n1269:                if self.env.config.autodoc_typehints in ('none', 'description'):\n1270:                    kwargs.setdefault('show_annotation', False)\n1271:                sig = stringify_signature(overload, **kwargs)\n1272:                sigs.append(sig)\n1273:        return \"\\n\".join(sigs)\n1274:\n1275:    def annotate_to_first_argument(self, func: Callable, typ: Type) -> None:\n1276:        \"\"\"Annotate type hint to the first argument of function if needed.\"\"\"\n1277:        try:\n1278:            sig = inspect.signature(func, type_aliases=self.env.config.autodoc_type_aliases)\n1279:        except TypeError as exc:\n1280:            logger.warning(__(\"Failed to get a function signature for %s: %s\"),\n(1004 more lines below)\n",
      "response": "We have already examined the `FunctionDocumenter` class and made changes to the `format_signature` method to ensure that the `autodoc_typehints` setting is respected for overloaded callables. However, the changes did not produce the expected results.\n\nLet's review the `format_signature` method again to ensure that the `show_annotation` flag is set correctly when formatting the signatures of overloaded functions.\n\n```\nopen sphinx/ext/autodoc/__init__.py 1196\n```",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/_build/index.html\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "We have already examined the `FunctionDocumenter` class and made changes to the `format_signature` method to ensure that the `autodoc_typehints` setting is respected for overloaded callables. However, the changes did not produce the expected results.\n\nLet's review the `format_signature` method again to ensure that the `show_annotation` flag is set correctly when formatting the signatures of overloaded functions.\n\n"
    },
    {
      "action": "exit_cost",
      "observation": "Exited",
      "response": "Exit due to cost limit",
      "state": "{\"open_file\": \"/sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py\", \"working_dir\": \"/sphinx-doc__sphinx\"}\n",
      "thought": "Exit due to cost limit"
    }
  ],
  "history": [
    {
      "role": "system",
      "content": "SETTING: You are an autonomous programmer, and you're working directly in the command line with a special interface.\n\nThe special interface consists of a file editor that shows you 100 lines of a file at a time.\nIn addition to typical bash commands, you can also use the following commands to help you navigate and edit files.\n\nCOMMANDS:\nopen:\n  docstring: opens the file at the given path in the editor. If line_number is provided, the window will be move to include that line\n  signature: open <path> [<line_number>]\n  arguments:\n    - path (string) [required]: the path to the file to open\n    - line_number (integer) [optional]: the line number to move the window to (if not provided, the window will start at the top of the file)\n\ngoto:\n  docstring: moves the window to show <line_number>\n  signature: goto <line_number>\n  arguments:\n    - line_number (integer) [required]: the line number to move the window to\n\nscroll_down:\n  docstring: moves the window down {WINDOW} lines\n  signature: scroll_down\n\nscroll_up:\n  docstring: moves the window down {WINDOW} lines\n  signature: scroll_up\n\ncreate:\n  docstring: creates and opens a new file with the given name\n  signature: create <filename>\n  arguments:\n    - filename (string) [required]: the name of the file to create\n\nsubmit:\n  docstring: submits your current code and terminates the session\n  signature: submit\n\nsearch_dir:\n  docstring: searches for search_term in all files in dir. If dir is not provided, searches in the current directory\n  signature: search_dir <search_term> [<dir>]\n  arguments:\n    - search_term (string) [required]: the term to search for\n    - dir (string) [optional]: the directory to search in (if not provided, searches in the current directory)\n\nsearch_file:\n  docstring: searches for search_term in file. If file is not provided, searches in the current open file\n  signature: search_file <search_term> [<file>]\n  arguments:\n    - search_term (string) [required]: the term to search for\n    - file (string) [optional]: the file to search in (if not provided, searches in the current open file)\n\nfind_file:\n  docstring: finds all files with the given name in dir. If dir is not provided, searches in the current directory\n  signature: find_file <file_name> [<dir>]\n  arguments:\n    - file_name (string) [required]: the name of the file to search for\n    - dir (string) [optional]: the directory to search in (if not provided, searches in the current directory)\n\nedit:\n  docstring: replaces lines <start_line> through <end_line> (inclusive) with the given text in the open file. The replacement text is terminated by a line with only end_of_edit on it. All of the <replacement text> will be entered, so make sure your indentation is formatted properly. Python files will be checked for syntax errors after the edit. If the system detects a syntax error, the edit will not be executed. Simply try to edit the file again, but make sure to read the error message and modify the edit command you issue accordingly. Issuing the same command a second time will just lead to the same error message again.\n  signature: edit <start_line>:<end_line>\n<replacement_text>\nend_of_edit\n  arguments:\n    - start_line (integer) [required]: the line number to start the edit at\n    - end_line (integer) [required]: the line number to end the edit at (inclusive)\n    - replacement_text (string) [required]: the text to replace the current selection with\n\n\n\nPlease note that THE EDIT COMMAND REQUIRES PROPER INDENTATION. \nIf you'd like to add the line '        print(x)' you must fully write that out, with all those spaces before the code! Indentation is important and code that is not indented correctly will fail and require fixing before it can be run.\n\nRESPONSE FORMAT:\nYour shell prompt is formatted as follows:\n(Open file: <path>) <cwd> $\n\nYou need to format your output using two fields; discussion and command.\nYour output should always include _one_ discussion and _one_ command field EXACTLY as in the following example:\nDISCUSSION\nFirst I'll start by using ls to see what files are in the current directory. Then maybe we can look at some relevant files to see what they look like.\n```\nls -a\n```\n\nYou should only include a *SINGLE* command in the command section and then wait for a response from the shell before continuing with more discussion and commands. Everything you include in the DISCUSSION section will be saved for future reference.\nIf you'd like to issue two commands at once, PLEASE DO NOT DO THAT! Please instead first submit just the first command, and then after receiving a response you'll be able to issue the second command. \nYou're free to use any other bash commands you want (e.g. find, grep, cat, ls, cd) in addition to the special commands listed above.\nHowever, the environment does NOT support interactive session commands (e.g. python, vim), so please do not invoke them.",
      "agent": "primary"
    },
    {
      "agent": "primary",
      "content": "Here is a demonstration of how to correctly accomplish this task.\nIt is included to show you how to correctly use the interface.\nYou do not need to follow exactly what is done in the demonstration.\n--- DEMONSTRATION ---\nWe're currently solving the following issue within our repository. Here's the issue text:\nISSUE:\nTimeDelta serialization precision\nHi there!\n\nI just found quite strange behaviour of `TimeDelta` field serialization\n\n```python3\nfrom marshmallow.fields import TimeDelta\nfrom datetime import timedelta\n\ntd_field = TimeDelta(precision=\"milliseconds\")\n\nobj = dict()\nobj[\"td_field\"] = timedelta(milliseconds=345)\n\nprint(td_field.serialize(\"td_field\", obj))\n```\n\nOutput of this snippet is `344`, but it seems that `345` is correct.\n\nLooks like a rounding issue here: https://github.com/marshmallow-code/marshmallow/blob/dev/src/marshmallow/fields.py#L1474\n\n\nINSTRUCTIONS:\nNow, you're going to solve this issue on your own. Your terminal session has started and you're in the repository's root directory. You can use any bash commands or the special interface to help you. Edit all the files you need to and run any checks or tests that you want. \nRemember, YOU CAN ONLY ENTER ONE COMMAND AT A TIME. You should always wait for feedback after every command. \nWhen you're satisfied with all of the changes you've made, you can submit your changes to the code base by simply running the submit command.\nNote however that you cannot use any interactive session commands (e.g. python, vim) in this environment, but you can write scripts and run them. E.g. you can write a python script and then run it with `python <script_name>.py`.\n\nNOTE ABOUT THE EDIT COMMAND: Indentation really matters! When editing a file, make sure to insert appropriate indentation before each line! \n\nIMPORTANT TIPS:\n1. Always start by trying to replicate the bug that the issues discusses. \n   If the issue includes code for reproducing the bug, we recommend that you re-implement that in your environment, and run it to make sure you can reproduce the bug.\n   Then start trying to fix it.\n   When you think you've fixed the bug, re-run the bug reproduction script to make sure that the bug has indeed been fixed.\n   \n   If the bug reproduction script does not print anything when it succesfully runs, we recommend adding a print(\"Script completed successfully, no errors.\") command at the end of the file,\n   so that you can be sure that the script indeed ran fine all the way through. \n\n2. If you run a command and it doesn't work, try running a different command. A command that did not work once will not work the second time unless you modify it!\n\n3. If you open a file and need to get to an area around a specific line that is not in the first 100 lines, say line 583, don't just use the scroll_down command multiple times. Instead, use the goto 583 command. It's much quicker. \n   \n4. If the bug reproduction script requires inputting/reading a specific file, such as buggy-input.png, and you'd like to understand how to input that file, conduct a search in the existing repo code, to see whether someone else has already done that. Do this by running the command: find_file \"buggy-input.png\" If that doensn't work, use the linux 'find' command. \n\n5. Always make sure to look at the currently open file and the current working directory (which appears right after the currently open file). The currently open file might be in a different directory than the working directory! Note that some commands, such as 'create', open files, so they might change the current  open file.\n\n6. When editing files, it is easy to accidentally specify a wrong line number or to write code with incorrect indentation. Always check the code after you issue an edit to make sure that it reflects what you wanted to accomplish. If it didn't, issue another command to fix it.\n   \n\n(Open file: n/a)\n(Current directory: /marshmallow-code__marshmallow)\nbash-$\nLet's first start by reproducing the results of the issue. The issue includes some example code for reproduction, which we can use. We'll create a new file called `reproduce.py` and paste the example code into it.\n```\ncreate reproduce.py\n```\n[File: /marshmallow-code__marshmallow/reproduce.py (1 lines total)]\n1:\n\n(Open file: /marshmallow-code__marshmallow/reproduce.py)\n(Current directory: /marshmallow-code__marshmallow)\nbash-$\nNow let's paste in the example code from the issue.\n```\nedit 1:1\nfrom marshmallow.fields import TimeDelta\nfrom datetime import timedelta\n\ntd_field = TimeDelta(precision=\"milliseconds\")\n\nobj = dict()\nobj[\"td_field\"] = timedelta(milliseconds=345)\n\nprint(td_field.serialize(\"td_field\", obj))\nend_of_edit\n```\n[File: /marshmallow-code__marshmallow/reproduce.py (9 lines total)]\n1:from marshmallow.fields import TimeDelta\n2:from datetime import timedelta\n3:\n4:td_field = TimeDelta(precision=\"milliseconds\")\n5:\n6:obj = dict()\n7:obj[\"td_field\"] = timedelta(milliseconds=345)\n8:\n9:print(td_field.serialize(\"td_field\", obj))\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.\n\n(Open file: /marshmallow-code__marshmallow/reproduce.py)\n(Current directory: /marshmallow-code__marshmallow)\nbash-$\nNow let's run the code to see if we see the same output as the issue.\n```\npython reproduce.py\n```\n344\n\n(Open file: /marshmallow-code__marshmallow/reproduce.py)\n(Current directory: /marshmallow-code__marshmallow)\nbash-$\nWe are indeed seeing the same output as the issue. The issue suggests that we should look at line 1474 of the `fields.py` file to see if there is a rounding issue. Let's open the `fields.py` file and navigate to line 1474 to see the relevant code. First we should find the `fields.py` file in the repository. It is likely to be in the `src/marshmallow` directory, but we should check to be sure.\n```\nls -F\n```\nAUTHORS.rst\nCHANGELOG.rst\nCODE_OF_CONDUCT.md\nCONTRIBUTING.rst\nLICENSE\nMANIFEST.in\nNOTICE\nREADME.rst\nRELEASING.md\nazure-pipelines.yml\ndocs/\nexamples/\nperformance/\npyproject.toml\nreproduce.py\nsetup.cfg\nsetup.py\nsrc/\ntests/\ntox.ini\n\n(Open file: /marshmallow-code__marshmallow/reproduce.py)\n(Current directory: /marshmallow-code__marshmallow)\nbash-$\nIt looks like the `src` directory is present, which suggests that the `fields.py` file is likely to be in the `src` directory. Let's use find_file to see where it is.\n```\nfind_file \"fields.py\" src\n```\nFound 1 matches for \"fields.py\" in /marshmallow-code__marshmallow/src:\n/marshmallow-code__marshmallow/src/marshmallow/fields.py\n\n(Open file: /marshmallow-code__marshmallow/reproduce.py)\n(Current directory: /marshmallow-code__marshmallow)\nbash-$\nIt looks like the `fields.py` file is present in the `./src/marshmallow/` directory. The issue also points to a specific URL with line number 1474. We should navigate to that line in fields.py to see the relevant code for the `TimeDelta` serialization.\n```\nopen src/marshmallow/fields.py 1474\n```\n[File: /marshmallow-code__marshmallow/src/marshmallow/fields.py (1997 lines total)]\n(1458 more lines above)\n1459:            self.WEEKS,\n1460:        )\n1461:\n1462:        if precision not in units:\n1463:            msg = 'The precision must be {} or \"{}\".'.format(\n1464:                \", \".join([f'\"{each}\"' for each in units[:-1]]), units[-1]\n1465:            )\n1466:            raise ValueError(msg)\n1467:\n1468:        self.precision = precision\n1469:        super().__init__(**kwargs)\n1470:\n1471:    def _serialize(self, value, attr, obj, **kwargs):\n1472:        if value is None:\n1473:            return None\n1474:        base_unit = dt.timedelta(**{self.precision: 1})\n1475:        return int(value.total_seconds() / base_unit.total_seconds())\n1476:\n1477:    def _deserialize(self, value, attr, data, **kwargs):\n1478:        try:\n1479:            value = int(value)\n1480:        except (TypeError, ValueError) as error:\n1481:            raise self.make_error(\"invalid\") from error\n1482:\n1483:        kwargs = {self.precision: value}\n1484:\n1485:        try:\n1486:            return dt.timedelta(**kwargs)\n1487:        except OverflowError as error:\n1488:            raise self.make_error(\"invalid\") from error\n1489:\n1490:\n1491:class Mapping(Field):\n1492:    \"\"\"An abstract class for objects with key-value pairs.\n1493:\n1494:    :param keys: A field class or instance for dict keys.\n1495:    :param values: A field class or instance for dict values.\n1496:    :param kwargs: The same keyword arguments that :class:`Field` receives.\n1497:\n1498:    .. note::\n1499:        When the structure of nested data is not known, you may omit the\n1500:        `keys` and `values` arguments to prevent content validation.\n1501:\n1502:    .. versionadded:: 3.0.0rc4\n1503:    \"\"\"\n1504:\n1505:    mapping_type = dict\n1506:\n1507:    #: Default error messages.\n1508:    default_error_messages = {\"invalid\": \"Not a valid mapping type.\"}\n1509:\n1510:    def __init__(\n1511:        self,\n1512:        keys: typing.Optional[typing.Union[Field, type]] = None,\n1513:        values: typing.Optional[typing.Union[Field, type]] = None,\n1514:        **kwargs,\n1515:    ):\n1516:        super().__init__(**kwargs)\n1517:        if keys is None:\n1518:            self.key_field = None\n1519:        else:\n1520:            try:\n1521:                self.key_field = resolve_field_instance(keys)\n1522:            except FieldInstanceResolutionError as error:\n1523:                raise ValueError(\n1524:                    '\"keys\" must be a subclass or instance of '\n1525:                    \"marshmallow.base.FieldABC.\"\n1526:                ) from error\n1527:\n1528:        if values is None:\n1529:            self.value_field = None\n1530:        else:\n1531:            try:\n1532:                self.value_field = resolve_field_instance(values)\n1533:            except FieldInstanceResolutionError as error:\n1534:                raise ValueError(\n1535:                    '\"values\" must be a subclass or instance of '\n1536:                    \"marshmallow.base.FieldABC.\"\n1537:                ) from error\n1538:            if isinstance(self.value_field, Nested):\n1539:                self.only = self.value_field.only\n1540:                self.exclude = self.value_field.exclude\n1541:\n1542:    def _bind_to_schema(self, field_name, schema):\n1543:        super()._bind_to_schema(field_name, schema)\n1544:        if self.value_field:\n1545:            self.value_field = copy.deepcopy(self.value_field)\n1546:            self.value_field._bind_to_schema(field_name, self)\n1547:        if isinstance(self.value_field, Nested):\n1548:            self.value_field.only = self.only\n1549:            self.value_field.exclude = self.exclude\n1550:        if self.key_field:\n1551:            self.key_field = copy.deepcopy(self.key_field)\n1552:            self.key_field._bind_to_schema(field_name, self)\n1553:\n1554:    def _serialize(self, value, attr, obj, **kwargs):\n1555:        if value is None:\n1556:            return None\n1557:        if not self.value_field and not self.key_field:\n1558:            return self.mapping_type(value)\n(439 more lines below)\n\n(Open file: /marshmallow-code__marshmallow/src/marshmallow/fields.py)\n(Current directory: /marshmallow-code__marshmallow)\nbash-$\nWe are now looking at the relevant section of the `fields.py` file where the `TimeDelta` serialization occurs. The issue suggests that there is a rounding problem near line 1474. The current implementation uses integer division, which truncates the decimal part and can lead to incorrect rounding on line 1475.To fix this issue, we should ensure that the division results in a float, and then round the result to the nearest integer before converting it to an int. This should preserve the milliseconds precision as expected. Let's make the necessary edit to the code.\n```\nedit 1475:1475\nreturn int(round(value.total_seconds() / base_unit.total_seconds()))  # round to nearest int\nend_of_edit\n```\nYour proposed edit has introduced new syntax error(s). Please understand the fixes and retry your edit commmand.\n\nERRORS:\n- E999 IndentationError: unexpected indent\n\nThis is how your edit would have looked if applied\n-------------------------------------------------\n[File: /marshmallow-code__marshmallow/src/marshmallow/fields.py (1997 lines total)]\n(1468 more lines above)\n1469:        super().__init__(**kwargs)\n1470:\n1471:    def _serialize(self, value, attr, obj, **kwargs):\n1472:        if value is None:\n1473:            return None\n1474:        base_unit = dt.timedelta(**{self.precision: 1})\n1475:return int(round(value.total_seconds() / base_unit.total_seconds()))  # round to nearest int\n1476:\n1477:    def _deserialize(self, value, attr, data, **kwargs):\n1478:        try:\n1479:            value = int(value)\n(518 more lines below)\n-------------------------------------------------\n\nThis is the original code before your edit\n-------------------------------------------------\n[File: /marshmallow-code__marshmallow/src/marshmallow/fields.py (1997 lines total)]\n(1469 more lines above)\n1470:\n1471:    def _serialize(self, value, attr, obj, **kwargs):\n1472:        if value is None:\n1473:            return None\n1474:        base_unit = dt.timedelta(**{self.precision: 1})\n1475:        return int(value.total_seconds() / base_unit.total_seconds())\n1476:\n1477:    def _deserialize(self, value, attr, data, **kwargs):\n1478:        try:\n1479:            value = int(value)\n1480:        except (TypeError, ValueError) as error:\n(517 more lines below)\n-------------------------------------------------\nYour changes have NOT been applied. Please fix your edit command and try again.\nYou either need to 1) Specify the correct start/end line arguments or 2) Correct your edit code.\nDO NOT re-run the same failed edit command. Running it again will lead to the same error.\n\n(Open file: /marshmallow-code__marshmallow/src/marshmallow/fields.py)\n(Current directory: /marshmallow-code__marshmallow)\nbash-$\nMy edit command did not use the proper indentation, I will fix my syntax in this follow up edit command.\n```\nedit 1475:1475\n        return int(round(value.total_seconds() / base_unit.total_seconds()))  # round to nearest int\nend_of_edit\n```\n[File: /marshmallow-code__marshmallow/src/marshmallow/fields.py (1997 lines total)]\n(1424 more lines above)\n1425:\n1426:    :param precision: Influences how the integer is interpreted during\n1427:        (de)serialization. Must be 'days', 'seconds', 'microseconds',\n1428:        'milliseconds', 'minutes', 'hours' or 'weeks'.\n1429:    :param kwargs: The same keyword arguments that :class:`Field` receives.\n1430:\n1431:    .. versionchanged:: 2.0.0\n1432:        Always serializes to an integer value to avoid rounding errors.\n1433:        Add `precision` parameter.\n1434:    \"\"\"\n1435:\n1436:    DAYS = \"days\"\n1437:    SECONDS = \"seconds\"\n1438:    MICROSECONDS = \"microseconds\"\n1439:    MILLISECONDS = \"milliseconds\"\n1440:    MINUTES = \"minutes\"\n1441:    HOURS = \"hours\"\n1442:    WEEKS = \"weeks\"\n1443:\n1444:    #: Default error messages.\n1445:    default_error_messages = {\n1446:        \"invalid\": \"Not a valid period of time.\",\n1447:        \"format\": \"{input!r} cannot be formatted as a timedelta.\",\n1448:    }\n1449:\n1450:    def __init__(self, precision: str = SECONDS, **kwargs):\n1451:        precision = precision.lower()\n1452:        units = (\n1453:            self.DAYS,\n1454:            self.SECONDS,\n1455:            self.MICROSECONDS,\n1456:            self.MILLISECONDS,\n1457:            self.MINUTES,\n1458:            self.HOURS,\n1459:            self.WEEKS,\n1460:        )\n1461:\n1462:        if precision not in units:\n1463:            msg = 'The precision must be {} or \"{}\".'.format(\n1464:                \", \".join([f'\"{each}\"' for each in units[:-1]]), units[-1]\n1465:            )\n1466:            raise ValueError(msg)\n1467:\n1468:        self.precision = precision\n1469:        super().__init__(**kwargs)\n1470:\n1471:    def _serialize(self, value, attr, obj, **kwargs):\n1472:        if value is None:\n1473:            return None\n1474:        base_unit = dt.timedelta(**{self.precision: 1})\n1475:        return int(round(value.total_seconds() / base_unit.total_seconds()))  # round to nearest int\n1476:\n1477:    def _deserialize(self, value, attr, data, **kwargs):\n1478:        try:\n1479:            value = int(value)\n1480:        except (TypeError, ValueError) as error:\n1481:            raise self.make_error(\"invalid\") from error\n1482:\n1483:        kwargs = {self.precision: value}\n1484:\n1485:        try:\n1486:            return dt.timedelta(**kwargs)\n1487:        except OverflowError as error:\n1488:            raise self.make_error(\"invalid\") from error\n1489:\n1490:\n1491:class Mapping(Field):\n1492:    \"\"\"An abstract class for objects with key-value pairs.\n1493:\n1494:    :param keys: A field class or instance for dict keys.\n1495:    :param values: A field class or instance for dict values.\n1496:    :param kwargs: The same keyword arguments that :class:`Field` receives.\n1497:\n1498:    .. note::\n1499:        When the structure of nested data is not known, you may omit the\n1500:        `keys` and `values` arguments to prevent content validation.\n1501:\n1502:    .. versionadded:: 3.0.0rc4\n1503:    \"\"\"\n1504:\n1505:    mapping_type = dict\n1506:\n1507:    #: Default error messages.\n1508:    default_error_messages = {\"invalid\": \"Not a valid mapping type.\"}\n1509:\n1510:    def __init__(\n1511:        self,\n1512:        keys: typing.Optional[typing.Union[Field, type]] = None,\n1513:        values: typing.Optional[typing.Union[Field, type]] = None,\n1514:        **kwargs,\n1515:    ):\n1516:        super().__init__(**kwargs)\n1517:        if keys is None:\n1518:            self.key_field = None\n1519:        else:\n1520:            try:\n1521:                self.key_field = resolve_field_instance(keys)\n1522:            except FieldInstanceResolutionError as error:\n1523:                raise ValueError(\n1524:                    '\"keys\" must be a subclass or instance of '\n(473 more lines below)\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.\n\n(Open file: /marshmallow-code__marshmallow/src/marshmallow/fields.py)\n(Current directory: /marshmallow-code__marshmallow)\nbash-$\nThe code has been updated to use the `round` function, which should fix the rounding issue. Before submitting the changes, it would be prudent to run the reproduce.py code again to ensure that this change has the desired effect. I see that \"Current directory\" is still `/marshmallow-code__marshmallow`, so we can just run `reproduce.py` directly.\n```\npython reproduce.py\n```\n345\n\n(Open file: /marshmallow-code__marshmallow/src/marshmallow/fields.py)\n(Current directory: /marshmallow-code__marshmallow)\nbash-$\nThe output has changed from 344 to 345, which suggests that the rounding issue has been fixed. Let's remove the reproduce.py file since it is no longer needed.\n```\nrm reproduce.py\n```\nYour command ran successfully and did not produce any output.\n(Open file: /marshmallow-code__marshmallow/src/marshmallow/fields.py)\n(Current directory: /marshmallow-code__marshmallow)\nbash-$\nrm doesn't have any output when it deletes successfully, so that must have worked. Now that we have fixed the issue, we should submit our changes to the code base. Let's submit the changes using the `submit` command.\n```\nsubmit\n```\n--- END OF DEMONSTRATION ---\n",
      "is_demo": true,
      "role": "user"
    },
    {
      "role": "user",
      "content": "We're currently solving the following issue within our repository. Here's the issue text:\nISSUE:\nautodoc_typehints does not effect to overloaded callables\n**Describe the bug**\r\nautodoc_typehints does not effect to overloaded callables.\r\n\r\n**To Reproduce**\r\n\r\n```\r\n# in conf.py\r\nautodoc_typehints = 'none'\r\n```\r\n```\r\n# in index.rst\r\n.. automodule:: example\r\n   :members:\r\n   :undoc-members:\r\n```\r\n```\r\n# in example.py\r\nfrom typing import overload\r\n\r\n\r\n@overload\r\ndef foo(x: int) -> int:\r\n    ...\r\n\r\n\r\n@overload\r\ndef foo(x: float) -> float:\r\n    ...\r\n\r\n\r\ndef foo(x):\r\n    return x\r\n```\r\n\r\n**Expected behavior**\r\nAll typehints for overloaded callables are obeyed `autodoc_typehints` setting.\r\n\r\n**Your project**\r\nNo\r\n\r\n**Screenshots**\r\nNo\r\n\r\n**Environment info**\r\n- OS: Mac\r\n- Python version: 3.8.2\r\n- Sphinx version: 3.1.0dev\r\n- Sphinx extensions: sphinx.ext.autodoc\r\n- Extra tools: No\r\n\r\n**Additional context**\r\nNo\n\n\nINSTRUCTIONS:\nNow, you're going to solve this issue on your own. Your terminal session has started and you're in the repository's root directory. You can use any bash commands or the special interface to help you. Edit all the files you need to and run any checks or tests that you want. \nRemember, YOU CAN ONLY ENTER ONE COMMAND AT A TIME. You should always wait for feedback after every command. \nWhen you're satisfied with all of the changes you've made, you can submit your changes to the code base by simply running the submit command.\nNote however that you cannot use any interactive session commands (e.g. python, vim) in this environment, but you can write scripts and run them. E.g. you can write a python script and then run it with `python <script_name>.py`.\n\nNOTE ABOUT THE EDIT COMMAND: Indentation really matters! When editing a file, make sure to insert appropriate indentation before each line! \n\nIMPORTANT TIPS:\n1. Always start by trying to replicate the bug that the issues discusses. \n   If the issue includes code for reproducing the bug, we recommend that you re-implement that in your environment, and run it to make sure you can reproduce the bug.\n   Then start trying to fix it.\n   When you think you've fixed the bug, re-run the bug reproduction script to make sure that the bug has indeed been fixed.\n   \n   If the bug reproduction script does not print anything when it successfully runs, we recommend adding a print(\"Script completed successfully, no errors.\") command at the end of the file,\n   so that you can be sure that the script indeed ran fine all the way through. \n\n2. If you run a command and it doesn't work, try running a different command. A command that did not work once will not work the second time unless you modify it!\n\n3. If you open a file and need to get to an area around a specific line that is not in the first 100 lines, say line 583, don't just use the scroll_down command multiple times. Instead, use the goto 583 command. It's much quicker. \n   \n4. If the bug reproduction script requires inputting/reading a specific file, such as buggy-input.png, and you'd like to understand how to input that file, conduct a search in the existing repo code, to see whether someone else has already done that. Do this by running the command: find_file \"buggy-input.png\" If that doesn't work, use the linux 'find' command. \n\n5. Always make sure to look at the currently open file and the current working directory (which appears right after the currently open file). The currently open file might be in a different directory than the working directory! Note that some commands, such as 'create', open files, so they might change the current  open file.\n\n6. When editing files, it is easy to accidentally specify a wrong line number or to write code with incorrect indentation. Always check the code after you issue an edit to make sure that it reflects what you wanted to accomplish. If it didn't, issue another command to fix it.\n   \n\n(Open file: n/a)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "First, let's create a new file called `reproduce.py` to replicate the issue using the provided example code. This will help us understand the problem better.\n\n```\ncreate reproduce.py\n```",
      "thought": "First, let's create a new file called `reproduce.py` to replicate the issue using the provided example code. This will help us understand the problem better.\n\n",
      "action": "create reproduce.py\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "[File: /sphinx-doc__sphinx/reproduce.py (1 lines total)]\n1:\n\n(Open file: /sphinx-doc__sphinx/reproduce.py)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "Now let's paste in the example code from the issue into `reproduce.py`.\n\n```\nedit 1:1\n# in conf.py\nautodoc_typehints = 'none'\n\n# in index.rst\n\"\"\"\n.. automodule:: example\n   :members:\n   :undoc-members:\n\"\"\"\n\n# in example.py\nfrom typing import overload\n\n@overload\ndef foo(x: int) -> int:\n    ...\n\n@overload\ndef foo(x: float) -> float:\n    ...\n\ndef foo(x):\n    return x\n\nprint(\"Script completed successfully, no errors.\")\nend_of_edit\n```",
      "thought": "Now let's paste in the example code from the issue into `reproduce.py`.\n\n",
      "action": "edit 1:1\n# in conf.py\nautodoc_typehints = 'none'\n\n# in index.rst\n\"\"\"\n.. automodule:: example\n   :members:\n   :undoc-members:\n\"\"\"\n\n# in example.py\nfrom typing import overload\n\n@overload\ndef foo(x: int) -> int:\n    ...\n\n@overload\ndef foo(x: float) -> float:\n    ...\n\ndef foo(x):\n    return x\n\nprint(\"Script completed successfully, no errors.\")\nend_of_edit\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "[File: /sphinx-doc__sphinx/reproduce.py (25 lines total)]\n1:# in conf.py\n2:autodoc_typehints = 'none'\n3:\n4:# in index.rst\n5:\"\"\"\n6:.. automodule:: example\n7:   :members:\n8:   :undoc-members:\n9:\"\"\"\n10:\n11:# in example.py\n12:from typing import overload\n13:\n14:@overload\n15:def foo(x: int) -> int:\n16:    ...\n17:\n18:@overload\n19:def foo(x: float) -> float:\n20:    ...\n21:\n22:def foo(x):\n23:    return x\n24:\n25:print(\"Script completed successfully, no errors.\")\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.\n\n(Open file: /sphinx-doc__sphinx/reproduce.py)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "The reproduction script has been created. Now let's run the script to see if it replicates the issue.\n\n```\npython reproduce.py\n```",
      "thought": "The reproduction script has been created. Now let's run the script to see if it replicates the issue.\n\n",
      "action": "python reproduce.py\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "Script completed successfully, no errors.\n\n(Open file: /sphinx-doc__sphinx/reproduce.py)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "The script ran successfully, but it didn't provide any output related to the issue. This is expected since the issue is related to Sphinx documentation generation, not runtime behavior.\n\nNext, we need to investigate how `autodoc_typehints` is handled in the Sphinx codebase. Let's search for `autodoc_typehints` in the repository to find relevant code.\n\n```\nsearch_dir \"autodoc_typehints\"\n```",
      "thought": "The script ran successfully, but it didn't provide any output related to the issue. This is expected since the issue is related to Sphinx documentation generation, not runtime behavior.\n\nNext, we need to investigate how `autodoc_typehints` is handled in the Sphinx codebase. Let's search for `autodoc_typehints` in the repository to find relevant code.\n\n",
      "action": "search_dir \"autodoc_typehints\"\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "Found 22 matches for \"autodoc_typehints\" in /sphinx-doc__sphinx:\n/sphinx-doc__sphinx/CHANGES (7 matches)\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst (1 matches)\n/sphinx-doc__sphinx/reproduce.py (1 matches)\n/sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py (4 matches)\n/sphinx-doc__sphinx/sphinx/ext/autodoc/typehints.py (1 matches)\n/sphinx-doc__sphinx/tests/test_ext_autodoc_configs.py (8 matches)\nEnd of matches for \"autodoc_typehints\" in /sphinx-doc__sphinx\n\n(Open file: /sphinx-doc__sphinx/reproduce.py)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "The `autodoc_typehints` setting is mentioned in several files, but the most relevant ones for our investigation are likely to be in the `sphinx/ext/autodoc` directory. Let's start by examining the `__init__.py` file in that directory.\n\n```\nopen sphinx/ext/autodoc/__init__.py\n```",
      "thought": "The `autodoc_typehints` setting is mentioned in several files, but the most relevant ones for our investigation are likely to be in the `sphinx/ext/autodoc` directory. Let's start by examining the `__init__.py` file in that directory.\n\n",
      "action": "open sphinx/ext/autodoc/__init__.py\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "[File: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py (2283 lines total)]\n1:\"\"\"\n2:    sphinx.ext.autodoc\n3:    ~~~~~~~~~~~~~~~~~~\n4:\n5:    Automatically insert docstrings for functions, classes or whole modules into\n6:    the doctree, thus avoiding duplication between docstrings and documentation\n7:    for those who like elaborate docstrings.\n8:\n9:    :copyright: Copyright 2007-2020 by the Sphinx team, see AUTHORS.\n10:    :license: BSD, see LICENSE for details.\n11:\"\"\"\n12:\n13:import importlib\n14:import re\n15:import warnings\n16:from inspect import Parameter, Signature\n17:from types import ModuleType\n18:from typing import (\n19:    Any, Callable, Dict, Iterator, List, Optional, Sequence, Set, Tuple, Type, TypeVar, Union\n20:)\n21:from typing import get_type_hints\n22:\n23:from docutils.statemachine import StringList\n24:\n25:import sphinx\n26:from sphinx.application import Sphinx\n27:from sphinx.config import Config, ENUM\n28:from sphinx.deprecation import RemovedInSphinx40Warning, RemovedInSphinx50Warning\n29:from sphinx.environment import BuildEnvironment\n30:from sphinx.ext.autodoc.importer import import_object, get_module_members, get_object_members\n31:from sphinx.ext.autodoc.mock import mock\n32:from sphinx.locale import _, __\n33:from sphinx.pycode import ModuleAnalyzer, PycodeError\n34:from sphinx.util import inspect\n35:from sphinx.util import logging\n36:from sphinx.util.docstrings import extract_metadata, prepare_docstring\n37:from sphinx.util.inspect import (\n38:    evaluate_signature, getdoc, object_description, safe_getattr, stringify_signature\n39:)\n40:from sphinx.util.typing import stringify as stringify_typehint\n41:\n42:if False:\n43:    # For type annotation\n44:    from typing import Type  # NOQA # for python3.5.1\n45:    from sphinx.ext.autodoc.directive import DocumenterBridge\n46:\n47:\n48:logger = logging.getLogger(__name__)\n49:\n50:\n51:# This type isn't exposed directly in any modules, but can be found\n52:# here in most Python versions\n53:MethodDescriptorType = type(type.__subclasses__)\n54:\n55:\n56:#: extended signature RE: with explicit module name separated by ::\n57:py_ext_sig_re = re.compile(\n58:    r'''^ ([\\w.]+::)?            # explicit module name\n59:          ([\\w.]+\\.)?            # module and/or class name(s)\n60:          (\\w+)  \\s*             # thing name\n61:          (?: \\((.*)\\)           # optional: arguments\n62:           (?:\\s* -> \\s* (.*))?  #           return annotation\n63:          )? $                   # and nothing more\n64:          ''', re.VERBOSE)\n65:special_member_re = re.compile(r'^__\\S+__$')\n66:\n67:\n68:def identity(x: Any) -> Any:\n69:    return x\n70:\n71:\n72:class _All:\n73:    \"\"\"A special value for :*-members: that matches to any member.\"\"\"\n74:\n75:    def __contains__(self, item: Any) -> bool:\n76:        return True\n77:\n78:\n79:class _Empty:\n80:    \"\"\"A special value for :exclude-members: that never matches to any member.\"\"\"\n81:\n82:    def __contains__(self, item: Any) -> bool:\n83:        return False\n84:\n85:\n86:ALL = _All()\n87:EMPTY = _Empty()\n88:UNINITIALIZED_ATTR = object()\n89:INSTANCEATTR = object()\n90:SLOTSATTR = object()\n91:\n92:\n93:def members_option(arg: Any) -> Union[object, List[str]]:\n94:    \"\"\"Used to convert the :members: option to auto directives.\"\"\"\n95:    if arg is None or arg is True:\n96:        return ALL\n97:    elif arg is False:\n98:        return None\n99:    else:\n100:        return [x.strip() for x in arg.split(',') if x.strip()]\n(2183 more lines below)\n\n(Open file: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "The `__init__.py` file is quite large. To narrow down our search, let's look for the specific occurrences of `autodoc_typehints` within this file. This will help us quickly locate the relevant sections of the code.\n\n```\nsearch_file \"autodoc_typehints\" sphinx/ext/autodoc/__init__.py\n```",
      "thought": "The `__init__.py` file is quite large. To narrow down our search, let's look for the specific occurrences of `autodoc_typehints` within this file. This will help us quickly locate the relevant sections of the code.\n\n",
      "action": "search_file \"autodoc_typehints\" sphinx/ext/autodoc/__init__.py\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "Found 4 matches for \"autodoc_typehints\" in /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py:\nLine 1211:        if self.env.config.autodoc_typehints in ('none', 'description'):\nLine 1453:        if self.env.config.autodoc_typehints in ('none', 'description'):\nLine 1831:        if self.env.config.autodoc_typehints in ('none', 'description'):\nLine 2268:    app.add_config_value('autodoc_typehints', \"signature\", True,\nEnd of matches for \"autodoc_typehints\" in /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py\n\n(Open file: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "The `autodoc_typehints` setting is referenced at lines 1211, 1453, 1831, and 2268. Let's start by examining the first occurrence at line 1211 to understand how it is being used.\n\n```\ngoto 1211\n```",
      "thought": "The `autodoc_typehints` setting is referenced at lines 1211, 1453, 1831, and 2268. Let's start by examining the first occurrence at line 1211 to understand how it is being used.\n\n",
      "action": "goto 1211\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "[File: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py (2283 lines total)]\n(1195 more lines above)\n1196:class FunctionDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type: ignore\n1197:    \"\"\"\n1198:    Specialized Documenter subclass for functions.\n1199:    \"\"\"\n1200:    objtype = 'function'\n1201:    member_order = 30\n1202:\n1203:    @classmethod\n1204:    def can_document_member(cls, member: Any, membername: str, isattr: bool, parent: Any\n1205:                            ) -> bool:\n1206:        # supports functions, builtins and bound methods exported at the module level\n1207:        return (inspect.isfunction(member) or inspect.isbuiltin(member) or\n1208:                (inspect.isroutine(member) and isinstance(parent, ModuleDocumenter)))\n1209:\n1210:    def format_args(self, **kwargs: Any) -> str:\n1211:        if self.env.config.autodoc_typehints in ('none', 'description'):\n1212:            kwargs.setdefault('show_annotation', False)\n1213:\n1214:        try:\n1215:            self.env.app.emit('autodoc-before-process-signature', self.object, False)\n1216:            sig = inspect.signature(self.object, follow_wrapped=True,\n1217:                                    type_aliases=self.env.config.autodoc_type_aliases)\n1218:            args = stringify_signature(sig, **kwargs)\n1219:        except TypeError as exc:\n1220:            logger.warning(__(\"Failed to get a function signature for %s: %s\"),\n1221:                           self.fullname, exc)\n1222:            return None\n1223:        except ValueError:\n1224:            args = ''\n1225:\n1226:        if self.env.config.strip_signature_backslash:\n1227:            # escape backslashes for reST\n1228:            args = args.replace('\\\\', '\\\\\\\\')\n1229:        return args\n1230:\n1231:    def document_members(self, all_members: bool = False) -> None:\n1232:        pass\n1233:\n1234:    def add_directive_header(self, sig: str) -> None:\n1235:        sourcename = self.get_sourcename()\n1236:        super().add_directive_header(sig)\n1237:\n1238:        if inspect.iscoroutinefunction(self.object):\n1239:            self.add_line('   :async:', sourcename)\n1240:\n1241:    def format_signature(self, **kwargs: Any) -> str:\n1242:        sigs = []\n1243:        if self.analyzer and '.'.join(self.objpath) in self.analyzer.overloads:\n1244:            # Use signatures for overloaded functions instead of the implementation function.\n1245:            overloaded = True\n1246:        else:\n1247:            overloaded = False\n1248:            sig = super().format_signature(**kwargs)\n1249:            sigs.append(sig)\n1250:\n1251:        if inspect.is_singledispatch_function(self.object):\n1252:            # append signature of singledispatch'ed functions\n1253:            for typ, func in self.object.registry.items():\n1254:                if typ is object:\n1255:                    pass  # default implementation. skipped.\n1256:                else:\n1257:                    self.annotate_to_first_argument(func, typ)\n1258:\n1259:                    documenter = FunctionDocumenter(self.directive, '')\n1260:                    documenter.object = func\n1261:                    documenter.objpath = [None]\n1262:                    sigs.append(documenter.format_signature())\n1263:        if overloaded:\n1264:            __globals__ = safe_getattr(self.object, '__globals__', {})\n1265:            for overload in self.analyzer.overloads.get('.'.join(self.objpath)):\n1266:                overload = evaluate_signature(overload, __globals__,\n1267:                                              self.env.config.autodoc_type_aliases)\n1268:\n1269:                sig = stringify_signature(overload, **kwargs)\n1270:                sigs.append(sig)\n1271:\n1272:        return \"\\n\".join(sigs)\n1273:\n1274:    def annotate_to_first_argument(self, func: Callable, typ: Type) -> None:\n1275:        \"\"\"Annotate type hint to the first argument of function if needed.\"\"\"\n1276:        try:\n1277:            sig = inspect.signature(func, type_aliases=self.env.config.autodoc_type_aliases)\n1278:        except TypeError as exc:\n1279:            logger.warning(__(\"Failed to get a function signature for %s: %s\"),\n1280:                           self.fullname, exc)\n1281:            return\n1282:        except ValueError:\n1283:            return\n1284:\n1285:        if len(sig.parameters) == 0:\n1286:            return\n1287:\n1288:        params = list(sig.parameters.values())\n1289:        if params[0].annotation is Parameter.empty:\n1290:            params[0] = params[0].replace(annotation=typ)\n1291:            try:\n1292:                func.__signature__ = sig.replace(parameters=params)  # type: ignore\n1293:            except TypeError:\n1294:                # failed to update signature (ex. built-in or extension types)\n1295:                return\n(988 more lines below)\n\n(Open file: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "The `autodoc_typehints` setting is used here to determine whether type hints should be shown in the function signature. Specifically, if `autodoc_typehints` is set to `'none'` or `'description'`, the `show_annotation` flag is set to `False`.\n\nNext, let's examine the second occurrence at line 1453 to see if it provides additional context.\n\n```\ngoto 1453\n```",
      "thought": "The `autodoc_typehints` setting is used here to determine whether type hints should be shown in the function signature. Specifically, if `autodoc_typehints` is set to `'none'` or `'description'`, the `show_annotation` flag is set to `False`.\n\nNext, let's examine the second occurrence at line 1453 to see if it provides additional context.\n\n",
      "action": "goto 1453\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "[File: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py (2283 lines total)]\n(1437 more lines above)\n1438:        # We don't know the exact method that inspect.signature will read\n1439:        # the signature from, so just pass the object itself to our hook.\n1440:        self.env.app.emit('autodoc-before-process-signature', self.object, False)\n1441:        try:\n1442:            sig = inspect.signature(self.object, bound_method=False,\n1443:                                    type_aliases=self.env.config.autodoc_type_aliases)\n1444:            return None, None, sig\n1445:        except ValueError:\n1446:            pass\n1447:\n1448:        # Still no signature: happens e.g. for old-style classes\n1449:        # with __init__ in C and no `__text_signature__`.\n1450:        return None, None, None\n1451:\n1452:    def format_args(self, **kwargs: Any) -> str:\n1453:        if self.env.config.autodoc_typehints in ('none', 'description'):\n1454:            kwargs.setdefault('show_annotation', False)\n1455:\n1456:        try:\n1457:            self._signature_class, self._signature_method_name, sig = self._get_signature()\n1458:        except TypeError as exc:\n1459:            # __signature__ attribute contained junk\n1460:            logger.warning(__(\"Failed to get a constructor signature for %s: %s\"),\n1461:                           self.fullname, exc)\n1462:            return None\n1463:\n1464:        if sig is None:\n1465:            return None\n1466:\n1467:        return stringify_signature(sig, show_return_annotation=False, **kwargs)\n1468:\n1469:    def format_signature(self, **kwargs: Any) -> str:\n1470:        if self.doc_as_attr:\n1471:            return ''\n1472:\n1473:        sig = super().format_signature()\n1474:        sigs = []\n1475:\n1476:        overloads = self.get_overloaded_signatures()\n1477:        if overloads:\n1478:            # Use signatures for overloaded methods instead of the implementation method.\n1479:            method = safe_getattr(self._signature_class, self._signature_method_name, None)\n1480:            __globals__ = safe_getattr(method, '__globals__', {})\n1481:            for overload in overloads:\n1482:                overload = evaluate_signature(overload, __globals__,\n1483:                                              self.env.config.autodoc_type_aliases)\n1484:\n1485:                parameters = list(overload.parameters.values())\n1486:                overload = overload.replace(parameters=parameters[1:],\n1487:                                            return_annotation=Parameter.empty)\n1488:                sig = stringify_signature(overload, **kwargs)\n1489:                sigs.append(sig)\n1490:        else:\n1491:            sigs.append(sig)\n1492:\n1493:        return \"\\n\".join(sigs)\n1494:\n1495:    def get_overloaded_signatures(self) -> List[Signature]:\n1496:        if self._signature_class and self._signature_method_name:\n1497:            for cls in self._signature_class.__mro__:\n1498:                try:\n1499:                    analyzer = ModuleAnalyzer.for_module(cls.__module__)\n1500:                    analyzer.parse()\n1501:                    qualname = '.'.join([cls.__qualname__, self._signature_method_name])\n1502:                    if qualname in analyzer.overloads:\n1503:                        return analyzer.overloads.get(qualname)\n1504:                except PycodeError:\n1505:                    pass\n1506:\n1507:        return []\n1508:\n1509:    def add_directive_header(self, sig: str) -> None:\n1510:        sourcename = self.get_sourcename()\n1511:\n1512:        if self.doc_as_attr:\n1513:            self.directivetype = 'attribute'\n1514:        super().add_directive_header(sig)\n1515:\n1516:        if self.analyzer and '.'.join(self.objpath) in self.analyzer.finals:\n1517:            self.add_line('   :final:', sourcename)\n1518:\n1519:        # add inheritance info, if wanted\n1520:        if not self.doc_as_attr and self.options.show_inheritance:\n1521:            sourcename = self.get_sourcename()\n1522:            self.add_line('', sourcename)\n1523:            if hasattr(self.object, '__bases__') and len(self.object.__bases__):\n1524:                bases = [':class:`%s`' % b.__name__\n1525:                         if b.__module__ in ('__builtin__', 'builtins')\n1526:                         else ':class:`%s.%s`' % (b.__module__, b.__qualname__)\n1527:                         for b in self.object.__bases__]\n1528:                self.add_line('   ' + _('Bases: %s') % ', '.join(bases),\n1529:                              sourcename)\n1530:\n1531:    def get_doc(self, encoding: str = None, ignore: int = None) -> List[List[str]]:\n1532:        if encoding is not None:\n1533:            warnings.warn(\"The 'encoding' argument to autodoc.%s.get_doc() is deprecated.\"\n1534:                          % self.__class__.__name__,\n1535:                          RemovedInSphinx40Warning, stacklevel=2)\n1536:        lines = getattr(self, '_new_docstrings', None)\n1537:        if lines is not None:\n(746 more lines below)\n\n(Open file: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "The second occurrence of `autodoc_typehints` is similar to the first one, where it checks if the setting is `'none'` or `'description'` and sets `show_annotation` to `False`.\n\nNext, let's examine the third occurrence at line 1831 to see if it provides additional context.\n\n```\ngoto 1831\n```",
      "thought": "The second occurrence of `autodoc_typehints` is similar to the first one, where it checks if the setting is `'none'` or `'description'` and sets `show_annotation` to `False`.\n\nNext, let's examine the third occurrence at line 1831 to see if it provides additional context.\n\n",
      "action": "goto 1831\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "[File: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py (2283 lines total)]\n(1815 more lines above)\n1816:            return ret\n1817:\n1818:        # to distinguish classmethod/staticmethod\n1819:        obj = self.parent.__dict__.get(self.object_name)\n1820:        if obj is None:\n1821:            obj = self.object\n1822:\n1823:        if (inspect.isclassmethod(obj) or\n1824:                inspect.isstaticmethod(obj, cls=self.parent, name=self.object_name)):\n1825:            # document class and static members before ordinary ones\n1826:            self.member_order = self.member_order - 1\n1827:\n1828:        return ret\n1829:\n1830:    def format_args(self, **kwargs: Any) -> str:\n1831:        if self.env.config.autodoc_typehints in ('none', 'description'):\n1832:            kwargs.setdefault('show_annotation', False)\n1833:\n1834:        try:\n1835:            if self.object == object.__init__ and self.parent != object:\n1836:                # Classes not having own __init__() method are shown as no arguments.\n1837:                #\n1838:                # Note: The signature of object.__init__() is (self, /, *args, **kwargs).\n1839:                #       But it makes users confused.\n1840:                args = '()'\n1841:            else:\n1842:                if inspect.isstaticmethod(self.object, cls=self.parent, name=self.object_name):\n1843:                    self.env.app.emit('autodoc-before-process-signature', self.object, False)\n1844:                    sig = inspect.signature(self.object, bound_method=False,\n1845:                                            type_aliases=self.env.config.autodoc_type_aliases)\n1846:                else:\n1847:                    self.env.app.emit('autodoc-before-process-signature', self.object, True)\n1848:                    sig = inspect.signature(self.object, bound_method=True,\n1849:                                            follow_wrapped=True,\n1850:                                            type_aliases=self.env.config.autodoc_type_aliases)\n1851:                args = stringify_signature(sig, **kwargs)\n1852:        except TypeError as exc:\n1853:            logger.warning(__(\"Failed to get a method signature for %s: %s\"),\n1854:                           self.fullname, exc)\n1855:            return None\n1856:        except ValueError:\n1857:            args = ''\n1858:\n1859:        if self.env.config.strip_signature_backslash:\n1860:            # escape backslashes for reST\n1861:            args = args.replace('\\\\', '\\\\\\\\')\n1862:        return args\n1863:\n1864:    def add_directive_header(self, sig: str) -> None:\n1865:        super().add_directive_header(sig)\n1866:\n1867:        sourcename = self.get_sourcename()\n1868:        obj = self.parent.__dict__.get(self.object_name, self.object)\n1869:        if inspect.isabstractmethod(obj):\n1870:            self.add_line('   :abstractmethod:', sourcename)\n1871:        if inspect.iscoroutinefunction(obj):\n1872:            self.add_line('   :async:', sourcename)\n1873:        if inspect.isclassmethod(obj):\n1874:            self.add_line('   :classmethod:', sourcename)\n1875:        if inspect.isstaticmethod(obj, cls=self.parent, name=self.object_name):\n1876:            self.add_line('   :staticmethod:', sourcename)\n1877:        if self.analyzer and '.'.join(self.objpath) in self.analyzer.finals:\n1878:            self.add_line('   :final:', sourcename)\n1879:\n1880:    def document_members(self, all_members: bool = False) -> None:\n1881:        pass\n1882:\n1883:    def format_signature(self, **kwargs: Any) -> str:\n1884:        sigs = []\n1885:        if self.analyzer and '.'.join(self.objpath) in self.analyzer.overloads:\n1886:            # Use signatures for overloaded methods instead of the implementation method.\n1887:            overloaded = True\n1888:        else:\n1889:            overloaded = False\n1890:            sig = super().format_signature(**kwargs)\n1891:            sigs.append(sig)\n1892:\n1893:        meth = self.parent.__dict__.get(self.objpath[-1])\n1894:        if inspect.is_singledispatch_method(meth):\n1895:            # append signature of singledispatch'ed functions\n1896:            for typ, func in meth.dispatcher.registry.items():\n1897:                if typ is object:\n1898:                    pass  # default implementation. skipped.\n1899:                else:\n1900:                    self.annotate_to_first_argument(func, typ)\n1901:\n1902:                    documenter = MethodDocumenter(self.directive, '')\n1903:                    documenter.parent = self.parent\n1904:                    documenter.object = func\n1905:                    documenter.objpath = [None]\n1906:                    sigs.append(documenter.format_signature())\n1907:        if overloaded:\n1908:            __globals__ = safe_getattr(self.object, '__globals__', {})\n1909:            for overload in self.analyzer.overloads.get('.'.join(self.objpath)):\n1910:                overload = evaluate_signature(overload, __globals__,\n1911:                                              self.env.config.autodoc_type_aliases)\n1912:\n1913:                if not inspect.isstaticmethod(self.object, cls=self.parent,\n1914:                                              name=self.object_name):\n1915:                    parameters = list(overload.parameters.values())\n(368 more lines below)\n\n(Open file: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "The third occurrence of `autodoc_typehints` is again similar to the previous ones, where it checks if the setting is `'none'` or `'description'` and sets `show_annotation` to `False`.\n\nFinally, let's examine the fourth occurrence at line 2268 to see if it provides additional context.\n\n```\ngoto 2268\n```",
      "thought": "The third occurrence of `autodoc_typehints` is again similar to the previous ones, where it checks if the setting is `'none'` or `'description'` and sets `show_annotation` to `False`.\n\nFinally, let's examine the fourth occurrence at line 2268 to see if it provides additional context.\n\n",
      "action": "goto 2268\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "[File: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py (2283 lines total)]\n(2183 more lines above)\n2184:        \"\"\"This documents only SLOTSATTR members.\"\"\"\n2185:        return member is SLOTSATTR\n2186:\n2187:    def import_object(self, raiseerror: bool = False) -> bool:\n2188:        \"\"\"Never import anything.\"\"\"\n2189:        # disguise as an attribute\n2190:        self.objtype = 'attribute'\n2191:        self._datadescriptor = True\n2192:\n2193:        with mock(self.env.config.autodoc_mock_imports):\n2194:            try:\n2195:                ret = import_object(self.modname, self.objpath[:-1], 'class',\n2196:                                    attrgetter=self.get_attr,\n2197:                                    warningiserror=self.env.config.autodoc_warningiserror)\n2198:                self.module, _, _, self.parent = ret\n2199:                return True\n2200:            except ImportError as exc:\n2201:                if raiseerror:\n2202:                    raise\n2203:                else:\n2204:                    logger.warning(exc.args[0], type='autodoc', subtype='import_object')\n2205:                    self.env.note_reread()\n2206:                    return False\n2207:\n2208:    def get_doc(self, encoding: str = None, ignore: int = None) -> List[List[str]]:\n2209:        \"\"\"Decode and return lines of the docstring(s) for the object.\"\"\"\n2210:        if ignore is not None:\n2211:            warnings.warn(\"The 'ignore' argument to autodoc.%s.get_doc() is deprecated.\"\n2212:                          % self.__class__.__name__,\n2213:                          RemovedInSphinx50Warning, stacklevel=2)\n2214:        name = self.objpath[-1]\n2215:        __slots__ = safe_getattr(self.parent, '__slots__', [])\n2216:        if isinstance(__slots__, dict) and isinstance(__slots__.get(name), str):\n2217:            docstring = prepare_docstring(__slots__[name])\n2218:            return [docstring]\n2219:        else:\n2220:            return []\n2221:\n2222:\n2223:def get_documenters(app: Sphinx) -> Dict[str, \"Type[Documenter]\"]:\n2224:    \"\"\"Returns registered Documenter classes\"\"\"\n2225:    warnings.warn(\"get_documenters() is deprecated.\", RemovedInSphinx50Warning, stacklevel=2)\n2226:    return app.registry.documenters\n2227:\n2228:\n2229:def autodoc_attrgetter(app: Sphinx, obj: Any, name: str, *defargs: Any) -> Any:\n2230:    \"\"\"Alternative getattr() for types\"\"\"\n2231:    for typ, func in app.registry.autodoc_attrgettrs.items():\n2232:        if isinstance(obj, typ):\n2233:            return func(obj, name, *defargs)\n2234:\n2235:    return safe_getattr(obj, name, *defargs)\n2236:\n2237:\n2238:def migrate_autodoc_member_order(app: Sphinx, config: Config) -> None:\n2239:    if config.autodoc_member_order == 'alphabetic':\n2240:        # RemovedInSphinx50Warning\n2241:        logger.warning(__('autodoc_member_order now accepts \"alphabetical\" '\n2242:                          'instead of \"alphabetic\". Please update your setting.'))\n2243:        config.autodoc_member_order = 'alphabetical'  # type: ignore\n2244:\n2245:\n2246:def setup(app: Sphinx) -> Dict[str, Any]:\n2247:    app.add_autodocumenter(ModuleDocumenter)\n2248:    app.add_autodocumenter(ClassDocumenter)\n2249:    app.add_autodocumenter(ExceptionDocumenter)\n2250:    app.add_autodocumenter(DataDocumenter)\n2251:    app.add_autodocumenter(DataDeclarationDocumenter)\n2252:    app.add_autodocumenter(GenericAliasDocumenter)\n2253:    app.add_autodocumenter(TypeVarDocumenter)\n2254:    app.add_autodocumenter(FunctionDocumenter)\n2255:    app.add_autodocumenter(DecoratorDocumenter)\n2256:    app.add_autodocumenter(MethodDocumenter)\n2257:    app.add_autodocumenter(AttributeDocumenter)\n2258:    app.add_autodocumenter(PropertyDocumenter)\n2259:    app.add_autodocumenter(InstanceAttributeDocumenter)\n2260:    app.add_autodocumenter(SlotsAttributeDocumenter)\n2261:\n2262:    app.add_config_value('autoclass_content', 'class', True, ENUM('both', 'class', 'init'))\n2263:    app.add_config_value('autodoc_member_order', 'alphabetical', True,\n2264:                         ENUM('alphabetic', 'alphabetical', 'bysource', 'groupwise'))\n2265:    app.add_config_value('autodoc_default_options', {}, True)\n2266:    app.add_config_value('autodoc_docstring_signature', True, True)\n2267:    app.add_config_value('autodoc_mock_imports', [], True)\n2268:    app.add_config_value('autodoc_typehints', \"signature\", True,\n2269:                         ENUM(\"signature\", \"description\", \"none\"))\n2270:    app.add_config_value('autodoc_type_aliases', {}, True)\n2271:    app.add_config_value('autodoc_warningiserror', True, True)\n2272:    app.add_config_value('autodoc_inherit_docstrings', True, True)\n2273:    app.add_event('autodoc-before-process-signature')\n2274:    app.add_event('autodoc-process-docstring')\n2275:    app.add_event('autodoc-process-signature')\n2276:    app.add_event('autodoc-skip-member')\n2277:\n2278:    app.connect('config-inited', migrate_autodoc_member_order, priority=800)\n2279:\n2280:    app.setup_extension('sphinx.ext.autodoc.type_comment')\n2281:    app.setup_extension('sphinx.ext.autodoc.typehints')\n2282:\n2283:    return {'version': sphinx.__display_version__, 'parallel_read_safe': True}\n\n(Open file: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "The fourth occurrence of `autodoc_typehints` is where the configuration value is added to the Sphinx application. This confirms that `autodoc_typehints` can be set to `\"signature\"`, `\"description\"`, or `\"none\"`.\n\nTo address the issue, we need to ensure that the `autodoc_typehints` setting is respected for overloaded callables. The relevant code for handling overloaded signatures is in the `format_signature` method of the `FunctionDocumenter` class.\n\nLet's edit the `format_signature` method to ensure that the `autodoc_typehints` setting is applied correctly for overloaded callables.\n\n```\nedit 1269:1270\n                if self.env.config.autodoc_typehints in ('none', 'description'):\n                    kwargs.setdefault('show_annotation', False)\n                sig = stringify_signature(overload, **kwargs)\nend_of_edit\n```",
      "thought": "The fourth occurrence of `autodoc_typehints` is where the configuration value is added to the Sphinx application. This confirms that `autodoc_typehints` can be set to `\"signature\"`, `\"description\"`, or `\"none\"`.\n\nTo address the issue, we need to ensure that the `autodoc_typehints` setting is respected for overloaded callables. The relevant code for handling overloaded signatures is in the `format_signature` method of the `FunctionDocumenter` class.\n\nLet's edit the `format_signature` method to ensure that the `autodoc_typehints` setting is applied correctly for overloaded callables.\n\n",
      "action": "edit 1269:1270\n                if self.env.config.autodoc_typehints in ('none', 'description'):\n                    kwargs.setdefault('show_annotation', False)\n                sig = stringify_signature(overload, **kwargs)\nend_of_edit\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "[File: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py (2284 lines total)]\n(1218 more lines above)\n1219:        except TypeError as exc:\n1220:            logger.warning(__(\"Failed to get a function signature for %s: %s\"),\n1221:                           self.fullname, exc)\n1222:            return None\n1223:        except ValueError:\n1224:            args = ''\n1225:\n1226:        if self.env.config.strip_signature_backslash:\n1227:            # escape backslashes for reST\n1228:            args = args.replace('\\\\', '\\\\\\\\')\n1229:        return args\n1230:\n1231:    def document_members(self, all_members: bool = False) -> None:\n1232:        pass\n1233:\n1234:    def add_directive_header(self, sig: str) -> None:\n1235:        sourcename = self.get_sourcename()\n1236:        super().add_directive_header(sig)\n1237:\n1238:        if inspect.iscoroutinefunction(self.object):\n1239:            self.add_line('   :async:', sourcename)\n1240:\n1241:    def format_signature(self, **kwargs: Any) -> str:\n1242:        sigs = []\n1243:        if self.analyzer and '.'.join(self.objpath) in self.analyzer.overloads:\n1244:            # Use signatures for overloaded functions instead of the implementation function.\n1245:            overloaded = True\n1246:        else:\n1247:            overloaded = False\n1248:            sig = super().format_signature(**kwargs)\n1249:            sigs.append(sig)\n1250:\n1251:        if inspect.is_singledispatch_function(self.object):\n1252:            # append signature of singledispatch'ed functions\n1253:            for typ, func in self.object.registry.items():\n1254:                if typ is object:\n1255:                    pass  # default implementation. skipped.\n1256:                else:\n1257:                    self.annotate_to_first_argument(func, typ)\n1258:\n1259:                    documenter = FunctionDocumenter(self.directive, '')\n1260:                    documenter.object = func\n1261:                    documenter.objpath = [None]\n1262:                    sigs.append(documenter.format_signature())\n1263:        if overloaded:\n1264:            __globals__ = safe_getattr(self.object, '__globals__', {})\n1265:            for overload in self.analyzer.overloads.get('.'.join(self.objpath)):\n1266:                overload = evaluate_signature(overload, __globals__,\n1267:                                              self.env.config.autodoc_type_aliases)\n1268:\n1269:                if self.env.config.autodoc_typehints in ('none', 'description'):\n1270:                    kwargs.setdefault('show_annotation', False)\n1271:                sig = stringify_signature(overload, **kwargs)\n1272:\n1273:        return \"\\n\".join(sigs)\n1274:\n1275:    def annotate_to_first_argument(self, func: Callable, typ: Type) -> None:\n1276:        \"\"\"Annotate type hint to the first argument of function if needed.\"\"\"\n1277:        try:\n1278:            sig = inspect.signature(func, type_aliases=self.env.config.autodoc_type_aliases)\n1279:        except TypeError as exc:\n1280:            logger.warning(__(\"Failed to get a function signature for %s: %s\"),\n1281:                           self.fullname, exc)\n1282:            return\n1283:        except ValueError:\n1284:            return\n1285:\n1286:        if len(sig.parameters) == 0:\n1287:            return\n1288:\n1289:        params = list(sig.parameters.values())\n1290:        if params[0].annotation is Parameter.empty:\n1291:            params[0] = params[0].replace(annotation=typ)\n1292:            try:\n1293:                func.__signature__ = sig.replace(parameters=params)  # type: ignore\n1294:            except TypeError:\n1295:                # failed to update signature (ex. built-in or extension types)\n1296:                return\n1297:\n1298:\n1299:class SingledispatchFunctionDocumenter(FunctionDocumenter):\n1300:    \"\"\"\n1301:    Used to be a specialized Documenter subclass for singledispatch'ed functions.\n1302:\n1303:    Retained for backwards compatibility, now does the same as the FunctionDocumenter\n1304:    \"\"\"\n1305:\n1306:    def __init__(self, *args: Any, **kwargs: Any) -> None:\n1307:        warnings.warn(\"%s is deprecated.\" % self.__class__.__name__,\n1308:                      RemovedInSphinx50Warning, stacklevel=2)\n1309:        super().__init__(*args, **kwargs)\n1310:\n1311:\n1312:class DecoratorDocumenter(FunctionDocumenter):\n1313:    \"\"\"\n1314:    Specialized Documenter subclass for decorator functions.\n1315:    \"\"\"\n1316:    objtype = 'decorator'\n1317:\n1318:    # must be lower than FunctionDocumenter\n(966 more lines below)\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.\n\n(Open file: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "The code has been updated to ensure that the `autodoc_typehints` setting is respected for overloaded callables. Now, let's create a new Sphinx project to test if the changes work as expected. We'll create a `conf.py` and `index.rst` file as described in the issue, and then run Sphinx to generate the documentation.\n\nFirst, let's create the `conf.py` file.\n\n```\ncreate conf.py\n```",
      "thought": "The code has been updated to ensure that the `autodoc_typehints` setting is respected for overloaded callables. Now, let's create a new Sphinx project to test if the changes work as expected. We'll create a `conf.py` and `index.rst` file as described in the issue, and then run Sphinx to generate the documentation.\n\nFirst, let's create the `conf.py` file.\n\n",
      "action": "create conf.py\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "[File: /sphinx-doc__sphinx/conf.py (1 lines total)]\n1:\n\n(Open file: /sphinx-doc__sphinx/conf.py)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "Now let's add the configuration settings to `conf.py`.\n\n```\nedit 1:1\n# Configuration file for the Sphinx documentation builder.\n\n# -- Project information -----------------------------------------------------\n\nproject = 'Example Project'\ncopyright = '2023, Example Author'\nauthor = 'Example Author'\n\n# -- General configuration ---------------------------------------------------\n\nextensions = ['sphinx.ext.autodoc']\n\n# The master toctree document.\nmaster_doc = 'index'\n\n# -- Options for autodoc -----------------------------------------------------\n\nautodoc_typehints = 'none'\nend_of_edit\n```",
      "thought": "Now let's add the configuration settings to `conf.py`.\n\n",
      "action": "edit 1:1\n# Configuration file for the Sphinx documentation builder.\n\n# -- Project information -----------------------------------------------------\n\nproject = 'Example Project'\ncopyright = '2023, Example Author'\nauthor = 'Example Author'\n\n# -- General configuration ---------------------------------------------------\n\nextensions = ['sphinx.ext.autodoc']\n\n# The master toctree document.\nmaster_doc = 'index'\n\n# -- Options for autodoc -----------------------------------------------------\n\nautodoc_typehints = 'none'\nend_of_edit\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "[File: /sphinx-doc__sphinx/conf.py (18 lines total)]\n1:# Configuration file for the Sphinx documentation builder.\n2:\n3:# -- Project information -----------------------------------------------------\n4:\n5:project = 'Example Project'\n6:copyright = '2023, Example Author'\n7:author = 'Example Author'\n8:\n9:# -- General configuration ---------------------------------------------------\n10:\n11:extensions = ['sphinx.ext.autodoc']\n12:\n13:# The master toctree document.\n14:master_doc = 'index'\n15:\n16:# -- Options for autodoc -----------------------------------------------------\n17:\n18:autodoc_typehints = 'none'\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.\n\n(Open file: /sphinx-doc__sphinx/conf.py)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "The `conf.py` file has been created. Now let's create the `index.rst` file to include the `example` module.\n\n```\ncreate index.rst\n```",
      "thought": "The `conf.py` file has been created. Now let's create the `index.rst` file to include the `example` module.\n\n",
      "action": "create index.rst\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "[File: /sphinx-doc__sphinx/index.rst (1 lines total)]\n1:\n\n(Open file: /sphinx-doc__sphinx/index.rst)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "Now let's add the content to `index.rst` to include the `example` module.\n\n```\nedit 1:1\n.. Example Project documentation master file, created by\n   sphinx-quickstart on Thu Oct  7 13:00:00 2023.\n   You can adapt this file completely to your liking, but it should at least\n   contain the root `toctree` directive.\n\nWelcome to Example Project's documentation!\n============================================\n\n.. automodule:: example\n   :members:\n   :undoc-members:\nend_of_edit\n```",
      "thought": "Now let's add the content to `index.rst` to include the `example` module.\n\n",
      "action": "edit 1:1\n.. Example Project documentation master file, created by\n   sphinx-quickstart on Thu Oct  7 13:00:00 2023.\n   You can adapt this file completely to your liking, but it should at least\n   contain the root `toctree` directive.\n\nWelcome to Example Project's documentation!\n============================================\n\n.. automodule:: example\n   :members:\n   :undoc-members:\nend_of_edit\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "[File: /sphinx-doc__sphinx/index.rst (11 lines total)]\n1:.. Example Project documentation master file, created by\n2:   sphinx-quickstart on Thu Oct  7 13:00:00 2023.\n3:   You can adapt this file completely to your liking, but it should at least\n4:   contain the root `toctree` directive.\n5:\n6:Welcome to Example Project's documentation!\n7:============================================\n8:\n9:.. automodule:: example\n10:   :members:\n11:   :undoc-members:\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.\n\n(Open file: /sphinx-doc__sphinx/index.rst)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "The `index.rst` file has been created. Now let's create the `example.py` file with the overloaded `foo` function as described in the issue.\n\n```\ncreate example.py\n```",
      "thought": "The `index.rst` file has been created. Now let's create the `example.py` file with the overloaded `foo` function as described in the issue.\n\n",
      "action": "create example.py\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "[File: /sphinx-doc__sphinx/example.py (1 lines total)]\n1:\n\n(Open file: /sphinx-doc__sphinx/example.py)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "Now let's add the overloaded `foo` function to `example.py`.\n\n```\nedit 1:1\nfrom typing import overload\n\n@overload\ndef foo(x: int) -> int:\n    ...\n\n@overload\ndef foo(x: float) -> float:\n    ...\n\ndef foo(x):\n    return x\nend_of_edit\n```",
      "thought": "Now let's add the overloaded `foo` function to `example.py`.\n\n",
      "action": "edit 1:1\nfrom typing import overload\n\n@overload\ndef foo(x: int) -> int:\n    ...\n\n@overload\ndef foo(x: float) -> float:\n    ...\n\ndef foo(x):\n    return x\nend_of_edit\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "[File: /sphinx-doc__sphinx/example.py (12 lines total)]\n1:from typing import overload\n2:\n3:@overload\n4:def foo(x: int) -> int:\n5:    ...\n6:\n7:@overload\n8:def foo(x: float) -> float:\n9:    ...\n10:\n11:def foo(x):\n12:    return x\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.\n\n(Open file: /sphinx-doc__sphinx/example.py)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "The `example.py` file has been created. Now let's run Sphinx to generate the documentation and see if the `autodoc_typehints` setting is respected for the overloaded `foo` function.\n\n```\nsphinx-build -b html . _build\n```",
      "thought": "The `example.py` file has been created. Now let's run Sphinx to generate the documentation and see if the `autodoc_typehints` setting is respected for the overloaded `foo` function.\n\n",
      "action": "sphinx-build -b html . _build\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "\nEXECUTION TIMED OUT\n(Open file: /sphinx-doc__sphinx/example.py)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "It seems the `sphinx-build` command took too long to execute. Let's try running it again, but this time we'll limit the output to see if it helps.\n\n```\nsphinx-build -b html . _build -q\n```",
      "thought": "It seems the `sphinx-build` command took too long to execute. Let's try running it again, but this time we'll limit the output to see if it helps.\n\n",
      "action": "sphinx-build -b html . _build -q\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "WARNING: while setting up extension sphinx.addnodes: node class 'meta' is already registered, its visitors will be overridden\nWARNING: autodoc: failed to import method 'websupport.WebSupport.build' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.WebSupport.get_document' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.WebSupport.get_data' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.WebSupport.add_comment' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.WebSupport.process_vote' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.WebSupport.get_search_results' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.init_indexing' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.finish_indexing' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.feed' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.add_document' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.query' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.handle_query' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.extract_context' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.pre_build' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.add_node' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.post_build' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.add_comment' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.delete_comment' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.get_data' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.process_vote' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.update_username' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.accept_comment' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\n/sphinx-doc__sphinx/doc/usage/configuration.rst:64: WARNING: Unknown directive type \"confval\".\n\n.. confval:: project\n\n   The documented project's name.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:68: WARNING: Unknown directive type \"confval\".\n\n.. confval:: author\n\n   The author name(s) of the document.  The default value is ``'unknown'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:72: WARNING: Unknown directive type \"confval\".\n\n.. confval:: copyright\n\n   A copyright statement in the style ``'2008, Author Name'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:76: WARNING: Unknown directive type \"confval\".\n\n.. confval:: version\n\n   The major project version, used as the replacement for ``|version|``.  For\n   example, for the Python documentation, this may be something like ``2.6``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:81: WARNING: Unknown directive type \"confval\".\n\n.. confval:: release\n\n   The full project version, used as the replacement for ``|release|`` and\n   e.g. in the HTML templates.  For example, for the Python documentation, this\n   may be something like ``2.6.0rc1``.\n\n   If you don't need the separation provided between :confval:`version` and\n   :confval:`release`, just set them both to the same value.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:94: WARNING: Unknown directive type \"confval\".\n\n.. confval:: extensions\n\n   A list of strings that are module names of :doc:`extensions\n   <extensions/index>`. These can be extensions coming with Sphinx (named\n   ``sphinx.ext.*``) or custom ones.\n\n   Note that you can extend :data:`sys.path` within the conf file if your\n   extensions live in another directory -- but make sure you use absolute paths.\n   If your extension path is relative to the :term:`configuration directory`,\n   use :func:`os.path.abspath` like so::\n\n      import sys, os\n\n      sys.path.append(os.path.abspath('sphinxext'))\n\n      extensions = ['extname']\n\n   That way, you can load an extension called ``extname`` from the subdirectory\n   ``sphinxext``.\n\n   The configuration file itself can be an extension; for that, you only need\n   to provide a :func:`setup` function in it.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:117: WARNING: Unknown directive type \"confval\".\n\n.. confval:: source_suffix\n\n   The file extensions of source files.  Sphinx considers the files with this\n   suffix as sources.  The value can be a dictionary mapping file extensions\n   to file types.  For example::\n\n      source_suffix = {\n          '.rst': 'restructuredtext',\n          '.txt': 'restructuredtext',\n          '.md': 'markdown',\n      }\n\n   By default, Sphinx only supports ``'restructuredtext'`` file type.  You can\n   add a new file type using source parser extensions.  Please read a document\n   of the extension to know which file type the extension supports.\n\n   The value may also be a list of file extensions: then Sphinx will consider\n   that they all map to the ``'restructuredtext'`` file type.\n\n   Default is ``{'.rst': 'restructuredtext'}``.\n\n   .. note:: file extensions have to start with a dot (e.g. ``.rst``).\n\n   .. versionchanged:: 1.3\n      Can now be a list of extensions.\n\n   .. versionchanged:: 1.8\n      Support file type mapping\n/sphinx-doc__sphinx/doc/usage/configuration.rst:146: WARNING: Unknown directive type \"confval\".\n\n.. confval:: source_encoding\n\n   The encoding of all reST source files.  The recommended encoding, and the\n   default value, is ``'utf-8-sig'``.\n\n   .. versionadded:: 0.5\n      Previously, Sphinx accepted only UTF-8 encoded sources.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:154: WARNING: Unknown directive type \"confval\".\n\n.. confval:: source_parsers\n\n   If given, a dictionary of parser classes for different source suffices.  The\n   keys are the suffix, the values can be either a class or a string giving a\n   fully-qualified name of a parser class.  The parser class can be either\n   ``docutils.parsers.Parser`` or :class:`sphinx.parsers.Parser`.  Files with a\n   suffix that is not in the dictionary will be parsed with the default\n   reStructuredText parser.\n\n   For example::\n\n      source_parsers = {'.md': 'recommonmark.parser.CommonMarkParser'}\n\n   .. note::\n\n      Refer to :doc:`/usage/markdown` for more information on using Markdown\n      with Sphinx.\n\n   .. versionadded:: 1.3\n\n   .. deprecated:: 1.8\n      Now Sphinx provides an API :meth:`.Sphinx.add_source_parser` to register\n      a source parser.  Please use it instead.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:178: WARNING: Unknown directive type \"confval\".\n\n.. confval:: master_doc\n\n   The document name of the \"master\" document, that is, the document that\n   contains the root :rst:dir:`toctree` directive.  Default is ``'index'``.\n\n   .. versionchanged:: 2.0\n      The default is changed to ``'index'`` from ``'contents'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:186: WARNING: Unknown directive type \"confval\".\n\n.. confval:: exclude_patterns\n\n   A list of glob-style patterns that should be excluded when looking for\n   source files. [1]_ They are matched against the source file names relative\n   to the source directory, using slashes as directory separators on all\n   platforms.\n\n   Example patterns:\n\n   - ``'library/xml.rst'`` -- ignores the ``library/xml.rst`` file (replaces\n     entry in :confval:`unused_docs`)\n   - ``'library/xml'`` -- ignores the ``library/xml`` directory\n   - ``'library/xml*'`` -- ignores all files and directories starting with\n     ``library/xml``\n   - ``'**/.svn'`` -- ignores all ``.svn`` directories\n\n   :confval:`exclude_patterns` is also consulted when looking for static files\n   in :confval:`html_static_path` and :confval:`html_extra_path`.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:207: WARNING: Unknown directive type \"confval\".\n\n.. confval:: templates_path\n\n   A list of paths that contain extra templates (or templates that overwrite\n   builtin/theme-specific templates).  Relative paths are taken as relative to\n   the configuration directory.\n\n   .. versionchanged:: 1.3\n      As these files are not meant to be built, they are automatically added to\n      :confval:`exclude_patterns`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:217: WARNING: Unknown directive type \"confval\".\n\n.. confval:: template_bridge\n\n   A string with the fully-qualified name of a callable (or simply a class)\n   that returns an instance of :class:`~sphinx.application.TemplateBridge`.\n   This instance is then used to render HTML documents, and possibly the output\n   of other builders (currently the changes builder).  (Note that the template\n   bridge must be made theme-aware if HTML themes are to be used.)\n/sphinx-doc__sphinx/doc/usage/configuration.rst:225: WARNING: Unknown directive type \"confval\".\n\n.. confval:: rst_epilog\n\n   .. index:: pair: global; substitutions\n\n   A string of reStructuredText that will be included at the end of every source\n   file that is read.  This is a possible place to add substitutions that should\n   be available in every file (another being :confval:`rst_prolog`).  An\n   example::\n\n      rst_epilog = \"\"\"\n      .. |psf| replace:: Python Software Foundation\n      \"\"\"\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:240: WARNING: Unknown directive type \"confval\".\n\n.. confval:: rst_prolog\n\n   .. index:: pair: global; substitutions\n\n   A string of reStructuredText that will be included at the beginning of every\n   source file that is read.  This is a possible place to add substitutions that\n   should be available in every file (another being :confval:`rst_epilog`).  An\n   example::\n\n      rst_prolog = \"\"\"\n      .. |psf| replace:: Python Software Foundation\n      \"\"\"\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:255: WARNING: Unknown directive type \"confval\".\n\n.. confval:: primary_domain\n\n   .. index:: default; domain\n              primary; domain\n\n   The name of the default :doc:`domain </usage/restructuredtext/domains>`.\n   Can also be ``None`` to disable a default domain.  The default is ``'py'``.\n   Those objects in other domains (whether the domain name is given explicitly,\n   or selected by a :rst:dir:`default-domain` directive) will have the domain\n   name explicitly prepended when named (e.g., when the default domain is C,\n   Python functions will be named \"Python function\", not just \"function\").\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:269: WARNING: Unknown directive type \"confval\".\n\n.. confval:: default_role\n\n   .. index:: default; role\n\n   The name of a reST role (builtin or Sphinx extension) to use as the default\n   role, that is, for text marked up ```like this```.  This can be set to\n   ``'py:obj'`` to make ```filter``` a cross-reference to the Python function\n   \"filter\".  The default is ``None``, which doesn't reassign the default role.\n\n   The default role can always be set within individual documents using the\n   standard reST :rst:dir:`default-role` directive.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:283: WARNING: Unknown directive type \"confval\".\n\n.. confval:: keep_warnings\n\n   If true, keep warnings as \"system message\" paragraphs in the built\n   documents.  Regardless of this setting, warnings are always written to the\n   standard error stream when ``sphinx-build`` is run.\n\n   The default is ``False``, the pre-0.5 behavior was to always keep them.\n\n   .. versionadded:: 0.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:293: WARNING: Unknown directive type \"confval\".\n\n.. confval:: suppress_warnings\n\n   A list of warning types to suppress arbitrary warning messages.\n\n   Sphinx supports following warning types:\n\n   * ``app.add_node``\n   * ``app.add_directive``\n   * ``app.add_role``\n   * ``app.add_generic_role``\n   * ``app.add_source_parser``\n   * ``download.not_readable``\n   * ``image.not_readable``\n   * ``ref.term``\n   * ``ref.ref``\n   * ``ref.numref``\n   * ``ref.keyword``\n   * ``ref.option``\n   * ``ref.citation``\n   * ``ref.footnote``\n   * ``ref.doc``\n   * ``ref.python``\n   * ``misc.highlighting_failure``\n   * ``toc.circular``\n   * ``toc.secnum``\n   * ``epub.unknown_project_files``\n   * ``epub.duplicated_toc_entry``\n   * ``autosectionlabel.*``\n\n   You can choose from these types.\n\n   Now, this option should be considered *experimental*.\n\n   .. versionadded:: 1.4\n\n   .. versionchanged:: 1.5\n\n      Added ``misc.highlighting_failure``\n\n   .. versionchanged:: 1.5.1\n\n      Added ``epub.unknown_project_files``\n\n   .. versionchanged:: 1.6\n\n      Added ``ref.footnote``\n\n   .. versionchanged:: 2.1\n\n      Added ``autosectionlabel.*``\n\n   .. versionchanged:: 3.3.0\n\n      Added ``epub.duplicated_toc_entry``\n/sphinx-doc__sphinx/doc/usage/configuration.rst:348: WARNING: Unknown directive type \"confval\".\n\n.. confval:: needs_sphinx\n\n   If set to a ``major.minor`` version string like ``'1.1'``, Sphinx will\n   compare it with its version and refuse to build if it is too old.  Default\n   is no requirement.\n\n   .. versionadded:: 1.0\n\n   .. versionchanged:: 1.4\n      also accepts micro version string\n/sphinx-doc__sphinx/doc/usage/configuration.rst:359: WARNING: Unknown directive type \"confval\".\n\n.. confval:: needs_extensions\n\n   This value can be a dictionary specifying version requirements for\n   extensions in :confval:`extensions`, e.g. ``needs_extensions =\n   {'sphinxcontrib.something': '1.5'}``.  The version strings should be in the\n   form ``major.minor``.  Requirements do not have to be specified for all\n   extensions, only for those you want to check.\n\n   This requires that the extension specifies its version to Sphinx (see\n   :ref:`dev-extensions` for how to do that).\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:372: WARNING: Unknown directive type \"confval\".\n\n.. confval:: manpages_url\n\n   A URL to cross-reference :rst:role:`manpage` directives. If this is\n   defined to ``https://manpages.debian.org/{path}``, the\n   :literal:`:manpage:`man(1)`` role will link to\n   <https://manpages.debian.org/man(1)>. The patterns available are:\n\n     * ``page`` - the manual page (``man``)\n     * ``section`` - the manual section (``1``)\n     * ``path`` - the original manual page and section specified (``man(1)``)\n\n   This also supports manpages specified as ``man.1``.\n\n   .. note:: This currently affects only HTML writers but could be\n             expanded in the future.\n\n   .. versionadded:: 1.7\n/sphinx-doc__sphinx/doc/usage/configuration.rst:390: WARNING: Unknown directive type \"confval\".\n\n.. confval:: nitpicky\n\n   If true, Sphinx will warn about *all* references where the target cannot be\n   found.  Default is ``False``.  You can activate this mode temporarily using\n   the :option:`-n <sphinx-build -n>` command-line switch.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:398: WARNING: Unknown directive type \"confval\".\n\n.. confval:: nitpick_ignore\n\n   A list of ``(type, target)`` tuples (by default empty) that should be\n   ignored when generating warnings in \"nitpicky mode\".  Note that ``type``\n   should include the domain name if present.  Example entries would be\n   ``('py:func', 'int')`` or ``('envvar', 'LD_LIBRARY_PATH')``.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:407: WARNING: Unknown directive type \"confval\".\n\n.. confval:: numfig\n\n   If true, figures, tables and code-blocks are automatically numbered if they\n   have a caption.  The :rst:role:`numref` role is enabled.\n   Obeyed so far only by HTML and LaTeX builders. Default is ``False``.\n\n   .. note::\n\n      The LaTeX builder always assigns numbers whether this option is enabled\n      or not.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:420: WARNING: Unknown directive type \"confval\".\n\n.. confval:: numfig_format\n\n   A dictionary mapping ``'figure'``, ``'table'``, ``'code-block'`` and\n   ``'section'`` to strings that are used for format of figure numbers.\n   As a special character, ``%s`` will be replaced to figure number.\n\n   Default is to use ``'Fig. %s'`` for ``'figure'``, ``'Table %s'`` for\n   ``'table'``, ``'Listing %s'`` for ``'code-block'`` and ``'Section'`` for\n   ``'section'``.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:432: WARNING: Unknown directive type \"confval\".\n\n.. confval:: numfig_secnum_depth\n\n   - if set to ``0``, figures, tables and code-blocks are continuously numbered\n     starting at ``1``.\n   - if ``1`` (default) numbers will be ``x.1``, ``x.2``, ... with ``x``\n     the section number (top level sectioning; no ``x.`` if no section).\n     This naturally applies only if section numbering has been activated via\n     the ``:numbered:`` option of the :rst:dir:`toctree` directive.\n   - ``2`` means that numbers will be ``x.y.1``, ``x.y.2``, ... if located in\n     a sub-section (but still ``x.1``, ``x.2``, ... if located directly under a\n     section and ``1``, ``2``, ... if not in any top level section.)\n   - etc...\n\n   .. versionadded:: 1.3\n\n   .. versionchanged:: 1.7\n      The LaTeX builder obeys this setting (if :confval:`numfig` is set to\n      ``True``).\n/sphinx-doc__sphinx/doc/usage/configuration.rst:451: WARNING: Unknown directive type \"confval\".\n\n.. confval:: smartquotes\n\n   If true, the `Docutils Smart Quotes transform`__, originally based on\n   `SmartyPants`__ (limited to English) and currently applying to many\n   languages, will be used to convert quotes and dashes to typographically\n   correct entities.  Default: ``True``.\n\n   __ http://docutils.sourceforge.net/docs/user/smartquotes.html\n   __ https://daringfireball.net/projects/smartypants/\n\n   .. versionadded:: 1.6.6\n      It replaces deprecated :confval:`html_use_smartypants`.\n      It applies by default to all builders except ``man`` and ``text``\n      (see :confval:`smartquotes_excludes`.)\n\n   A `docutils.conf`__ file located in the configuration directory (or a\n   global :file:`~/.docutils` file) is obeyed unconditionally if it\n   *deactivates* smart quotes via the corresponding `Docutils option`__.  But\n   if it *activates* them, then :confval:`smartquotes` does prevail.\n\n   __ http://docutils.sourceforge.net/docs/user/config.html\n   __ http://docutils.sourceforge.net/docs/user/config.html#smart-quotes\n/sphinx-doc__sphinx/doc/usage/configuration.rst:474: WARNING: Unknown directive type \"confval\".\n\n.. confval:: smartquotes_action\n\n   This string, for use with Docutils ``0.14`` or later, customizes the Smart\n   Quotes transform.  See the file :file:`smartquotes.py` at the `Docutils\n   repository`__ for details.  The default ``'qDe'`` educates normal **q**\\\n   uote characters ``\"``, ``'``, em- and en-**D**\\ ashes ``---``, ``--``, and\n   **e**\\ llipses ``...``.\n\n   .. versionadded:: 1.6.6\n\n   __ https://sourceforge.net/p/docutils/code/HEAD/tree/trunk/docutils/\n/sphinx-doc__sphinx/doc/usage/configuration.rst:486: WARNING: Unknown directive type \"confval\".\n\n.. confval:: smartquotes_excludes\n\n   This is a ``dict`` whose default is::\n\n     {'languages': ['ja'], 'builders': ['man', 'text']}\n\n   Each entry gives a sufficient condition to ignore the\n   :confval:`smartquotes` setting and deactivate the Smart Quotes transform.\n   Accepted keys are as above ``'builders'`` or ``'languages'``.\n   The values are lists.\n\n   .. note:: Currently, in case of invocation of :program:`make` with multiple\n      targets, the first target name is the only one which is tested against\n      the ``'builders'`` entry and it decides for all.  Also, a ``make text``\n      following ``make html`` needs to be issued in the form ``make text\n      O=\"-E\"`` to force re-parsing of source files, as the cached ones are\n      already transformed.  On the other hand the issue does not arise with\n      direct usage of :program:`sphinx-build` as it caches\n      (in its default usage) the parsed source files in per builder locations.\n\n   .. hint:: An alternative way to effectively deactivate (or customize) the\n      smart quotes for a given builder, for example ``latex``, is to use\n      ``make`` this way:\n\n      .. code-block:: console\n\n         make latex O=\"-D smartquotes_action=\"\n\n      This can follow some ``make html`` with no problem, in contrast to the\n      situation from the prior note.  It requires Docutils 0.14 or later.\n\n   .. versionadded:: 1.6.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:519: WARNING: Unknown directive type \"confval\".\n\n.. confval:: user_agent\n\n   A User-Agent of Sphinx.  It is used for a header on HTTP access (ex.\n   linkcheck, intersphinx and so on).  Default is ``\"Sphinx/X.Y.Z\n   requests/X.Y.Z python/X.Y.Z\"``.\n\n   .. versionadded:: 2.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:527: WARNING: Unknown directive type \"confval\".\n\n.. confval:: tls_verify\n\n   If true, Sphinx verifies server certifications.  Default is ``True``.\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:533: WARNING: Unknown directive type \"confval\".\n\n.. confval:: tls_cacerts\n\n   A path to a certification file of CA or a path to directory which\n   contains the certificates.  This also allows a dictionary mapping\n   hostname to the path to certificate file.\n   The certificates are used to verify server certifications.\n\n   .. versionadded:: 1.5\n\n   .. tip:: Sphinx uses requests_ as a HTTP library internally.\n            Therefore, Sphinx refers a certification file on the\n            directory pointed ``REQUESTS_CA_BUNDLE`` environment\n            variable if ``tls_cacerts`` not set.\n\n            .. _requests: https://requests.readthedocs.io/en/master/\n/sphinx-doc__sphinx/doc/usage/configuration.rst:549: WARNING: Unknown directive type \"confval\".\n\n.. confval:: today\n             today_fmt\n\n   These values determine how to format the current date, used as the\n   replacement for ``|today|``.\n\n   * If you set :confval:`today` to a non-empty value, it is used.\n   * Otherwise, the current time is formatted using :func:`time.strftime` and\n     the format given in :confval:`today_fmt`.\n\n   The default is now :confval:`today` and a :confval:`today_fmt` of ``'%B %d,\n   %Y'`` (or, if translation is enabled with :confval:`language`, an equivalent\n   format for the selected locale).\n/sphinx-doc__sphinx/doc/usage/configuration.rst:563: WARNING: Unknown directive type \"confval\".\n\n.. confval:: highlight_language\n\n   The default language to highlight source code in.  The default is\n   ``'python3'``.  The value should be a valid Pygments lexer name, see\n   :ref:`code-examples` for more details.\n\n   .. versionadded:: 0.5\n\n   .. versionchanged:: 1.4\n      The default is now ``'default'``. It is similar to ``'python3'``;\n      it is mostly a superset of ``'python'`` but it fallbacks to\n      ``'none'`` without warning if failed.  ``'python3'`` and other\n      languages will emit warning if failed.  If you prefer Python 2\n      only highlighting, you can set it back to ``'python'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:578: WARNING: Unknown directive type \"confval\".\n\n.. confval:: highlight_options\n\n   A dictionary of options that modify how the lexer specified by\n   :confval:`highlight_language` generates highlighted source code. These are\n   lexer-specific; for the options understood by each, see the\n   `Pygments documentation <https://pygments.org/docs/lexers>`_.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:587: WARNING: Unknown directive type \"confval\".\n\n.. confval:: pygments_style\n\n   The style name to use for Pygments highlighting of source code.  If not set,\n   either the theme's default style or ``'sphinx'`` is selected for HTML\n   output.\n\n   .. versionchanged:: 0.3\n      If the value is a fully-qualified name of a custom Pygments style class,\n      this is then used as custom style.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:597: WARNING: Unknown directive type \"confval\".\n\n.. confval:: add_function_parentheses\n\n   A boolean that decides whether parentheses are appended to function and\n   method role text (e.g. the content of ``:func:`input```) to signify that the\n   name is callable.  Default is ``True``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:603: WARNING: Unknown directive type \"confval\".\n\n.. confval:: add_module_names\n\n   A boolean that decides whether module names are prepended to all\n   :term:`object` names (for object types where a \"module\" of some kind is\n   defined), e.g. for :rst:dir:`py:function` directives.  Default is ``True``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:609: WARNING: Unknown directive type \"confval\".\n\n.. confval:: show_authors\n\n   A boolean that decides whether :rst:dir:`codeauthor` and\n   :rst:dir:`sectionauthor` directives produce any output in the built files.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:614: WARNING: Unknown directive type \"confval\".\n\n.. confval:: modindex_common_prefix\n\n   A list of prefixes that are ignored for sorting the Python module index\n   (e.g., if this is set to ``['foo.']``, then ``foo.bar`` is shown under ``B``,\n   not ``F``). This can be handy if you document a project that consists of a\n   single package.  Works only for the HTML builder currently.  Default is\n   ``[]``.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:624: WARNING: Unknown directive type \"confval\".\n\n.. confval:: trim_footnote_reference_space\n\n   Trim spaces before footnote references that are necessary for the reST\n   parser to recognize the footnote, but do not look too nice in the output.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:631: WARNING: Unknown directive type \"confval\".\n\n.. confval:: trim_doctest_flags\n\n   If true, doctest flags (comments looking like ``# doctest: FLAG, ...``) at\n   the ends of lines and ``<BLANKLINE>`` markers are removed for all code\n   blocks showing interactive Python sessions (i.e. doctests).  Default is\n   ``True``.  See the extension :mod:`~sphinx.ext.doctest` for more\n   possibilities of including doctests.\n\n   .. versionadded:: 1.0\n   .. versionchanged:: 1.1\n      Now also removes ``<BLANKLINE>``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:643: WARNING: Unknown directive type \"confval\".\n\n.. confval:: strip_signature_backslash\n\n   Default is ``False``.\n   When backslash stripping is enabled then every occurrence of ``\\\\`` in a\n   domain directive will be changed to ``\\``, even within string literals.\n   This was the behaviour before version 3.0, and setting this variable to\n   ``True`` will reinstate that behaviour.\n\n    .. versionadded:: 3.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:662: WARNING: Unknown directive type \"confval\".\n\n.. confval:: language\n\n   The code for the language the docs are written in.  Any text automatically\n   generated by Sphinx will be in that language.  Also, Sphinx will try to\n   substitute individual paragraphs from your documents with the translation\n   sets obtained from :confval:`locale_dirs`.  Sphinx will search\n   language-specific figures named by :confval:`figure_language_filename`\n   (e.g. the German version of ``myfigure.png`` will be ``myfigure.de.png``\n   by default setting) and substitute them for original figures.  In the LaTeX\n   builder, a suitable language will be selected as an option for the *Babel*\n   package.  Default is ``None``, which means that no translation will be done.\n\n   .. versionadded:: 0.5\n\n   .. versionchanged:: 1.4\n\n      Support figure substitution\n\n   Currently supported languages by Sphinx are:\n\n   * ``ar`` -- Arabic\n   * ``bg`` -- Bulgarian\n   * ``bn`` -- Bengali\n   * ``ca`` -- Catalan\n   * ``cak`` -- Kaqchikel\n   * ``cs`` -- Czech\n   * ``cy`` -- Welsh\n   * ``da`` -- Danish\n   * ``de`` -- German\n   * ``el`` -- Greek\n   * ``en`` -- English\n   * ``eo`` -- Esperanto\n   * ``es`` -- Spanish\n   * ``et`` -- Estonian\n   * ``eu`` -- Basque\n   * ``fa`` -- Iranian\n   * ``fi`` -- Finnish\n   * ``fr`` -- French\n   * ``he`` -- Hebrew\n   * ``hi`` -- Hindi\n   * ``hi_IN`` -- Hindi (India)\n   * ``hr`` -- Croatian\n   * ``hu`` -- Hungarian\n   * ``id`` -- Indonesian\n   * ``it`` -- Italian\n   * ``ja`` -- Japanese\n   * ``ko`` -- Korean\n   * ``lt`` -- Lithuanian\n   * ``lv`` -- Latvian\n   * ``mk`` -- Macedonian\n   * ``nb_NO`` -- Norwegian Bokmal\n   * ``ne`` -- Nepali\n   * ``nl`` -- Dutch\n   * ``pl`` -- Polish\n   * ``pt`` -- Portuguese\n   * ``pt_BR`` -- Brazilian Portuguese\n   * ``pt_PT`` -- European Portuguese\n   * ``ro`` -- Romanian\n   * ``ru`` -- Russian\n   * ``si`` -- Sinhala\n   * ``sk`` -- Slovak\n   * ``sl`` -- Slovenian\n   * ``sq`` -- Albanian\n   * ``sr`` -- Serbian\n   * ``sr@latin`` -- Serbian (Latin)\n   * ``sr_RS`` -- Serbian (Cyrillic)\n   * ``sv`` -- Swedish\n   * ``ta`` -- Tamil\n   * ``te`` -- Telugu\n   * ``tr`` -- Turkish\n   * ``uk_UA`` -- Ukrainian\n   * ``ur`` -- Urdu\n   * ``vi`` -- Vietnamese\n   * ``zh_CN`` -- Simplified Chinese\n   * ``zh_TW`` -- Traditional Chinese\n/sphinx-doc__sphinx/doc/usage/configuration.rst:738: WARNING: Unknown directive type \"confval\".\n\n.. confval:: locale_dirs\n\n   .. versionadded:: 0.5\n\n   Directories in which to search for additional message catalogs (see\n   :confval:`language`), relative to the source directory.  The directories on\n   this path are searched by the standard :mod:`gettext` module.\n\n   Internal messages are fetched from a text domain of ``sphinx``; so if you\n   add the directory :file:`./locale` to this setting, the message catalogs\n   (compiled from ``.po`` format using :program:`msgfmt`) must be in\n   :file:`./locale/{language}/LC_MESSAGES/sphinx.mo`.  The text domain of\n   individual documents depends on :confval:`gettext_compact`.\n\n   The default is ``['locales']``.\n\n   .. versionchanged:: 1.5\n      Use ``locales`` directory as a default value\n/sphinx-doc__sphinx/doc/usage/configuration.rst:757: WARNING: Unknown directive type \"confval\".\n\n.. confval:: gettext_compact\n\n   .. versionadded:: 1.1\n\n   If true, a document's text domain is its docname if it is a top-level\n   project file and its very base directory otherwise.\n\n   If set to string, all document's text domain is this string, making all\n   documents use single text domain.\n\n   By default, the document ``markup/code.rst`` ends up in the ``markup`` text\n   domain.  With this option set to ``False``, it is ``markup/code``.\n\n   .. versionchanged:: 3.3\n      The string value is now accepted.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:773: WARNING: Unknown directive type \"confval\".\n\n.. confval:: gettext_uuid\n\n   If true, Sphinx generates uuid information for version tracking in message\n   catalogs. It is used for:\n\n   * Add uid line for each msgids in .pot files.\n   * Calculate similarity between new msgids and previously saved old msgids.\n     This calculation takes a long time.\n\n   If you want to accelerate the calculation, you can use\n   ``python-levenshtein`` 3rd-party package written in C by using\n   :command:`pip install python-levenshtein`.\n\n   The default is ``False``.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:790: WARNING: Unknown directive type \"confval\".\n\n.. confval:: gettext_location\n\n   If true, Sphinx generates location information for messages in message\n   catalogs.\n\n   The default is ``True``.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:799: WARNING: Unknown directive type \"confval\".\n\n.. confval:: gettext_auto_build\n\n   If true, Sphinx builds mo file for each translation catalog files.\n\n   The default is ``True``.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:807: WARNING: Unknown directive type \"confval\".\n\n.. confval:: gettext_additional_targets\n\n   To specify names to enable gettext extracting and translation applying for\n   i18n additionally. You can specify below names:\n\n   :index: index terms\n   :literal-block: literal blocks (``::`` annotation and ``code-block`` directive)\n   :doctest-block: doctest block\n   :raw: raw content\n   :image: image/figure uri and alt\n\n   For example: ``gettext_additional_targets = ['literal-block', 'image']``.\n\n   The default is ``[]``.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:824: WARNING: Unknown directive type \"confval\".\n\n.. confval:: figure_language_filename\n\n   The filename format for language-specific figures.  The default value is\n   ``{root}.{language}{ext}``.  It will be expanded to\n   ``dirname/filename.en.png`` from ``.. image:: dirname/filename.png``.\n   The available format tokens are:\n\n   * ``{root}`` - the filename, including any path component, without the file\n     extension, e.g. ``dirname/filename``\n   * ``{path}`` - the directory path component of the filename, with a trailing\n     slash if non-empty, e.g. ``dirname/``\n   * ``{docpath}`` - the directory path component for the current document, with\n     a trailing slash if non-empty.\n   * ``{basename}`` - the filename without the directory path or file extension\n     components, e.g. ``filename``\n   * ``{ext}`` - the file extension, e.g. ``.png``\n   * ``{language}`` - the translation language, e.g. ``en``\n\n   For example, setting this to ``{path}{language}/{basename}{ext}`` will\n   expand to ``dirname/en/filename.png`` instead.\n\n   .. versionadded:: 1.4\n\n   .. versionchanged:: 1.5\n      Added ``{path}`` and ``{basename}`` tokens.\n\n   .. versionchanged:: 3.2\n      Added ``{docpath}`` token.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:861: WARNING: Unknown directive type \"confval\".\n\n.. confval:: math_number_all\n\n   Set this option to ``True`` if you want all displayed math to be numbered.\n   The default is ``False``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:866: WARNING: Unknown directive type \"confval\".\n\n.. confval:: math_eqref_format\n\n   A string used for formatting the labels of references to equations.\n   The ``{number}`` place-holder stands for the equation number.\n\n   Example: ``'Eq.{number}'`` gets rendered as, for example, ``Eq.10``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:873: WARNING: Unknown directive type \"confval\".\n\n.. confval:: math_numfig\n\n   If ``True``, displayed math equations are numbered across pages when\n   :confval:`numfig` is enabled.  The :confval:`numfig_secnum_depth` setting\n   is respected.  The :rst:role:`eq`, not :rst:role:`numref`, role\n   must be used to reference equation numbers.  Default is ``True``.\n\n   .. versionadded:: 1.7\n/sphinx-doc__sphinx/doc/usage/configuration.rst:891: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_theme\n\n   The \"theme\" that the HTML output should use.  See the :doc:`section about\n   theming </usage/theming>`.  The default is ``'alabaster'``.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:898: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_theme_options\n\n   A dictionary of options that influence the look and feel of the selected\n   theme.  These are theme-specific.  For the options understood by the builtin\n   themes, see :ref:`this section <builtin-themes>`.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:906: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_theme_path\n\n   A list of paths that contain custom themes, either as subdirectories or as\n   zip files.  Relative paths are taken as relative to the configuration\n   directory.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:914: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_style\n\n   The style sheet to use for HTML pages.  A file of that name must exist\n   either in Sphinx's :file:`static/` path, or in one of the custom paths given\n   in :confval:`html_static_path`.  Default is the stylesheet given by the\n   selected theme.  If you only want to add or override a few things compared\n   to the theme's stylesheet, use CSS ``@import`` to import the theme's\n   stylesheet.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:923: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_title\n\n   The \"title\" for HTML documentation generated with Sphinx's own templates.\n   This is appended to the ``<title>`` tag of individual pages, and used in the\n   navigation bar as the \"topmost\" element.  It defaults to :samp:`'{<project>}\n   v{<revision>} documentation'`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:930: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_short_title\n\n   A shorter \"title\" for the HTML docs.  This is used for links in the\n   header and in the HTML Help docs.  If not given, it defaults to the value of\n   :confval:`html_title`.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:938: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_baseurl\n\n   The URL which points to the root of the HTML documentation.  It is used to\n   indicate the location of document like ``canonical_url``.\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:945: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_codeblock_linenos_style\n\n   The style of line numbers for code-blocks.\n\n   * ``'table'`` -- display line numbers using ``<table>`` tag (default)\n   * ``'inline'`` -- display line numbers using ``<span>`` tag\n\n   .. versionadded:: 3.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:954: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_context\n\n   A dictionary of values to pass into the template engine's context for all\n   pages.  Single values can also be put in this dictionary using the\n   :option:`-A <sphinx-build -A>` command-line option of ``sphinx-build``.\n\n   .. versionadded:: 0.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:962: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_logo\n\n   If given, this must be the name of an image file (path relative to the\n   :term:`configuration directory`) that is the logo of the docs.  It is placed\n   at the top of the sidebar; its width should therefore not exceed 200 pixels.\n   Default: ``None``.\n\n   .. versionadded:: 0.4.1\n      The image file will be copied to the ``_static`` directory of the output\n      HTML, but only if the file does not already exist there.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:973: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_favicon\n\n   If given, this must be the name of an image file (path relative to the\n   :term:`configuration directory`) that is the favicon of the docs.  Modern\n   browsers use this as the icon for tabs, windows and bookmarks.  It should\n   be a Windows-style icon file (``.ico``), which is 16x16 or 32x32\n   pixels large.  Default: ``None``.\n\n   .. versionadded:: 0.4\n      The image file will be copied to the ``_static`` directory of the output\n      HTML, but only if the file does not already exist there.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:985: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_css_files\n\n   A list of CSS files.  The entry must be a *filename* string or a tuple\n   containing the *filename* string and the *attributes* dictionary.  The\n   *filename* must be relative to the :confval:`html_static_path`, or a full URI\n   with scheme like ``http://example.org/style.css``.  The *attributes* is used\n   for attributes of ``<link>`` tag.  It defaults to an empty list.\n\n   Example::\n\n       html_css_files = ['custom.css',\n                         'https://example.com/css/custom.css',\n                         ('print.css', {'media': 'print'})]\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1001: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_js_files\n\n   A list of JavaScript *filename*.  The entry must be a *filename* string or a\n   tuple containing the *filename* string and the *attributes* dictionary.  The\n   *filename* must be relative to the :confval:`html_static_path`, or a full\n   URI with scheme like ``http://example.org/script.js``.  The *attributes* is\n   used for attributes of ``<script>`` tag.  It defaults to an empty list.\n\n   Example::\n\n       html_js_files = ['script.js',\n                        'https://example.com/scripts/custom.js',\n                        ('custom.js', {'async': 'async'})]\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1017: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_static_path\n\n   A list of paths that contain custom static files (such as style\n   sheets or script files).  Relative paths are taken as relative to\n   the configuration directory.  They are copied to the output's\n   :file:`_static` directory after the theme's static files, so a file\n   named :file:`default.css` will overwrite the theme's\n   :file:`default.css`.\n\n   As these files are not meant to be built, they are automatically excluded\n   from source files.\n\n   .. note::\n\n      For security reasons, dotfiles under ``html_static_path`` will\n      not be copied.  If you would like to copy them intentionally, please\n      add each filepath to this setting::\n\n          html_static_path = ['_static', '_static/.htaccess']\n\n      Another way to do that, you can also use\n      :confval:`html_extra_path`.  It allows to copy dotfiles under\n      the directories.\n\n   .. versionchanged:: 0.4\n      The paths in :confval:`html_static_path` can now contain subdirectories.\n\n   .. versionchanged:: 1.0\n      The entries in :confval:`html_static_path` can now be single files.\n\n   .. versionchanged:: 1.8\n      The files under :confval:`html_static_path` are excluded from source\n      files.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1051: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_extra_path\n\n   A list of paths that contain extra files not directly related to\n   the documentation, such as :file:`robots.txt` or :file:`.htaccess`.\n   Relative paths are taken as relative to the configuration\n   directory.  They are copied to the output directory.  They will\n   overwrite any existing file of the same name.\n\n   As these files are not meant to be built, they are automatically excluded\n   from source files.\n\n   .. versionadded:: 1.2\n\n   .. versionchanged:: 1.4\n      The dotfiles in the extra directory will be copied to the output\n      directory.  And it refers :confval:`exclude_patterns` on copying extra\n      files and directories, and ignores if path matches to patterns.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1069: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_last_updated_fmt\n\n   If this is not None, a 'Last updated on:' timestamp is inserted\n   at every page bottom, using the given :func:`strftime` format.\n   The empty string is equivalent to ``'%b %d, %Y'`` (or a\n   locale-dependent equivalent).\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1076: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_use_smartypants\n\n   If true, quotes and dashes are converted to typographically correct\n   entities.  Default: ``True``.\n\n   .. deprecated:: 1.6\n      To disable smart quotes, use rather :confval:`smartquotes`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1084: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_add_permalinks\n\n   Sphinx will add \"permalinks\" for each heading and description environment as\n   paragraph signs that become visible when the mouse hovers over them.\n\n   This value determines the text for the permalink; it defaults to ``\"\u00b6\"``.\n   Set it to ``None`` or the empty string to disable permalinks.\n\n   .. versionadded:: 0.6\n      Previously, this was always activated.\n\n   .. versionchanged:: 1.1\n      This can now be a string to select the actual text of the link.\n      Previously, only boolean values were accepted.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1099: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_sidebars\n\n   Custom sidebar templates, must be a dictionary that maps document names to\n   template names.\n\n   The keys can contain glob-style patterns [1]_, in which case all matching\n   documents will get the specified sidebars.  (A warning is emitted when a\n   more than one glob-style pattern matches for any document.)\n\n   The values can be either lists or single strings.\n\n   * If a value is a list, it specifies the complete list of sidebar templates\n     to include.  If all or some of the default sidebars are to be included,\n     they must be put into this list as well.\n\n     The default sidebars (for documents that don't match any pattern) are\n     defined by theme itself.  Builtin themes are using these templates by\n     default: ``['localtoc.html', 'relations.html', 'sourcelink.html',\n     'searchbox.html']``.\n\n   * If a value is a single string, it specifies a custom sidebar to be added\n     between the ``'sourcelink.html'`` and ``'searchbox.html'`` entries.  This\n     is for compatibility with Sphinx versions before 1.0.\n\n   .. deprecated:: 1.7\n\n      a single string value for ``html_sidebars`` will be removed in 2.0\n\n   Builtin sidebar templates that can be rendered are:\n\n   * **localtoc.html** -- a fine-grained table of contents of the current\n     document\n   * **globaltoc.html** -- a coarse-grained table of contents for the whole\n     documentation set, collapsed\n   * **relations.html** -- two links to the previous and next documents\n   * **sourcelink.html** -- a link to the source of the current document, if\n     enabled in :confval:`html_show_sourcelink`\n   * **searchbox.html** -- the \"quick search\" box\n\n   Example::\n\n      html_sidebars = {\n         '**': ['globaltoc.html', 'sourcelink.html', 'searchbox.html'],\n         'using/windows': ['windowssidebar.html', 'searchbox.html'],\n      }\n\n   This will render the custom template ``windowssidebar.html`` and the quick\n   search box within the sidebar of the given document, and render the default\n   sidebars for all other pages (except that the local TOC is replaced by the\n   global TOC).\n\n   .. versionadded:: 1.0\n      The ability to use globbing keys and to specify multiple sidebars.\n\n   Note that this value only has no effect if the chosen theme does not possess\n   a sidebar, like the builtin **scrolls** and **haiku** themes.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1156: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_additional_pages\n\n   Additional templates that should be rendered to HTML pages, must be a\n   dictionary that maps document names to template names.\n\n   Example::\n\n      html_additional_pages = {\n          'download': 'customdownload.html',\n      }\n\n   This will render the template ``customdownload.html`` as the page\n   ``download.html``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1170: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_domain_indices\n\n   If true, generate domain-specific indices in addition to the general index.\n   For e.g. the Python domain, this is the global module index.  Default is\n   ``True``.\n\n   This value can be a bool or a list of index names that should be generated.\n   To find out the index name for a specific index, look at the HTML file name.\n   For example, the Python module index has the name ``'py-modindex'``.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1182: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_use_index\n\n   If true, add an index to the HTML documents.  Default is ``True``.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1188: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_split_index\n\n   If true, the index is generated twice: once as a single page with all the\n   entries, and once as one page per starting letter.  Default is ``False``.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1195: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_copy_source\n\n   If true, the reST sources are included in the HTML build as\n   :file:`_sources/{name}`.  The default is ``True``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1200: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_show_sourcelink\n\n   If true (and :confval:`html_copy_source` is true as well), links to the\n   reST sources will be added to the sidebar.  The default is ``True``.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1207: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_sourcelink_suffix\n\n   Suffix to be appended to source links (see :confval:`html_show_sourcelink`),\n   unless they have this suffix already.  Default is ``'.txt'``.\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1214: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_use_opensearch\n\n   If nonempty, an `OpenSearch <http://www.opensearch.org/Home>`_ description\n   file will be output, and all pages will contain a ``<link>`` tag referring\n   to it.  Since OpenSearch doesn't support relative URLs for its search page\n   location, the value of this option must be the base URL from which these\n   documents are served (without trailing slash), e.g.\n   ``\"https://docs.python.org\"``.  The default is ``''``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1223: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_file_suffix\n\n   This is the file name suffix for generated HTML files.  The default is\n   ``\".html\"``.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1230: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_link_suffix\n\n   Suffix for generated links to HTML files.  The default is whatever\n   :confval:`html_file_suffix` is set to; it can be set differently (e.g. to\n   support different web server setups).\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1238: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_show_copyright\n\n   If true, \"(C) Copyright ...\" is shown in the HTML footer. Default is\n   ``True``.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1245: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_show_sphinx\n\n   If true, \"Created using Sphinx\" is shown in the HTML footer.  Default is\n   ``True``.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1252: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_output_encoding\n\n   Encoding of HTML output files. Default is ``'utf-8'``.  Note that this\n   encoding name must both be a valid Python encoding name and a valid HTML\n   ``charset`` value.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1260: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_compact_lists\n\n   If true, a list all whose items consist of a single paragraph and/or a\n   sub-list all whose items etc... (recursive definition) will not use the\n   ``<p>`` element for any of its items. This is standard docutils behavior.\n   Default: ``True``.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1269: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_secnumber_suffix\n\n   Suffix for section numbers.  Default: ``\". \"``.  Set to ``\" \"`` to suppress\n   the final dot on section numbers.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1276: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_search_language\n\n   Language to be used for generating the HTML full-text search index.  This\n   defaults to the global language selected with :confval:`language`.  If there\n   is no support for this language, ``\"en\"`` is used which selects the English\n   language.\n\n   Support is present for these languages:\n\n   * ``da`` -- Danish\n   * ``nl`` -- Dutch\n   * ``en`` -- English\n   * ``fi`` -- Finnish\n   * ``fr`` -- French\n   * ``de`` -- German\n   * ``hu`` -- Hungarian\n   * ``it`` -- Italian\n   * ``ja`` -- Japanese\n   * ``no`` -- Norwegian\n   * ``pt`` -- Portuguese\n   * ``ro`` -- Romanian\n   * ``ru`` -- Russian\n   * ``es`` -- Spanish\n   * ``sv`` -- Swedish\n   * ``tr`` -- Turkish\n   * ``zh`` -- Chinese\n\n   .. admonition:: Accelerating build speed\n\n      Each language (except Japanese) provides its own stemming algorithm.\n      Sphinx uses a Python implementation by default.  You can use a C\n      implementation to accelerate building the index file.\n\n      * `PorterStemmer <https://pypi.org/project/PorterStemmer/>`_ (``en``)\n      * `PyStemmer <https://pypi.org/project/PyStemmer/>`_ (all languages)\n\n   .. versionadded:: 1.1\n      With support for ``en`` and ``ja``.\n\n   .. versionchanged:: 1.3\n      Added additional languages.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1318: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_search_options\n\n   A dictionary with options for the search language support, empty by default.\n   The meaning of these options depends on the language selected.\n\n   The English support has no options.\n\n   The Japanese support has these options:\n\n   :type:\n      _`type` is dotted module path string to specify Splitter implementation\n      which should be derived from :class:`sphinx.search.ja.BaseSplitter`.  If\n      not specified or None is specified,\n      ``'sphinx.search.ja.DefaultSplitter'`` will be used.\n\n      You can choose from these modules:\n\n      :'sphinx.search.ja.DefaultSplitter':\n         TinySegmenter algorithm. This is default splitter.\n      :'sphinx.search.ja.MecabSplitter':\n         MeCab binding. To use this splitter, 'mecab' python binding or dynamic\n         link library ('libmecab.so' for linux, 'libmecab.dll' for windows) is\n         required.\n      :'sphinx.search.ja.JanomeSplitter':\n         Janome binding. To use this splitter,\n         `Janome <https://pypi.org/project/Janome/>`_ is required.\n\n      .. deprecated:: 1.6\n         ``'mecab'``, ``'janome'`` and ``'default'`` is deprecated.\n         To keep compatibility, ``'mecab'``, ``'janome'`` and ``'default'`` are\n         also acceptable.\n\n   Other option values depend on splitter value which you choose.\n\n   Options for ``'mecab'``:\n      :dic_enc:\n         _`dic_enc option` is the encoding for the MeCab algorithm.\n      :dict:\n         _`dict option` is the dictionary to use for the MeCab algorithm.\n      :lib:\n         _`lib option` is the library name for finding the MeCab library via\n         ctypes if the Python binding is not installed.\n\n      For example::\n\n          html_search_options = {\n              'type': 'mecab',\n              'dic_enc': 'utf-8',\n              'dict': '/path/to/mecab.dic',\n              'lib': '/path/to/libmecab.so',\n          }\n\n   Options for ``'janome'``:\n      :user_dic:\n         _`user_dic option` is the user dictionary file path for Janome.\n      :user_dic_enc:\n         _`user_dic_enc option` is the encoding for the user dictionary file\n         specified by ``user_dic`` option. Default is 'utf8'.\n\n   .. versionadded:: 1.1\n\n   .. versionchanged:: 1.4\n      html_search_options for Japanese is re-organized and any custom splitter\n      can be used by `type`_ settings.\n\n   The Chinese support has these options:\n\n   * ``dict``  -- the ``jieba`` dictionary path if want to use\n     custom dictionary.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1388: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_search_scorer\n\n   The name of a JavaScript file (relative to the configuration directory) that\n   implements a search results scorer.  If empty, the default will be used.\n\n   .. XXX describe interface for scorer here\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1397: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_scaled_image_link\n\n   If true, images itself links to the original image if it doesn't have\n   'target' option or scale related options: 'scale', 'width', 'height'.\n   The default is ``True``.\n\n   Document authors can this feature manually with giving ``no-scaled-link``\n   class to the image:\n\n   .. code-block:: rst\n\n      .. image:: sphinx.png\n         :scale: 50%\n         :class: no-scaled-link\n\n   .. versionadded:: 1.3\n\n   .. versionchanged:: 3.0\n\n      It is disabled for images having ``no-scaled-link`` class\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1418: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_math_renderer\n\n   The name of math_renderer extension for HTML output.  The default is\n   ``'mathjax'``.\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1425: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_experimental_html5_writer\n\n   Output is processed with HTML5 writer.  This feature needs docutils 0.13 or\n   newer.  Default is ``False``.\n\n   .. versionadded:: 1.6\n\n   .. deprecated:: 2.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1434: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html4_writer\n\n   Output is processed with HTML4 writer.  Default is ``False``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1441: WARNING: Unknown directive type \"confval\".\n\n.. confval:: singlehtml_sidebars\n\n   Custom sidebar templates, must be a dictionary that maps document names to\n   template names.  And it only allows a key named `'index'`.  All other keys\n   are ignored.  For more information, refer to :confval:`html_sidebars`.  By\n   default, it is same as :confval:`html_sidebars`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1454: WARNING: Unknown directive type \"confval\".\n\n.. confval:: htmlhelp_basename\n\n   Output file base name for HTML help builder.  Default is ``'pydoc'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1458: WARNING: Unknown directive type \"confval\".\n\n.. confval:: htmlhelp_file_suffix\n\n   This is the file name suffix for generated HTML help files.  The\n   default is ``\".html\"``.\n\n   .. versionadded:: 2.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1465: WARNING: Unknown directive type \"confval\".\n\n.. confval:: htmlhelp_link_suffix\n\n   Suffix for generated links to HTML files.  The default is ``\".html\"``.\n\n   .. versionadded:: 2.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1488: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1493: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_bundle_name\n\n   The basename for the Apple Help Book.  Defaults to the :confval:`project`\n   name.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1498: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_bundle_id\n\n   The bundle ID for the help book bundle.\n\n   .. warning::\n\n      You *must* set this value in order to generate Apple Help.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1506: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_dev_region\n\n   The development region.  Defaults to ``'en-us'``, which is Apple\u2019s\n   recommended setting.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1511: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_bundle_version\n\n   The bundle version (as a string).  Defaults to ``'1'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1515: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_icon\n\n   The help bundle icon file, or ``None`` for no icon.  According to Apple's\n   documentation, this should be a 16-by-16 pixel version of the application's\n   icon with a transparent background, saved as a PNG file.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1521: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_kb_product\n\n   The product tag for use with :confval:`applehelp_kb_url`.  Defaults to\n   :samp:`'{<project>}-{<release>}'`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1526: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_kb_url\n\n   The URL for your knowledgebase server,\n   e.g. ``https://example.com/kbsearch.py?p='product'&q='query'&l='lang'``.\n   Help Viewer will replace the values ``'product'``, ``'query'`` and\n   ``'lang'`` at runtime with the contents of :confval:`applehelp_kb_product`,\n   the text entered by the user in the search box and the user's system\n   language respectively.\n\n   Defaults to ``None`` for no remote search.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1537: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_remote_url\n\n   The URL for remote content.  You can place a copy of your Help Book's\n   ``Resources`` folder at this location and Help Viewer will attempt to use\n   it to fetch updated content.\n\n   e.g. if you set it to ``https://example.com/help/Foo/`` and Help Viewer\n   wants a copy of ``index.html`` for an English speaking customer, it will\n   look at ``https://example.com/help/Foo/en.lproj/index.html``.\n\n   Defaults to ``None`` for no remote content.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1549: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_index_anchors\n\n   If ``True``, tell the help indexer to index anchors in the generated HTML.\n   This can be useful for jumping to a particular topic using the\n   ``AHLookupAnchor`` function or the ``openHelpAnchor:inBook:`` method in\n   your code.  It also allows you to use ``help:anchor`` URLs; see the Apple\n   documentation for more information on this topic.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1557: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_min_term_length\n\n   Controls the minimum term length for the help indexer.  Defaults to\n   ``None``, which means the default will be used.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1562: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_stopwords\n\n   Either a language specification (to use the built-in stopwords), or the\n   path to a stopwords plist, or ``None`` if you do not want to use stopwords.\n   The default stopwords plist can be found at\n   ``/usr/share/hiutil/Stopwords.plist`` and contains, at time of writing,\n   stopwords for the following languages:\n\n   =========  ====\n   Language   Code\n   =========  ====\n   English    en\n   German     de\n   Spanish    es\n   French     fr\n   Swedish    sv\n   Hungarian  hu\n   Italian    it\n   =========  ====\n\n   Defaults to :confval:`language`, or if that is not set, to :confval:`en`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1584: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_locale\n\n   Specifies the locale to generate help for.  This is used to determine\n   the name of the ``.lproj`` folder inside the Help Book\u2019s ``Resources``, and\n   is passed to the help indexer.\n\n   Defaults to :confval:`language`, or if that is not set, to :confval:`en`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1592: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_title\n\n   Specifies the help book title.  Defaults to :samp:`'{<project>} Help'`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1596: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_codesign_identity\n\n   Specifies the identity to use for code signing, or ``None`` if code signing\n   is not to be performed.\n\n   Defaults to the value of the environment variable ``CODE_SIGN_IDENTITY``,\n   which is set by Xcode for script build phases, or ``None`` if that variable\n   is not set.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1605: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_codesign_flags\n\n   A *list* of additional arguments to pass to :program:`codesign` when\n   signing the help book.\n\n   Defaults to a list based on the value of the environment variable\n   ``OTHER_CODE_SIGN_FLAGS``, which is set by Xcode for script build phases,\n   or the empty list if that variable is not set.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1614: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_indexer_path\n\n   The path to the :program:`hiutil` program.  Defaults to\n   ``'/usr/bin/hiutil'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1619: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_codesign_path\n\n   The path to the :program:`codesign` program.  Defaults to\n   ``'/usr/bin/codesign'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1624: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_disable_external_tools\n\n   If ``True``, the builder will not run the indexer or the code signing tool,\n   no matter what other settings are specified.\n\n   This is mainly useful for testing, or where you want to run the Sphinx\n   build on a non-Mac OS X platform and then complete the final steps on OS X\n   for some reason.\n\n   Defaults to ``False``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1646: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_basename\n\n   The basename for the epub file.  It defaults to the :confval:`project` name.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1650: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_theme\n\n   The HTML theme for the epub output.  Since the default themes are not\n   optimized for small screen space, using the same theme for HTML and epub\n   output is usually not wise.  This defaults to ``'epub'``, a theme designed\n   to save visual space.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1657: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_theme_options\n\n   A dictionary of options that influence the look and feel of the selected\n   theme.  These are theme-specific.  For the options understood by the builtin\n   themes, see :ref:`this section <builtin-themes>`.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1665: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_title\n\n   The title of the document.  It defaults to the :confval:`html_title` option\n   but can be set independently for epub creation.  It defaults to the\n   :confval:`project` option.\n\n   .. versionchanged:: 2.0\n      It defaults to the ``project`` option.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1674: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_description\n\n   The description of the document. The default value is ``'unknown'``.\n\n   .. versionadded:: 1.4\n\n   .. versionchanged:: 1.5\n      Renamed from ``epub3_description``\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1683: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_author\n\n   The author of the document.  This is put in the Dublin Core metadata.  It\n   defaults to the :confval:`author` option.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1688: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_contributor\n\n   The name of a person, organization, etc. that played a secondary role in\n   the creation of the content of an EPUB Publication. The default value is\n   ``'unknown'``.\n\n   .. versionadded:: 1.4\n\n   .. versionchanged:: 1.5\n      Renamed from ``epub3_contributor``\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1699: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_language\n\n   The language of the document.  This is put in the Dublin Core metadata.  The\n   default is the :confval:`language` option or ``'en'`` if unset.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1704: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_publisher\n\n   The publisher of the document.  This is put in the Dublin Core metadata.\n   You may use any sensible string, e.g. the project homepage.  The defaults to\n   the :confval:`author` option.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1710: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_copyright\n\n   The copyright of the document.  It defaults to the :confval:`copyright`\n   option but can be set independently for epub creation.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1715: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_identifier\n\n   An identifier for the document.  This is put in the Dublin Core metadata.\n   For published documents this is the ISBN number, but you can also use an\n   alternative scheme, e.g. the project homepage.  The default value is\n   ``'unknown'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1722: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_scheme\n\n   The publication scheme for the :confval:`epub_identifier`.  This is put in\n   the Dublin Core metadata.  For published books the scheme is ``'ISBN'``.  If\n   you use the project homepage, ``'URL'`` seems reasonable.  The default value\n   is ``'unknown'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1729: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_uid\n\n   A unique identifier for the document.  This is put in the Dublin Core\n   metadata.  You may use a\n   `XML's Name format <https://www.w3.org/TR/REC-xml/#NT-NameStartChar>`_\n   string.  You can't use hyphen, period, numbers as a first character.  The\n   default value is ``'unknown'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1737: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_cover\n\n   The cover page information.  This is a tuple containing the filenames of\n   the cover image and the html template.  The rendered html cover page is\n   inserted as the first item in the spine in :file:`content.opf`.  If the\n   template filename is empty, no html cover page is created.  No cover at all\n   is created if the tuple is empty.  Examples::\n\n      epub_cover = ('_static/cover.png', 'epub-cover.html')\n      epub_cover = ('_static/cover.png', '')\n      epub_cover = ()\n\n   The default value is ``()``.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1753: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_css_files\n\n   A list of CSS files.  The entry must be a *filename* string or a tuple\n   containing the *filename* string and the *attributes* dictionary.  For more\n   information, see :confval:`html_css_files`.\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1761: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_guide\n\n   Meta data for the guide element of :file:`content.opf`. This is a\n   sequence of tuples containing the *type*, the *uri* and the *title* of\n   the optional guide information. See the OPF documentation\n   at `<http://idpf.org/epub>`_ for details. If possible, default entries\n   for the *cover* and *toc* types are automatically inserted. However,\n   the types can be explicitly overwritten if the default entries are not\n   appropriate. Example::\n\n      epub_guide = (('cover', 'cover.html', u'Cover Page'),)\n\n   The default value is ``()``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1775: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_pre_files\n\n   Additional files that should be inserted before the text generated by\n   Sphinx. It is a list of tuples containing the file name and the title.\n   If the title is empty, no entry is added to :file:`toc.ncx`.  Example::\n\n      epub_pre_files = [\n          ('index.html', 'Welcome'),\n      ]\n\n   The default value is ``[]``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1787: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_post_files\n\n   Additional files that should be inserted after the text generated by Sphinx.\n   It is a list of tuples containing the file name and the title.  This option\n   can be used to add an appendix.  If the title is empty, no entry is added\n   to :file:`toc.ncx`.  The default value is ``[]``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1794: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_exclude_files\n\n   A list of files that are generated/copied in the build directory but should\n   not be included in the epub file.  The default value is ``[]``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1799: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_tocdepth\n\n   The depth of the table of contents in the file :file:`toc.ncx`.  It should\n   be an integer greater than zero.  The default value is 3.  Note: A deeply\n   nested table of contents may be difficult to navigate.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1805: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_tocdup\n\n   This flag determines if a toc entry is inserted again at the beginning of\n   its nested toc listing.  This allows easier navigation to the top of\n   a chapter, but can be confusing because it mixes entries of different\n   depth in one list.  The default value is ``True``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1812: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_tocscope\n\n   This setting control the scope of the epub table of contents.  The setting\n   can have the following values:\n\n   * ``'default'`` -- include all toc entries that are not hidden (default)\n   * ``'includehidden'`` -- include all toc entries\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1822: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_fix_images\n\n   This flag determines if sphinx should try to fix image formats that are not\n   supported by some epub readers.  At the moment palette images with a small\n   color table are upgraded.  You need Pillow, the Python Image Library,\n   installed to use this option.  The default value is ``False`` because the\n   automatic conversion may lose information.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1832: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_max_image_width\n\n   This option specifies the maximum width of images.  If it is set to a value\n   greater than zero, images with a width larger than the given value are\n   scaled accordingly.  If it is zero, no scaling is performed. The default\n   value is ``0``.  You need the Python Image Library (Pillow) installed to use\n   this option.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1842: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_show_urls\n\n   Control whether to display URL addresses. This is very useful for\n   readers that have no other means to display the linked URL. The\n   settings can have the following values:\n\n   * ``'inline'`` -- display URLs inline in parentheses (default)\n   * ``'footnote'`` -- display URLs in footnotes\n   * ``'no'`` -- do not display URLs\n\n   The display of inline URLs can be customized by adding CSS rules for the\n   class ``link-target``.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1857: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_use_index\n\n   If true, add an index to the epub document.  It defaults to the\n   :confval:`html_use_index` option but can be set independently for epub\n   creation.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1865: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_writing_mode\n\n   It specifies writing direction. It can accept ``'horizontal'`` (default) and\n   ``'vertical'``\n\n   .. list-table::\n      :header-rows: 1\n      :stub-columns: 1\n\n      - * ``epub_writing_mode``\n        * ``'horizontal'``\n        * ``'vertical'``\n      - * writing-mode [#]_\n        * ``horizontal-tb``\n        * ``vertical-rl``\n      - * page progression\n        * left to right\n        * right to left\n      - * iBook's Scroll Theme support\n        * scroll-axis is vertical.\n        * scroll-axis is horizontal.\n\n   .. [#] https://developer.mozilla.org/en-US/docs/Web/CSS/writing-mode\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1897: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_engine\n\n   The LaTeX engine to build the docs.  The setting can have the following\n   values:\n\n   * ``'pdflatex'`` -- PDFLaTeX (default)\n   * ``'xelatex'`` -- XeLaTeX\n   * ``'lualatex'`` -- LuaLaTeX\n   * ``'platex'`` -- pLaTeX (default if :confval:`language` is ``'ja'``)\n   * ``'uplatex'`` -- upLaTeX (experimental)\n\n   ``'pdflatex'``\\ 's support for Unicode characters is limited.\n\n   .. note::\n\n      2.0 adds to ``'pdflatex'`` support in Latin language document of\n      occasional Cyrillic or Greek letters or words.  This is not automatic,\n      see the discussion of the :confval:`latex_elements` ``'fontenc'`` key.\n\n   If your project uses Unicode characters, setting the engine to\n   ``'xelatex'`` or ``'lualatex'`` and making sure to use an OpenType font\n   with wide-enough glyph coverage is often easier than trying to make\n   ``'pdflatex'`` work with the extra Unicode characters.  Since Sphinx 2.0\n   the default is the GNU FreeFont which covers well Latin, Cyrillic and\n   Greek.\n\n   .. versionchanged:: 2.1.0\n\n      Use ``xelatex`` (and LaTeX package ``xeCJK``) by default for Chinese\n      documents.\n\n   .. versionchanged:: 2.2.1\n\n      Use ``xelatex`` by default for Greek documents.\n\n   .. versionchanged:: 2.3\n\n      Add ``uplatex`` support.\n\n   Contrarily to :ref:`MathJaX math rendering in HTML output <math-support>`,\n   LaTeX requires some extra configuration to support Unicode literals in\n   :rst:dir:`math`: the only comprehensive solution (as far as we know) is to\n   use ``'xelatex'`` or ``'lualatex'`` *and* to add\n   ``r'\\usepackage{unicode-math}'`` (e.g. via the :confval:`latex_elements`\n   ``'preamble'`` key).  You may prefer\n   ``r'\\usepackage[math-style=literal]{unicode-math}'`` to keep a Unicode\n   literal such as ``\u03b1`` (U+03B1) for example as is in output, rather than\n   being rendered as :math:`\\alpha`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1946: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_documents\n\n   This value determines how to group the document tree into LaTeX source files.\n   It must be a list of tuples ``(startdocname, targetname, title, author,\n   theme, toctree_only)``, where the items are:\n\n   *startdocname*\n     String that specifies the :term:`document name` of the LaTeX file's master\n     document.  All documents referenced by the *startdoc* document in TOC trees\n     will be included in the LaTeX file.  (If you want to use the default master\n     document for your LaTeX build, provide your :confval:`master_doc` here.)\n\n   *targetname*\n     File name of the LaTeX file in the output directory.\n\n   *title*\n     LaTeX document title.  Can be empty to use the title of the *startdoc*\n     document.  This is inserted as LaTeX markup, so special characters like a\n     backslash or ampersand must be represented by the proper LaTeX commands if\n     they are to be inserted literally.\n\n   *author*\n     Author for the LaTeX document.  The same LaTeX markup caveat as for *title*\n     applies.  Use ``\\\\and`` to separate multiple authors, as in:\n     ``'John \\\\and Sarah'`` (backslashes must be Python-escaped to reach LaTeX).\n\n   *theme*\n     LaTeX theme.  See :confval:`latex_theme`.\n\n   *toctree_only*\n     Must be ``True`` or ``False``.  If true, the *startdoc* document itself is\n     not included in the output, only the documents referenced by it via TOC\n     trees.  With this option, you can put extra stuff in the master document\n     that shows up in the HTML, but not the LaTeX output.\n\n   .. versionadded:: 1.2\n      In the past including your own document class required you to prepend the\n      document class name with the string \"sphinx\". This is not necessary\n      anymore.\n\n   .. versionadded:: 0.3\n      The 6th item ``toctree_only``.  Tuples with 5 items are still accepted.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1989: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_logo\n\n   If given, this must be the name of an image file (relative to the\n   configuration directory) that is the logo of the docs.  It is placed at the\n   top of the title page.  Default: ``None``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1995: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_toplevel_sectioning\n\n   This value determines the topmost sectioning unit. It should be chosen from\n   ``'part'``, ``'chapter'`` or ``'section'``. The default is ``None``;\n   the topmost\n   sectioning unit is switched by documentclass: ``section`` is used if\n   documentclass will be ``howto``, otherwise ``chapter`` will be used.\n\n   Note that if LaTeX uses ``\\part`` command, then the numbering of sectioning\n   units one level deep gets off-sync with HTML numbering, because LaTeX\n   numbers continuously ``\\chapter`` (or ``\\section`` for ``howto``.)\n\n   .. versionadded:: 1.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2009: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_appendices\n\n   A list of document names to append as an appendix to all manuals.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2013: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_domain_indices\n\n   If true, generate domain-specific indices in addition to the general index.\n   For e.g. the Python domain, this is the global module index.  Default is\n   ``True``.\n\n   This value can be a bool or a list of index names that should be generated,\n   like for :confval:`html_domain_indices`.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2024: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_show_pagerefs\n\n   If true, add page references after internal references.  This is very useful\n   for printed copies of the manual.  Default is ``False``.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2031: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_show_urls\n\n   Control whether to display URL addresses.  This is very useful for printed\n   copies of the manual.  The setting can have the following values:\n\n   * ``'no'`` -- do not display URLs (default)\n   * ``'footnote'`` -- display URLs in footnotes\n   * ``'inline'`` -- display URLs inline in parentheses\n\n   .. versionadded:: 1.0\n   .. versionchanged:: 1.1\n      This value is now a string; previously it was a boolean value, and a true\n      value selected the ``'inline'`` display.  For backwards compatibility,\n      ``True`` is still accepted.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2046: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_use_latex_multicolumn\n\n   The default is ``False``: it means that Sphinx's own macros are used for\n   merged cells from grid tables. They allow general contents (literal blocks,\n   lists, blockquotes, ...) but may have problems if the\n   :rst:dir:`tabularcolumns` directive was used to inject LaTeX mark-up of the\n   type ``>{..}``, ``<{..}``, ``@{..}`` as column specification.\n\n   Setting to ``True`` means to use LaTeX's standard ``\\multicolumn``; this is\n   incompatible with literal blocks in the horizontally merged cell, and also\n   with multiple paragraphs in such cell if the table is rendered using\n   ``tabulary``.\n\n   .. versionadded:: 1.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2061: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_use_xindy\n\n   If ``True``, the PDF build from the LaTeX files created by Sphinx\n   will use :program:`xindy` (doc__) rather than :program:`makeindex`\n   for preparing the index of general terms (from :rst:dir:`index`\n   usage).  This means that words with UTF-8 characters will get\n   ordered correctly for the :confval:`language`.\n\n   __ http://xindy.sourceforge.net/\n\n   - This option is ignored if :confval:`latex_engine` is ``'platex'``\n     (Japanese documents; :program:`mendex` replaces :program:`makeindex`\n     then).\n\n   - The default is ``True`` for ``'xelatex'`` or ``'lualatex'`` as\n     :program:`makeindex`, if any indexed term starts with a non-ascii\n     character, creates ``.ind`` files containing invalid bytes for\n     UTF-8 encoding. With ``'lualatex'`` this then breaks the PDF\n     build.\n\n   - The default is ``False`` for ``'pdflatex'`` but ``True`` is\n     recommended for non-English documents as soon as some indexed\n     terms use non-ascii characters from the language script.\n\n   Sphinx adds to :program:`xindy` base distribution some dedicated support\n   for using ``'pdflatex'`` engine with Cyrillic scripts.  And whether with\n   ``'pdflatex'`` or Unicode engines, Cyrillic documents handle correctly the\n   indexing of Latin names, even with diacritics.\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2092: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_elements\n\n   .. versionadded:: 0.5\n\n   Its :ref:`documentation <latex_elements_confval>` has moved to :doc:`/latex`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2098: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_docclass\n\n   A dictionary mapping ``'howto'`` and ``'manual'`` to names of real document\n   classes that will be used as the base for the two Sphinx classes.  Default\n   is to use ``'article'`` for ``'howto'`` and ``'report'`` for ``'manual'``.\n\n   .. versionadded:: 1.0\n\n   .. versionchanged:: 1.5\n\n      In Japanese docs (:confval:`language` is ``'ja'``), by default\n      ``'jreport'`` is used for ``'howto'`` and ``'jsbook'`` for ``'manual'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2111: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_additional_files\n\n   A list of file names, relative to the configuration directory, to copy to\n   the build directory when building LaTeX output.  This is useful to copy\n   files that Sphinx doesn't copy automatically, e.g. if they are referenced in\n   custom LaTeX added in ``latex_elements``.  Image files that are referenced\n   in source files (e.g. via ``.. image::``) are copied automatically.\n\n   You have to make sure yourself that the filenames don't collide with those\n   of any automatically copied files.\n\n   .. versionadded:: 0.6\n\n   .. versionchanged:: 1.2\n      This overrides the files which is provided from Sphinx such as\n      ``sphinx.sty``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2128: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_theme\n\n   The \"theme\" that the LaTeX output should use.  It is a collection of settings\n   for LaTeX output (ex. document class, top level sectioning unit and so on).\n\n   As a built-in LaTeX themes, ``manual`` and ``howto`` are bundled.\n\n   ``manual``\n     A LaTeX theme for writing a manual.  It imports the ``report`` document\n     class (Japanese documents use ``jsbook``).\n\n   ``howto``\n     A LaTeX theme for writing an article.  It imports the ``article`` document\n     class (Japanese documents use ``jreport`` rather).  :confval:`latex_appendices`\n     is available only for this theme.\n\n   It defaults to ``'manual'``.\n\n   .. versionadded:: 3.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2148: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_theme_options\n\n   A dictionary of options that influence the look and feel of the selected\n   theme.\n\n   .. versionadded:: 3.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2155: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_theme_path\n\n   A list of paths that contain custom LaTeX themes as subdirectories.  Relative\n   paths are taken as relative to the configuration directory.\n\n   .. versionadded:: 3.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2170: WARNING: Unknown directive type \"confval\".\n\n.. confval:: text_newlines\n\n   Determines which end-of-line character(s) are used in text output.\n\n   * ``'unix'``: use Unix-style line endings (``\\n``)\n   * ``'windows'``: use Windows-style line endings (``\\r\\n``)\n   * ``'native'``: use the line ending style of the platform the documentation\n     is built on\n\n   Default: ``'unix'``.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2183: WARNING: Unknown directive type \"confval\".\n\n.. confval:: text_sectionchars\n\n   A string of 7 characters that should be used for underlining sections.\n   The first character is used for first-level headings, the second for\n   second-level headings and so on.\n\n   The default is ``'*=-~\"+`'``.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2193: WARNING: Unknown directive type \"confval\".\n\n.. confval:: text_add_secnumbers\n\n   A boolean that decides whether section numbers are included in text output.\n   Default is ``True``.\n\n   .. versionadded:: 1.7\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2200: WARNING: Unknown directive type \"confval\".\n\n.. confval:: text_secnumber_suffix\n\n   Suffix for section numbers in text output.  Default: ``\". \"``. Set to\n   ``\" \"`` to suppress the final dot on section numbers.\n\n   .. versionadded:: 1.7\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2215: WARNING: Unknown directive type \"confval\".\n\n.. confval:: man_pages\n\n   This value determines how to group the document tree into manual pages.  It\n   must be a list of tuples ``(startdocname, name, description, authors,\n   section)``, where the items are:\n\n   *startdocname*\n     String that specifies the :term:`document name` of the manual page's master\n     document. All documents referenced by the *startdoc* document in TOC trees\n     will be included in the manual file.  (If you want to use the default\n     master document for your manual pages build, use your :confval:`master_doc`\n     here.)\n\n   *name*\n     Name of the manual page.  This should be a short string without spaces or\n     special characters.  It is used to determine the file name as well as the\n     name of the manual page (in the NAME section).\n\n   *description*\n     Description of the manual page.  This is used in the NAME section.\n\n   *authors*\n     A list of strings with authors, or a single string.  Can be an empty\n     string or list if you do not want to automatically generate an AUTHORS\n     section in the manual page.\n\n   *section*\n     The manual page section.  Used for the output file name as well as in the\n     manual page header.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2247: WARNING: Unknown directive type \"confval\".\n\n.. confval:: man_show_urls\n\n   If true, add URL addresses after links.  Default is ``False``.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2253: WARNING: Unknown directive type \"confval\".\n\n.. confval:: man_make_section_directory\n\n   If true, make a section directory on build man page.  Default is False.\n\n   .. versionadded:: 3.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2267: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_documents\n\n   This value determines how to group the document tree into Texinfo source\n   files.  It must be a list of tuples ``(startdocname, targetname, title,\n   author, dir_entry, description, category, toctree_only)``, where the items\n   are:\n\n   *startdocname*\n     String that specifies the :term:`document name` of the the Texinfo file's\n     master document.  All documents referenced by the *startdoc* document in\n     TOC trees will be included in the Texinfo file.  (If you want to use the\n     default master document for your Texinfo build, provide your\n     :confval:`master_doc` here.)\n\n   *targetname*\n     File name (no extension) of the Texinfo file in the output directory.\n\n   *title*\n     Texinfo document title.  Can be empty to use the title of the *startdoc*\n     document.  Inserted as Texinfo markup, so special characters like ``@`` and\n     ``{}`` will need to be escaped to be inserted literally.\n\n   *author*\n     Author for the Texinfo document.  Inserted as Texinfo markup.  Use ``@*``\n     to separate multiple authors, as in: ``'John@*Sarah'``.\n\n   *dir_entry*\n     The name that will appear in the top-level ``DIR`` menu file.\n\n   *description*\n     Descriptive text to appear in the top-level ``DIR`` menu file.\n\n   *category*\n     Specifies the section which this entry will appear in the top-level\n     ``DIR`` menu file.\n\n   *toctree_only*\n     Must be ``True`` or ``False``.  If true, the *startdoc* document itself is\n     not included in the output, only the documents referenced by it via TOC\n     trees.  With this option, you can put extra stuff in the master document\n     that shows up in the HTML, but not the Texinfo output.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2311: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_appendices\n\n   A list of document names to append as an appendix to all manuals.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2317: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_domain_indices\n\n   If true, generate domain-specific indices in addition to the general index.\n   For e.g. the Python domain, this is the global module index.  Default is\n   ``True``.\n\n   This value can be a bool or a list of index names that should be generated,\n   like for :confval:`html_domain_indices`.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2328: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_show_urls\n\n   Control how to display URL addresses.\n\n   * ``'footnote'`` -- display URLs in footnotes (default)\n   * ``'no'`` -- do not display URLs\n   * ``'inline'`` -- display URLs inline in parentheses\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2338: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_no_detailmenu\n\n   If true, do not generate a ``@detailmenu`` in the \"Top\" node's menu\n   containing entries for each sub-node in the document.  Default is ``False``.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2345: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_elements\n\n   A dictionary that contains Texinfo snippets that override those Sphinx\n   usually puts into the generated ``.texi`` files.\n\n   * Keys that you may want to override include:\n\n     ``'paragraphindent'``\n        Number of spaces to indent the first line of each paragraph, default\n        ``2``.  Specify ``0`` for no indentation.\n\n     ``'exampleindent'``\n        Number of spaces to indent the lines for examples or literal blocks,\n        default ``4``.  Specify ``0`` for no indentation.\n\n     ``'preamble'``\n        Texinfo markup inserted near the beginning of the file.\n\n     ``'copying'``\n        Texinfo markup inserted within the ``@copying`` block and displayed\n        after the title.  The default value consists of a simple title page\n        identifying the project.\n\n   * Keys that are set by other options and therefore should not be overridden\n     are:\n\n     ``'author'``\n     ``'body'``\n     ``'date'``\n     ``'direntry'``\n     ``'filename'``\n     ``'project'``\n     ``'release'``\n     ``'title'``\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2391: WARNING: Unknown directive type \"confval\".\n\n.. confval:: qthelp_basename\n\n   The basename for the qthelp file.  It defaults to the :confval:`project`\n   name.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2396: WARNING: Unknown directive type \"confval\".\n\n.. confval:: qthelp_namespace\n\n   The namespace for the qthelp file.  It defaults to\n   ``org.sphinx.<project_name>.<project_version>``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2401: WARNING: Unknown directive type \"confval\".\n\n.. confval:: qthelp_theme\n\n   The HTML theme for the qthelp output.\n   This defaults to ``'nonav'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2406: WARNING: Unknown directive type \"confval\".\n\n.. confval:: qthelp_theme_options\n\n   A dictionary of options that influence the look and feel of the selected\n   theme.  These are theme-specific.  For the options understood by the builtin\n   themes, see :ref:`this section <builtin-themes>`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2416: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_ignore\n\n   A list of regular expressions that match URIs that should not be checked\n   when doing a ``linkcheck`` build.  Example::\n\n      linkcheck_ignore = [r'http://localhost:\\d+/']\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2425: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_request_headers\n\n   A dictionary that maps baseurls to HTTP request headers.\n\n   The key is a URL base string like ``\"https://sphinx-doc.org/\"``.  To specify\n   headers for other hosts, ``\"*\"`` can be used.  It matches all hosts only when\n   the URL does not match other settings.\n\n   The value is a dictionary that maps header name to its value.\n\n   Example:\n\n   .. code-block:: python\n\n      linkcheck_request_headers = {\n          \"https://sphinx-doc.org/\": {\n              \"Accept\": \"text/html\",\n              \"Accept-Encoding\": \"utf-8\",\n          },\n          \"*\": {\n              \"Accept\": \"text/html,application/xhtml+xml\",\n          }\n      }\n\n   .. versionadded:: 3.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2451: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_retries\n\n   The number of times the linkcheck builder will attempt to check a URL before\n   declaring it broken. Defaults to 1 attempt.\n\n   .. versionadded:: 1.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2458: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_timeout\n\n   A timeout value, in seconds, for the linkcheck builder.  The default is to\n   use Python's global socket timeout.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2465: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_workers\n\n   The number of worker threads to use when checking links.  Default is 5\n   threads.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2472: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_anchors\n\n   If true, check the validity of ``#anchor``\\ s in links. Since this requires\n   downloading the whole document, it's considerably slower when enabled.\n   Default is ``True``.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2480: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_anchors_ignore\n\n   A list of regular expressions that match anchors Sphinx should skip when\n   checking the validity of anchors in links. This allows skipping anchors that\n   a website's JavaScript adds to control dynamic pages or when triggering an\n   internal REST request. Default is ``[\"^!\"]``.\n\n   .. note::\n\n      If you want to ignore anchors of a specific page or of pages that match a\n      specific pattern (but still check occurrences of the same page(s) that\n      don't have anchors), use :confval:`linkcheck_ignore` instead, for example\n      as follows::\n\n         linkcheck_ignore = [\n            'http://www.sphinx-doc.org/en/1.7/intro.html#'\n         ]\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2500: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_auth\n\n   Pass authentication information when doing a ``linkcheck`` build.\n\n   A list of ``(regex_pattern, auth_info)`` tuples where the items are:\n\n   *regex_pattern*\n     A regular expression that matches a URI.\n   *auth_info*\n     Authentication information to use for that URI. The value can be anything\n     that is understood by the ``requests`` library (see `requests\n     Authentication <requests-auth>`_ for details).\n\n     .. _requests-auth: https://requests.readthedocs.io/en/master/user/authentication/\n\n   The ``linkcheck`` builder will use the first matching ``auth_info`` value\n   it can find in the :confval:`linkcheck_auth` list, so values earlier in the\n   list have higher priority.\n\n   Example::\n\n      linkcheck_auth = [\n        ('https://foo\\.yourcompany\\.com/.+', ('johndoe', 'secret')),\n        ('https://.+\\.yourcompany\\.com/.+', HTTPDigestAuth(...)),\n      ]\n\n   .. versionadded:: 2.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2532: WARNING: Unknown directive type \"confval\".\n\n.. confval:: xml_pretty\n\n   If true, pretty-print the XML.  Default is ``True``.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2552: WARNING: Unknown directive type \"confval\".\n\n.. confval:: c_id_attributes\n\n   A list of strings that the parser additionally should accept as attributes.\n   This can for example be used when attributes have been ``#define`` d for\n   portability.\n\n   .. versionadded:: 3.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2560: WARNING: Unknown directive type \"confval\".\n\n.. confval:: c_paren_attributes\n\n   A list of strings that the parser additionally should accept as attributes\n   with one argument.  That is, if ``my_align_as`` is in the list, then\n   ``my_align_as(X)`` is parsed as an attribute for all strings ``X`` that have\n   balanced braces (``()``, ``[]``, and ``{}``).  This can for example be used\n   when attributes have been ``#define`` d for portability.\n\n   .. versionadded:: 3.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2570: WARNING: Unknown directive type \"confval\".\n\n.. confval:: c_allow_pre_v3\n\n   A boolean (default ``False``) controlling whether to parse and try to\n   convert pre-v3 style type directives and type roles.\n\n   .. versionadded:: 3.2\n   .. deprecated:: 3.2\n      Use the directives and roles added in v3.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2579: WARNING: Unknown directive type \"confval\".\n\n.. confval:: c_warn_on_allowed_pre_v3\n\n   A boolean (default ``True``) controlling whether to warn when a pre-v3\n   style type directive/role is parsed and converted.\n\n   .. versionadded:: 3.2\n   .. deprecated:: 3.2\n      Use the directives and roles added in v3.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2593: WARNING: Unknown directive type \"confval\".\n\n.. confval:: cpp_index_common_prefix\n\n   A list of prefixes that will be ignored when sorting C++ objects in the\n   global index.  For example ``['awesome_lib::']``.\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2600: WARNING: Unknown directive type \"confval\".\n\n.. confval:: cpp_id_attributes\n\n   A list of strings that the parser additionally should accept as attributes.\n   This can for example be used when attributes have been ``#define`` d for\n   portability.\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2608: WARNING: Unknown directive type \"confval\".\n\n.. confval:: cpp_paren_attributes\n\n   A list of strings that the parser additionally should accept as attributes\n   with one argument.  That is, if ``my_align_as`` is in the list, then\n   ``my_align_as(X)`` is parsed as an attribute for all strings ``X`` that have\n   balanced braces (``()``, ``[]``, and ``{}``).  This can for example be used\n   when attributes have been ``#define`` d for portability.\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2622: WARNING: Include file '/sphinx-doc__sphinx/_static/conf.py.txt' not found or reading it failed\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2541: WARNING: Footnote [1] is not referenced.\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:119: WARNING: Unknown directive type \"todo\".\n\n.. todo:: Update the below link when we add new guides on these.\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:161: WARNING: Unknown directive type \"todo\".\n\n.. todo:: Move this whole section into a guide on rST or directives\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:252: WARNING: Unknown directive type \"todo\".\n\n.. todo:: Move this entire doc to a different section\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:262: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:297: WARNING: Unknown directive type \"todo\".\n\n.. todo:: Move this doc to another section\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:308: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:308: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:312: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:317: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:13: WARNING: Unknown directive type \"todo\".\n\n.. todo:: Populate when the 'builders' document is split up.\n/sphinx-doc__sphinx/doc/usage/theming.rst:39: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:46: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:57: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:161: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:168: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:176: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:183: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:296: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:117: WARNING: image file not readable: _static/themes/alabaster.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:118: WARNING: image file not readable: _static/themes/classic.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:119: WARNING: image file not readable: _static/themes/sphinxdoc.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:120: WARNING: image file not readable: _static/themes/scrolls.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:121: WARNING: image file not readable: _static/themes/agogo.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:122: WARNING: image file not readable: _static/themes/traditional.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:123: WARNING: image file not readable: _static/themes/nature.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:124: WARNING: image file not readable: _static/themes/haiku.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:125: WARNING: image file not readable: _static/themes/pyramid.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:126: WARNING: image file not readable: _static/themes/bizstyle.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:347: WARNING: image file not readable: _static/themes/sphinx_rtd_theme.png\nWARNING: autodoc: failed to import module 'autodoc_dummy_module'; the following exception was raised:\nNo module named 'autodoc_dummy_module'\nWARNING: autodoc: failed to import module 'autodoc_dummy_foo' from module 'bug2437'; the following exception was raised:\nNo module named 'bug2437'\nWARNING: autodoc: failed to import module 'autodoc_dummy_bar'; the following exception was raised:\nNo module named 'autodoc_dummy_bar'\nWARNING: autodoc: failed to import function 'typehints.incr' from module 'target'; the following exception was raised:\nNo module named 'target'\nWARNING: autodoc: failed to import function 'typehints.tuple_args' from module 'target'; the following exception was raised:\nNo module named 'target'\nWARNING: autodoc: failed to import module 'coverage_ignored'; the following exception was raised:\nNo module named 'coverage_ignored'\nWARNING: autodoc: failed to import module 'coverage_not_ignored'; the following exception was raised:\nNo module named 'coverage_not_ignored'\nWARNING: autodoc: failed to import module 'bar' from module 'dir'; the following exception was raised:\nNo module named 'dir'\nWARNING: autodoc: failed to import module 'foo'; the following exception was raised:\nNo module named 'foo'\nWARNING: autodoc: failed to import function 'func1' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'func2' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'mod1.func1' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'mod2.func2' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'Class1' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'Class2' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'mod1.Class1' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'mod2.Class2' from module 'spam'; the following exception was raised:\nNo module named 'spam'\n/sphinx-doc__sphinx/tests/roots/test-ext-viewcode/index.rst:23: WARNING: Object named 'func1' not found in include file '/sphinx-doc__sphinx/tests/roots/test-ext-viewcode/spam/__init__.py'\nWARNING: autodoc: failed to import class 'mod3.Class3' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import module 'mod3' from module 'spam'; the following exception was raised:\nNo module named 'spam'\n/sphinx-doc__sphinx/tests/roots/test-latex-labels/index.rst:10: WARNING: image file not readable: tests/roots/test-latex-labels/logo.jpg\n/sphinx-doc__sphinx/tests/roots/test-latex-labels/index.rst:14: WARNING: image file not readable: tests/roots/test-latex-labels/logo.jpg\n/sphinx-doc__sphinx/tests/roots/test-latex-title/index.rst:8: WARNING: toctree contains reference to nonexisting document 'tests/roots/test-latex-title/foo'\n/sphinx-doc__sphinx/tests/roots/test-latex-title/index.rst:8: WARNING: toctree contains reference to nonexisting document 'tests/roots/test-latex-title/bar'\n/sphinx-doc__sphinx/tests/roots/test-prolog/index.rst:4: WARNING: toctree contains reference to nonexisting document 'tests/roots/test-prolog/markdown'\n/sphinx-doc__sphinx/tests/roots/test-roles-download/index.rst:6: WARNING: download file not readable: /sphinx-doc__sphinx/tests/roots/test-roles-download/not_found.dat\nWARNING: autodoc: failed to import module 'autodoc_fodder'; the following exception was raised:\nNo module named 'autodoc_fodder'\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:19: WARNING: Encoding 'utf-8-sig' used for reading included file '/sphinx-doc__sphinx/tests/roots/test-warnings/wrongenc.inc' seems to be wrong, try giving an :encoding: option\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:27: WARNING: invalid single index entry ''\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:10: WARNING: image file not readable: tests/roots/test-warnings/foo.png\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:24: WARNING: download file not readable: /sphinx-doc__sphinx/tests/roots/test-warnings/nonexisting.png\n/sphinx-doc__sphinx/tests/roots/test-numbered-circular/sub.rst:1: WARNING: tests/roots/test-numbered-circular/index is already assigned section numbers (nested numbered toctree?)\n/sphinx-doc__sphinx/tests/roots/test-toctree-maxdepth/qux.rst:4: WARNING: tests/roots/test-toctree-maxdepth/foo is already assigned section numbers (nested numbered toctree?)\n/sphinx-doc__sphinx/tests/roots/test-toctree-maxdepth/qux.rst:4: WARNING: tests/roots/test-toctree-maxdepth/bar is already assigned section numbers (nested numbered toctree?)\n/sphinx-doc__sphinx/CONTRIBUTING.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/README.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/doc/contents.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/sphinx/ext/autosummary/templates/autosummary/base.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/sphinx/ext/autosummary/templates/autosummary/class.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/sphinx/ext/autosummary/templates/autosummary/module.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-add_enumerable_node/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-api-set-translator/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-autosummary/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-autosummary/sphinx.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-basic/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-build-html-translator/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-builder-dirhtml/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-builder-gettext-dont-rebuild-mo/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-changes/contents.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-correct-year/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-default_role/foo.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-default_role/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-directive-code/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-directive-only/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-directives-raw/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-docutilsconf/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-c/anon-dup-decl.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-c/function_param_target.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-c/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-c/namespace.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-c/semicolon.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/anon-dup-decl.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/any-role.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/backslash.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/lookup-key-overload.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/multi-decl-lookup.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/roles.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/roles-targets-ok.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/roles-targets-warn.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/roles2.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/semicolon.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/warn-template-param-qualified-name.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/xref_consistency.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-js/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-py/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-py/module_option.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-double-inheriting-theme/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-epub-anchor-id/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autodoc/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosectionlabel-prefix-document/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosectionlabel/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-filename-map/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-imported_members/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-mock_imports/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-recursive/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-skip-member/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-template/_templates/empty.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-template/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-coverage/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-doctest-with-autodoc/dir/inner.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-doctest-with-autodoc/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-githubpages/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-graphviz/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-ifconfig/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-imgconverter/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-inheritance_diagram/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-intersphinx-cppdomain/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-math-compat/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-math-simple/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-math/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-todo/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-viewcode-find/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-viewcode/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-footnotes/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-gettext-template/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-glossary/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_assets/extra/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_assets/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_assets/static/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_entity/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_scaled_image_link/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_style/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-image-in-parsed-literal/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-image-in-section/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-images/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-images/subdir/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-index_on_title/contents.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-inheritance/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-keep_warnings/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-babel/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-equations/equations.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-figure-in-admonition/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-includegraphics/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-index/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-labels/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-numfig/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-table/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-theme/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-title/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-unicode/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-linkcheck-localserver/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-manpage_url/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-markup-citation/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-markup-rubric/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-maxlistdepth/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-metadata/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-need-escaped/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-nested-enumerated-list/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-nested-tables/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-numfig/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-productionlist/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-prolog/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-pycode-egg/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-reST-code-block/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-refonly_bullet_list/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-roles-download/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-search/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-search/nosearch.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-smartquotes/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-stylesheets/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-templating/_templates/autosummary/class.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-theming/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-tocdepth/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-duplicated/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-empty/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-glob/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-glob/quux.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-maxdepth/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-maxdepth/qux.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree/qux.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree/tocdepth.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-trim_doctest_flags/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/doc/usage/index.rst:5: WARNING: unknown document: /development/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:5: WARNING: unknown document: /usage/restructuredtext/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:5: WARNING: unknown document: /usage/markdown\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:12: WARNING: unknown document: /usage/restructuredtext/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:12: WARNING: unknown document: /development/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:18: WARNING: unknown document: /usage/installation\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:18: WARNING: unknown document: /usage/restructuredtext/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:121: WARNING: unknown document: /usage/restructuredtext/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:140: WARNING: unknown document: /man/sphinx-build\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:223: WARNING: unknown document: /usage/restructuredtext/domains\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:248: WARNING: unknown document: /usage/configuration\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:332: WARNING: unknown document: /usage/extensions/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:334: WARNING: unknown document: /usage/theming\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:335: WARNING: unknown document: /usage/advanced/setuptools\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:343: WARNING: unknown document: /man/sphinx-build\n/sphinx-doc__sphinx/doc/usage/theming.rst:23: WARNING: unknown document: /development/theming\n/sphinx-doc__sphinx/doc/usage/theming.rst:83: WARNING: unknown document: /development/theming\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:41: WARNING: unknown option: &option\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:45: WARNING: citation not found: missing\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:13: WARNING: a suitable image for html builder not found: tests/roots/test-warnings/foo.*\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:33: WARNING: Could not lex literal_block as \"c\". Highlighting skipped.\n\n(Open file: /sphinx-doc__sphinx/example.py)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "The Sphinx build process completed with several warnings, but it did not fail. To verify if the `autodoc_typehints` setting is respected for overloaded callables, we need to check the generated HTML documentation.\n\nLet's open the generated HTML file for the `example` module to see if the type hints are displayed correctly.\n\n```\nopen _build/index.html\n```",
      "thought": "The Sphinx build process completed with several warnings, but it did not fail. To verify if the `autodoc_typehints` setting is respected for overloaded callables, we need to check the generated HTML documentation.\n\nLet's open the generated HTML file for the `example` module to see if the type hints are displayed correctly.\n\n",
      "action": "open _build/index.html\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "[File: /sphinx-doc__sphinx/_build/index.html (100 lines total)]\n1:\n2:<!DOCTYPE html>\n3:\n4:<html>\n5:  <head>\n6:    <meta charset=\"utf-8\" />\n7:    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n8:\n9:    <title>Welcome to Example Project\u2019s documentation! &#8212; Example Project  documentation</title>\n10:    <link rel=\"stylesheet\" href=\"_static/pygments.css\" type=\"text/css\" />\n11:    <link rel=\"stylesheet\" href=\"_static/alabaster.css\" type=\"text/css\" />\n12:    <script id=\"documentation_options\" data-url_root=\"./\" src=\"_static/documentation_options.js\"></script>\n13:    <script src=\"_static/jquery.js\"></script>\n14:    <script src=\"_static/underscore.js\"></script>\n15:    <script src=\"_static/doctools.js\"></script>\n16:    <script src=\"_static/language_data.js\"></script>\n17:    <script async=\"async\" src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/latest.js?config=TeX-AMS-MML_HTMLorMML\"></script>\n18:    <link rel=\"index\" title=\"Index\" href=\"genindex.html\" />\n19:    <link rel=\"search\" title=\"Search\" href=\"search.html\" />\n20:   \n21:  <link rel=\"stylesheet\" href=\"_static/custom.css\" type=\"text/css\" />\n22:  \n23:  \n24:  <meta name=\"viewport\" content=\"width=device-width, initial-scale=0.9, maximum-scale=0.9\" />\n25:\n26:  </head><body>\n27:  \n28:\n29:    <div class=\"document\">\n30:      <div class=\"documentwrapper\">\n31:        <div class=\"bodywrapper\">\n32:          \n33:\n34:          <div class=\"body\" role=\"main\">\n35:            \n36:  <section id=\"module-example\">\n37:<span id=\"welcome-to-example-project-s-documentation\"></span><h1>Welcome to Example Project\u2019s documentation!<a class=\"headerlink\" href=\"#module-example\" title=\"Permalink to this headline\">\u00b6</a></h1>\n38:<dl class=\"py function\">\n39:<dt id=\"example.foo\">\n40:<code class=\"sig-prename descclassname\">example.</code><code class=\"sig-name descname\">foo</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#example.foo\" title=\"Permalink to this definition\">\u00b6</a></dt>\n41:<dd></dd></dl>\n42:\n43:</section>\n44:\n45:\n46:          </div>\n47:          \n48:        </div>\n49:      </div>\n50:      <div class=\"sphinxsidebar\" role=\"navigation\" aria-label=\"main navigation\">\n51:        <div class=\"sphinxsidebarwrapper\">\n52:<h1 class=\"logo\"><a href=\"#\">Example Project</a></h1>\n53:\n54:\n55:\n56:\n57:\n58:\n59:\n60:\n61:<h3>Navigation</h3>\n62:\n63:<div class=\"relations\">\n64:<h3>Related Topics</h3>\n65:<ul>\n66:  <li><a href=\"#\">Documentation overview</a><ul>\n67:  </ul></li>\n68:</ul>\n69:</div>\n70:<div id=\"searchbox\" style=\"display: none\" role=\"search\">\n71:  <h3 id=\"searchlabel\">Quick search</h3>\n72:    <div class=\"searchformwrapper\">\n73:    <form class=\"search\" action=\"search.html\" method=\"get\">\n74:      <input type=\"text\" name=\"q\" aria-labelledby=\"searchlabel\" />\n75:      <input type=\"submit\" value=\"Go\" />\n76:    </form>\n77:    </div>\n78:</div>\n79:<script>$('#searchbox').show(0);</script>\n80:        </div>\n81:      </div>\n82:      <div class=\"clearer\"></div>\n83:    </div>\n84:    <div class=\"footer\">\n85:      &copy;2023, Example Author.\n86:      \n87:      |\n88:      Powered by <a href=\"http://sphinx-doc.org/\">Sphinx 3.3.0+/2c2335bbb</a>\n89:      &amp; <a href=\"https://github.com/bitprophet/alabaster\">Alabaster 0.7.11</a>\n90:      \n91:      |\n92:      <a href=\"_sources/index.rst.txt\"\n93:          rel=\"nofollow\">Page source</a>\n94:    </div>\n95:\n96:    \n97:\n98:    \n99:  </body>\n100:</html>\n\n(Open file: /sphinx-doc__sphinx/_build/index.html)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "The generated HTML file does not show the type hints for the overloaded `foo` function, which means the `autodoc_typehints` setting is not being respected for overloaded callables.\n\nLet's investigate further by checking the `FunctionDocumenter` class in the `sphinx/ext/autodoc/__init__.py` file to ensure that the `autodoc_typehints` setting is applied correctly for overloaded callables.\n\n```\nsearch_file \"class FunctionDocumenter\" sphinx/ext/autodoc/__init__.py\n```",
      "thought": "The generated HTML file does not show the type hints for the overloaded `foo` function, which means the `autodoc_typehints` setting is not being respected for overloaded callables.\n\nLet's investigate further by checking the `FunctionDocumenter` class in the `sphinx/ext/autodoc/__init__.py` file to ensure that the `autodoc_typehints` setting is applied correctly for overloaded callables.\n\n",
      "action": "search_file \"class FunctionDocumenter\" sphinx/ext/autodoc/__init__.py\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "Found 1 matches for \"class FunctionDocumenter\" in /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py:\nLine 1196:class FunctionDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type: ignore\nEnd of matches for \"class FunctionDocumenter\" in /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py\n\n(Open file: /sphinx-doc__sphinx/_build/index.html)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "The `FunctionDocumenter` class is defined at line 1196 in the `sphinx/ext/autodoc/__init__.py` file. Let's navigate to that line to examine the class and its methods.\n\n```\ngoto 1196\n```",
      "thought": "The `FunctionDocumenter` class is defined at line 1196 in the `sphinx/ext/autodoc/__init__.py` file. Let's navigate to that line to examine the class and its methods.\n\n",
      "action": "goto 1196\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "Error: <line> must be less than or equal to 100\n\n(Open file: /sphinx-doc__sphinx/_build/index.html)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "Let's open the `sphinx/ext/autodoc/__init__.py` file and navigate to line 1196 to examine the `FunctionDocumenter` class.\n\n```\nopen sphinx/ext/autodoc/__init__.py 1196\n```",
      "thought": "Let's open the `sphinx/ext/autodoc/__init__.py` file and navigate to line 1196 to examine the `FunctionDocumenter` class.\n\n",
      "action": "open sphinx/ext/autodoc/__init__.py 1196\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "[File: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py (2284 lines total)]\n(1180 more lines above)\n1181:    feature of stripping any function signature from the docstring.\n1182:    \"\"\"\n1183:    def format_signature(self, **kwargs: Any) -> str:\n1184:        if self.args is None and self.env.config.autodoc_docstring_signature:  # type: ignore\n1185:            # only act if a signature is not explicitly given already, and if\n1186:            # the feature is enabled\n1187:            result = self._find_signature()\n1188:            if result is not None:\n1189:                # Discarding _args is a only difference with\n1190:                # DocstringSignatureMixin.format_signature.\n1191:                # Documenter.format_signature use self.args value to format.\n1192:                _args, self.retann = result\n1193:        return super().format_signature(**kwargs)\n1194:\n1195:\n1196:class FunctionDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type: ignore\n1197:    \"\"\"\n1198:    Specialized Documenter subclass for functions.\n1199:    \"\"\"\n1200:    objtype = 'function'\n1201:    member_order = 30\n1202:\n1203:    @classmethod\n1204:    def can_document_member(cls, member: Any, membername: str, isattr: bool, parent: Any\n1205:                            ) -> bool:\n1206:        # supports functions, builtins and bound methods exported at the module level\n1207:        return (inspect.isfunction(member) or inspect.isbuiltin(member) or\n1208:                (inspect.isroutine(member) and isinstance(parent, ModuleDocumenter)))\n1209:\n1210:    def format_args(self, **kwargs: Any) -> str:\n1211:        if self.env.config.autodoc_typehints in ('none', 'description'):\n1212:            kwargs.setdefault('show_annotation', False)\n1213:\n1214:        try:\n1215:            self.env.app.emit('autodoc-before-process-signature', self.object, False)\n1216:            sig = inspect.signature(self.object, follow_wrapped=True,\n1217:                                    type_aliases=self.env.config.autodoc_type_aliases)\n1218:            args = stringify_signature(sig, **kwargs)\n1219:        except TypeError as exc:\n1220:            logger.warning(__(\"Failed to get a function signature for %s: %s\"),\n1221:                           self.fullname, exc)\n1222:            return None\n1223:        except ValueError:\n1224:            args = ''\n1225:\n1226:        if self.env.config.strip_signature_backslash:\n1227:            # escape backslashes for reST\n1228:            args = args.replace('\\\\', '\\\\\\\\')\n1229:        return args\n1230:\n1231:    def document_members(self, all_members: bool = False) -> None:\n1232:        pass\n1233:\n1234:    def add_directive_header(self, sig: str) -> None:\n1235:        sourcename = self.get_sourcename()\n1236:        super().add_directive_header(sig)\n1237:\n1238:        if inspect.iscoroutinefunction(self.object):\n1239:            self.add_line('   :async:', sourcename)\n1240:\n1241:    def format_signature(self, **kwargs: Any) -> str:\n1242:        sigs = []\n1243:        if self.analyzer and '.'.join(self.objpath) in self.analyzer.overloads:\n1244:            # Use signatures for overloaded functions instead of the implementation function.\n1245:            overloaded = True\n1246:        else:\n1247:            overloaded = False\n1248:            sig = super().format_signature(**kwargs)\n1249:            sigs.append(sig)\n1250:\n1251:        if inspect.is_singledispatch_function(self.object):\n1252:            # append signature of singledispatch'ed functions\n1253:            for typ, func in self.object.registry.items():\n1254:                if typ is object:\n1255:                    pass  # default implementation. skipped.\n1256:                else:\n1257:                    self.annotate_to_first_argument(func, typ)\n1258:\n1259:                    documenter = FunctionDocumenter(self.directive, '')\n1260:                    documenter.object = func\n1261:                    documenter.objpath = [None]\n1262:                    sigs.append(documenter.format_signature())\n1263:        if overloaded:\n1264:            __globals__ = safe_getattr(self.object, '__globals__', {})\n1265:            for overload in self.analyzer.overloads.get('.'.join(self.objpath)):\n1266:                overload = evaluate_signature(overload, __globals__,\n1267:                                              self.env.config.autodoc_type_aliases)\n1268:\n1269:                if self.env.config.autodoc_typehints in ('none', 'description'):\n1270:                    kwargs.setdefault('show_annotation', False)\n1271:                sig = stringify_signature(overload, **kwargs)\n1272:\n1273:        return \"\\n\".join(sigs)\n1274:\n1275:    def annotate_to_first_argument(self, func: Callable, typ: Type) -> None:\n1276:        \"\"\"Annotate type hint to the first argument of function if needed.\"\"\"\n1277:        try:\n1278:            sig = inspect.signature(func, type_aliases=self.env.config.autodoc_type_aliases)\n1279:        except TypeError as exc:\n1280:            logger.warning(__(\"Failed to get a function signature for %s: %s\"),\n(1004 more lines below)\n\n(Open file: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "The `FunctionDocumenter` class has a `format_signature` method that handles the formatting of function signatures, including overloaded functions. The `autodoc_typehints` setting is checked within this method.\n\nTo ensure that the `autodoc_typehints` setting is respected for overloaded callables, we need to make sure that the `show_annotation` flag is set correctly when formatting the signatures of overloaded functions.\n\nLet's edit the `format_signature` method to ensure that the `show_annotation` flag is set based on the `autodoc_typehints` setting for overloaded callables.\n\n```\nedit 1269:1272\n                if self.env.config.autodoc_typehints in ('none', 'description'):\n                    kwargs.setdefault('show_annotation', False)\n                sig = stringify_signature(overload, **kwargs)\n                sigs.append(sig)\nend_of_edit\n```",
      "thought": "The `FunctionDocumenter` class has a `format_signature` method that handles the formatting of function signatures, including overloaded functions. The `autodoc_typehints` setting is checked within this method.\n\nTo ensure that the `autodoc_typehints` setting is respected for overloaded callables, we need to make sure that the `show_annotation` flag is set correctly when formatting the signatures of overloaded functions.\n\nLet's edit the `format_signature` method to ensure that the `show_annotation` flag is set based on the `autodoc_typehints` setting for overloaded callables.\n\n",
      "action": "edit 1269:1272\n                if self.env.config.autodoc_typehints in ('none', 'description'):\n                    kwargs.setdefault('show_annotation', False)\n                sig = stringify_signature(overload, **kwargs)\n                sigs.append(sig)\nend_of_edit\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "[File: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py (2284 lines total)]\n(1218 more lines above)\n1219:        except TypeError as exc:\n1220:            logger.warning(__(\"Failed to get a function signature for %s: %s\"),\n1221:                           self.fullname, exc)\n1222:            return None\n1223:        except ValueError:\n1224:            args = ''\n1225:\n1226:        if self.env.config.strip_signature_backslash:\n1227:            # escape backslashes for reST\n1228:            args = args.replace('\\\\', '\\\\\\\\')\n1229:        return args\n1230:\n1231:    def document_members(self, all_members: bool = False) -> None:\n1232:        pass\n1233:\n1234:    def add_directive_header(self, sig: str) -> None:\n1235:        sourcename = self.get_sourcename()\n1236:        super().add_directive_header(sig)\n1237:\n1238:        if inspect.iscoroutinefunction(self.object):\n1239:            self.add_line('   :async:', sourcename)\n1240:\n1241:    def format_signature(self, **kwargs: Any) -> str:\n1242:        sigs = []\n1243:        if self.analyzer and '.'.join(self.objpath) in self.analyzer.overloads:\n1244:            # Use signatures for overloaded functions instead of the implementation function.\n1245:            overloaded = True\n1246:        else:\n1247:            overloaded = False\n1248:            sig = super().format_signature(**kwargs)\n1249:            sigs.append(sig)\n1250:\n1251:        if inspect.is_singledispatch_function(self.object):\n1252:            # append signature of singledispatch'ed functions\n1253:            for typ, func in self.object.registry.items():\n1254:                if typ is object:\n1255:                    pass  # default implementation. skipped.\n1256:                else:\n1257:                    self.annotate_to_first_argument(func, typ)\n1258:\n1259:                    documenter = FunctionDocumenter(self.directive, '')\n1260:                    documenter.object = func\n1261:                    documenter.objpath = [None]\n1262:                    sigs.append(documenter.format_signature())\n1263:        if overloaded:\n1264:            __globals__ = safe_getattr(self.object, '__globals__', {})\n1265:            for overload in self.analyzer.overloads.get('.'.join(self.objpath)):\n1266:                overload = evaluate_signature(overload, __globals__,\n1267:                                              self.env.config.autodoc_type_aliases)\n1268:\n1269:                if self.env.config.autodoc_typehints in ('none', 'description'):\n1270:                    kwargs.setdefault('show_annotation', False)\n1271:                sig = stringify_signature(overload, **kwargs)\n1272:                sigs.append(sig)\n1273:        return \"\\n\".join(sigs)\n1274:\n1275:    def annotate_to_first_argument(self, func: Callable, typ: Type) -> None:\n1276:        \"\"\"Annotate type hint to the first argument of function if needed.\"\"\"\n1277:        try:\n1278:            sig = inspect.signature(func, type_aliases=self.env.config.autodoc_type_aliases)\n1279:        except TypeError as exc:\n1280:            logger.warning(__(\"Failed to get a function signature for %s: %s\"),\n1281:                           self.fullname, exc)\n1282:            return\n1283:        except ValueError:\n1284:            return\n1285:\n1286:        if len(sig.parameters) == 0:\n1287:            return\n1288:\n1289:        params = list(sig.parameters.values())\n1290:        if params[0].annotation is Parameter.empty:\n1291:            params[0] = params[0].replace(annotation=typ)\n1292:            try:\n1293:                func.__signature__ = sig.replace(parameters=params)  # type: ignore\n1294:            except TypeError:\n1295:                # failed to update signature (ex. built-in or extension types)\n1296:                return\n1297:\n1298:\n1299:class SingledispatchFunctionDocumenter(FunctionDocumenter):\n1300:    \"\"\"\n1301:    Used to be a specialized Documenter subclass for singledispatch'ed functions.\n1302:\n1303:    Retained for backwards compatibility, now does the same as the FunctionDocumenter\n1304:    \"\"\"\n1305:\n1306:    def __init__(self, *args: Any, **kwargs: Any) -> None:\n1307:        warnings.warn(\"%s is deprecated.\" % self.__class__.__name__,\n1308:                      RemovedInSphinx50Warning, stacklevel=2)\n1309:        super().__init__(*args, **kwargs)\n1310:\n1311:\n1312:class DecoratorDocumenter(FunctionDocumenter):\n1313:    \"\"\"\n1314:    Specialized Documenter subclass for decorator functions.\n1315:    \"\"\"\n1316:    objtype = 'decorator'\n1317:\n1318:    # must be lower than FunctionDocumenter\n(966 more lines below)\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.\n\n(Open file: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "The code has been updated to ensure that the `autodoc_typehints` setting is respected for overloaded callables. Now, let's run Sphinx to generate the documentation again and verify if the changes work as expected.\n\n```\nsphinx-build -b html . _build -q\n```",
      "thought": "The code has been updated to ensure that the `autodoc_typehints` setting is respected for overloaded callables. Now, let's run Sphinx to generate the documentation again and verify if the changes work as expected.\n\n",
      "action": "sphinx-build -b html . _build -q\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "WARNING: while setting up extension sphinx.addnodes: node class 'meta' is already registered, its visitors will be overridden\nWARNING: autodoc: failed to import method 'websupport.WebSupport.build' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.WebSupport.get_document' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.WebSupport.get_data' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.WebSupport.add_comment' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.WebSupport.process_vote' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.WebSupport.get_search_results' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.init_indexing' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.finish_indexing' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.feed' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.add_document' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.query' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.handle_query' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.search.BaseSearch.extract_context' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.pre_build' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.add_node' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.post_build' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.add_comment' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.delete_comment' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.get_data' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.process_vote' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.update_username' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\nWARNING: autodoc: failed to import method 'websupport.storage.StorageBackend.accept_comment' from module 'sphinxcontrib'; the following exception was raised:\nNo module named 'sphinxcontrib.websupport'\n/sphinx-doc__sphinx/doc/usage/configuration.rst:64: WARNING: Unknown directive type \"confval\".\n\n.. confval:: project\n\n   The documented project's name.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:68: WARNING: Unknown directive type \"confval\".\n\n.. confval:: author\n\n   The author name(s) of the document.  The default value is ``'unknown'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:72: WARNING: Unknown directive type \"confval\".\n\n.. confval:: copyright\n\n   A copyright statement in the style ``'2008, Author Name'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:76: WARNING: Unknown directive type \"confval\".\n\n.. confval:: version\n\n   The major project version, used as the replacement for ``|version|``.  For\n   example, for the Python documentation, this may be something like ``2.6``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:81: WARNING: Unknown directive type \"confval\".\n\n.. confval:: release\n\n   The full project version, used as the replacement for ``|release|`` and\n   e.g. in the HTML templates.  For example, for the Python documentation, this\n   may be something like ``2.6.0rc1``.\n\n   If you don't need the separation provided between :confval:`version` and\n   :confval:`release`, just set them both to the same value.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:94: WARNING: Unknown directive type \"confval\".\n\n.. confval:: extensions\n\n   A list of strings that are module names of :doc:`extensions\n   <extensions/index>`. These can be extensions coming with Sphinx (named\n   ``sphinx.ext.*``) or custom ones.\n\n   Note that you can extend :data:`sys.path` within the conf file if your\n   extensions live in another directory -- but make sure you use absolute paths.\n   If your extension path is relative to the :term:`configuration directory`,\n   use :func:`os.path.abspath` like so::\n\n      import sys, os\n\n      sys.path.append(os.path.abspath('sphinxext'))\n\n      extensions = ['extname']\n\n   That way, you can load an extension called ``extname`` from the subdirectory\n   ``sphinxext``.\n\n   The configuration file itself can be an extension; for that, you only need\n   to provide a :func:`setup` function in it.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:117: WARNING: Unknown directive type \"confval\".\n\n.. confval:: source_suffix\n\n   The file extensions of source files.  Sphinx considers the files with this\n   suffix as sources.  The value can be a dictionary mapping file extensions\n   to file types.  For example::\n\n      source_suffix = {\n          '.rst': 'restructuredtext',\n          '.txt': 'restructuredtext',\n          '.md': 'markdown',\n      }\n\n   By default, Sphinx only supports ``'restructuredtext'`` file type.  You can\n   add a new file type using source parser extensions.  Please read a document\n   of the extension to know which file type the extension supports.\n\n   The value may also be a list of file extensions: then Sphinx will consider\n   that they all map to the ``'restructuredtext'`` file type.\n\n   Default is ``{'.rst': 'restructuredtext'}``.\n\n   .. note:: file extensions have to start with a dot (e.g. ``.rst``).\n\n   .. versionchanged:: 1.3\n      Can now be a list of extensions.\n\n   .. versionchanged:: 1.8\n      Support file type mapping\n/sphinx-doc__sphinx/doc/usage/configuration.rst:146: WARNING: Unknown directive type \"confval\".\n\n.. confval:: source_encoding\n\n   The encoding of all reST source files.  The recommended encoding, and the\n   default value, is ``'utf-8-sig'``.\n\n   .. versionadded:: 0.5\n      Previously, Sphinx accepted only UTF-8 encoded sources.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:154: WARNING: Unknown directive type \"confval\".\n\n.. confval:: source_parsers\n\n   If given, a dictionary of parser classes for different source suffices.  The\n   keys are the suffix, the values can be either a class or a string giving a\n   fully-qualified name of a parser class.  The parser class can be either\n   ``docutils.parsers.Parser`` or :class:`sphinx.parsers.Parser`.  Files with a\n   suffix that is not in the dictionary will be parsed with the default\n   reStructuredText parser.\n\n   For example::\n\n      source_parsers = {'.md': 'recommonmark.parser.CommonMarkParser'}\n\n   .. note::\n\n      Refer to :doc:`/usage/markdown` for more information on using Markdown\n      with Sphinx.\n\n   .. versionadded:: 1.3\n\n   .. deprecated:: 1.8\n      Now Sphinx provides an API :meth:`.Sphinx.add_source_parser` to register\n      a source parser.  Please use it instead.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:178: WARNING: Unknown directive type \"confval\".\n\n.. confval:: master_doc\n\n   The document name of the \"master\" document, that is, the document that\n   contains the root :rst:dir:`toctree` directive.  Default is ``'index'``.\n\n   .. versionchanged:: 2.0\n      The default is changed to ``'index'`` from ``'contents'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:186: WARNING: Unknown directive type \"confval\".\n\n.. confval:: exclude_patterns\n\n   A list of glob-style patterns that should be excluded when looking for\n   source files. [1]_ They are matched against the source file names relative\n   to the source directory, using slashes as directory separators on all\n   platforms.\n\n   Example patterns:\n\n   - ``'library/xml.rst'`` -- ignores the ``library/xml.rst`` file (replaces\n     entry in :confval:`unused_docs`)\n   - ``'library/xml'`` -- ignores the ``library/xml`` directory\n   - ``'library/xml*'`` -- ignores all files and directories starting with\n     ``library/xml``\n   - ``'**/.svn'`` -- ignores all ``.svn`` directories\n\n   :confval:`exclude_patterns` is also consulted when looking for static files\n   in :confval:`html_static_path` and :confval:`html_extra_path`.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:207: WARNING: Unknown directive type \"confval\".\n\n.. confval:: templates_path\n\n   A list of paths that contain extra templates (or templates that overwrite\n   builtin/theme-specific templates).  Relative paths are taken as relative to\n   the configuration directory.\n\n   .. versionchanged:: 1.3\n      As these files are not meant to be built, they are automatically added to\n      :confval:`exclude_patterns`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:217: WARNING: Unknown directive type \"confval\".\n\n.. confval:: template_bridge\n\n   A string with the fully-qualified name of a callable (or simply a class)\n   that returns an instance of :class:`~sphinx.application.TemplateBridge`.\n   This instance is then used to render HTML documents, and possibly the output\n   of other builders (currently the changes builder).  (Note that the template\n   bridge must be made theme-aware if HTML themes are to be used.)\n/sphinx-doc__sphinx/doc/usage/configuration.rst:225: WARNING: Unknown directive type \"confval\".\n\n.. confval:: rst_epilog\n\n   .. index:: pair: global; substitutions\n\n   A string of reStructuredText that will be included at the end of every source\n   file that is read.  This is a possible place to add substitutions that should\n   be available in every file (another being :confval:`rst_prolog`).  An\n   example::\n\n      rst_epilog = \"\"\"\n      .. |psf| replace:: Python Software Foundation\n      \"\"\"\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:240: WARNING: Unknown directive type \"confval\".\n\n.. confval:: rst_prolog\n\n   .. index:: pair: global; substitutions\n\n   A string of reStructuredText that will be included at the beginning of every\n   source file that is read.  This is a possible place to add substitutions that\n   should be available in every file (another being :confval:`rst_epilog`).  An\n   example::\n\n      rst_prolog = \"\"\"\n      .. |psf| replace:: Python Software Foundation\n      \"\"\"\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:255: WARNING: Unknown directive type \"confval\".\n\n.. confval:: primary_domain\n\n   .. index:: default; domain\n              primary; domain\n\n   The name of the default :doc:`domain </usage/restructuredtext/domains>`.\n   Can also be ``None`` to disable a default domain.  The default is ``'py'``.\n   Those objects in other domains (whether the domain name is given explicitly,\n   or selected by a :rst:dir:`default-domain` directive) will have the domain\n   name explicitly prepended when named (e.g., when the default domain is C,\n   Python functions will be named \"Python function\", not just \"function\").\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:269: WARNING: Unknown directive type \"confval\".\n\n.. confval:: default_role\n\n   .. index:: default; role\n\n   The name of a reST role (builtin or Sphinx extension) to use as the default\n   role, that is, for text marked up ```like this```.  This can be set to\n   ``'py:obj'`` to make ```filter``` a cross-reference to the Python function\n   \"filter\".  The default is ``None``, which doesn't reassign the default role.\n\n   The default role can always be set within individual documents using the\n   standard reST :rst:dir:`default-role` directive.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:283: WARNING: Unknown directive type \"confval\".\n\n.. confval:: keep_warnings\n\n   If true, keep warnings as \"system message\" paragraphs in the built\n   documents.  Regardless of this setting, warnings are always written to the\n   standard error stream when ``sphinx-build`` is run.\n\n   The default is ``False``, the pre-0.5 behavior was to always keep them.\n\n   .. versionadded:: 0.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:293: WARNING: Unknown directive type \"confval\".\n\n.. confval:: suppress_warnings\n\n   A list of warning types to suppress arbitrary warning messages.\n\n   Sphinx supports following warning types:\n\n   * ``app.add_node``\n   * ``app.add_directive``\n   * ``app.add_role``\n   * ``app.add_generic_role``\n   * ``app.add_source_parser``\n   * ``download.not_readable``\n   * ``image.not_readable``\n   * ``ref.term``\n   * ``ref.ref``\n   * ``ref.numref``\n   * ``ref.keyword``\n   * ``ref.option``\n   * ``ref.citation``\n   * ``ref.footnote``\n   * ``ref.doc``\n   * ``ref.python``\n   * ``misc.highlighting_failure``\n   * ``toc.circular``\n   * ``toc.secnum``\n   * ``epub.unknown_project_files``\n   * ``epub.duplicated_toc_entry``\n   * ``autosectionlabel.*``\n\n   You can choose from these types.\n\n   Now, this option should be considered *experimental*.\n\n   .. versionadded:: 1.4\n\n   .. versionchanged:: 1.5\n\n      Added ``misc.highlighting_failure``\n\n   .. versionchanged:: 1.5.1\n\n      Added ``epub.unknown_project_files``\n\n   .. versionchanged:: 1.6\n\n      Added ``ref.footnote``\n\n   .. versionchanged:: 2.1\n\n      Added ``autosectionlabel.*``\n\n   .. versionchanged:: 3.3.0\n\n      Added ``epub.duplicated_toc_entry``\n/sphinx-doc__sphinx/doc/usage/configuration.rst:348: WARNING: Unknown directive type \"confval\".\n\n.. confval:: needs_sphinx\n\n   If set to a ``major.minor`` version string like ``'1.1'``, Sphinx will\n   compare it with its version and refuse to build if it is too old.  Default\n   is no requirement.\n\n   .. versionadded:: 1.0\n\n   .. versionchanged:: 1.4\n      also accepts micro version string\n/sphinx-doc__sphinx/doc/usage/configuration.rst:359: WARNING: Unknown directive type \"confval\".\n\n.. confval:: needs_extensions\n\n   This value can be a dictionary specifying version requirements for\n   extensions in :confval:`extensions`, e.g. ``needs_extensions =\n   {'sphinxcontrib.something': '1.5'}``.  The version strings should be in the\n   form ``major.minor``.  Requirements do not have to be specified for all\n   extensions, only for those you want to check.\n\n   This requires that the extension specifies its version to Sphinx (see\n   :ref:`dev-extensions` for how to do that).\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:372: WARNING: Unknown directive type \"confval\".\n\n.. confval:: manpages_url\n\n   A URL to cross-reference :rst:role:`manpage` directives. If this is\n   defined to ``https://manpages.debian.org/{path}``, the\n   :literal:`:manpage:`man(1)`` role will link to\n   <https://manpages.debian.org/man(1)>. The patterns available are:\n\n     * ``page`` - the manual page (``man``)\n     * ``section`` - the manual section (``1``)\n     * ``path`` - the original manual page and section specified (``man(1)``)\n\n   This also supports manpages specified as ``man.1``.\n\n   .. note:: This currently affects only HTML writers but could be\n             expanded in the future.\n\n   .. versionadded:: 1.7\n/sphinx-doc__sphinx/doc/usage/configuration.rst:390: WARNING: Unknown directive type \"confval\".\n\n.. confval:: nitpicky\n\n   If true, Sphinx will warn about *all* references where the target cannot be\n   found.  Default is ``False``.  You can activate this mode temporarily using\n   the :option:`-n <sphinx-build -n>` command-line switch.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:398: WARNING: Unknown directive type \"confval\".\n\n.. confval:: nitpick_ignore\n\n   A list of ``(type, target)`` tuples (by default empty) that should be\n   ignored when generating warnings in \"nitpicky mode\".  Note that ``type``\n   should include the domain name if present.  Example entries would be\n   ``('py:func', 'int')`` or ``('envvar', 'LD_LIBRARY_PATH')``.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:407: WARNING: Unknown directive type \"confval\".\n\n.. confval:: numfig\n\n   If true, figures, tables and code-blocks are automatically numbered if they\n   have a caption.  The :rst:role:`numref` role is enabled.\n   Obeyed so far only by HTML and LaTeX builders. Default is ``False``.\n\n   .. note::\n\n      The LaTeX builder always assigns numbers whether this option is enabled\n      or not.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:420: WARNING: Unknown directive type \"confval\".\n\n.. confval:: numfig_format\n\n   A dictionary mapping ``'figure'``, ``'table'``, ``'code-block'`` and\n   ``'section'`` to strings that are used for format of figure numbers.\n   As a special character, ``%s`` will be replaced to figure number.\n\n   Default is to use ``'Fig. %s'`` for ``'figure'``, ``'Table %s'`` for\n   ``'table'``, ``'Listing %s'`` for ``'code-block'`` and ``'Section'`` for\n   ``'section'``.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:432: WARNING: Unknown directive type \"confval\".\n\n.. confval:: numfig_secnum_depth\n\n   - if set to ``0``, figures, tables and code-blocks are continuously numbered\n     starting at ``1``.\n   - if ``1`` (default) numbers will be ``x.1``, ``x.2``, ... with ``x``\n     the section number (top level sectioning; no ``x.`` if no section).\n     This naturally applies only if section numbering has been activated via\n     the ``:numbered:`` option of the :rst:dir:`toctree` directive.\n   - ``2`` means that numbers will be ``x.y.1``, ``x.y.2``, ... if located in\n     a sub-section (but still ``x.1``, ``x.2``, ... if located directly under a\n     section and ``1``, ``2``, ... if not in any top level section.)\n   - etc...\n\n   .. versionadded:: 1.3\n\n   .. versionchanged:: 1.7\n      The LaTeX builder obeys this setting (if :confval:`numfig` is set to\n      ``True``).\n/sphinx-doc__sphinx/doc/usage/configuration.rst:451: WARNING: Unknown directive type \"confval\".\n\n.. confval:: smartquotes\n\n   If true, the `Docutils Smart Quotes transform`__, originally based on\n   `SmartyPants`__ (limited to English) and currently applying to many\n   languages, will be used to convert quotes and dashes to typographically\n   correct entities.  Default: ``True``.\n\n   __ http://docutils.sourceforge.net/docs/user/smartquotes.html\n   __ https://daringfireball.net/projects/smartypants/\n\n   .. versionadded:: 1.6.6\n      It replaces deprecated :confval:`html_use_smartypants`.\n      It applies by default to all builders except ``man`` and ``text``\n      (see :confval:`smartquotes_excludes`.)\n\n   A `docutils.conf`__ file located in the configuration directory (or a\n   global :file:`~/.docutils` file) is obeyed unconditionally if it\n   *deactivates* smart quotes via the corresponding `Docutils option`__.  But\n   if it *activates* them, then :confval:`smartquotes` does prevail.\n\n   __ http://docutils.sourceforge.net/docs/user/config.html\n   __ http://docutils.sourceforge.net/docs/user/config.html#smart-quotes\n/sphinx-doc__sphinx/doc/usage/configuration.rst:474: WARNING: Unknown directive type \"confval\".\n\n.. confval:: smartquotes_action\n\n   This string, for use with Docutils ``0.14`` or later, customizes the Smart\n   Quotes transform.  See the file :file:`smartquotes.py` at the `Docutils\n   repository`__ for details.  The default ``'qDe'`` educates normal **q**\\\n   uote characters ``\"``, ``'``, em- and en-**D**\\ ashes ``---``, ``--``, and\n   **e**\\ llipses ``...``.\n\n   .. versionadded:: 1.6.6\n\n   __ https://sourceforge.net/p/docutils/code/HEAD/tree/trunk/docutils/\n/sphinx-doc__sphinx/doc/usage/configuration.rst:486: WARNING: Unknown directive type \"confval\".\n\n.. confval:: smartquotes_excludes\n\n   This is a ``dict`` whose default is::\n\n     {'languages': ['ja'], 'builders': ['man', 'text']}\n\n   Each entry gives a sufficient condition to ignore the\n   :confval:`smartquotes` setting and deactivate the Smart Quotes transform.\n   Accepted keys are as above ``'builders'`` or ``'languages'``.\n   The values are lists.\n\n   .. note:: Currently, in case of invocation of :program:`make` with multiple\n      targets, the first target name is the only one which is tested against\n      the ``'builders'`` entry and it decides for all.  Also, a ``make text``\n      following ``make html`` needs to be issued in the form ``make text\n      O=\"-E\"`` to force re-parsing of source files, as the cached ones are\n      already transformed.  On the other hand the issue does not arise with\n      direct usage of :program:`sphinx-build` as it caches\n      (in its default usage) the parsed source files in per builder locations.\n\n   .. hint:: An alternative way to effectively deactivate (or customize) the\n      smart quotes for a given builder, for example ``latex``, is to use\n      ``make`` this way:\n\n      .. code-block:: console\n\n         make latex O=\"-D smartquotes_action=\"\n\n      This can follow some ``make html`` with no problem, in contrast to the\n      situation from the prior note.  It requires Docutils 0.14 or later.\n\n   .. versionadded:: 1.6.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:519: WARNING: Unknown directive type \"confval\".\n\n.. confval:: user_agent\n\n   A User-Agent of Sphinx.  It is used for a header on HTTP access (ex.\n   linkcheck, intersphinx and so on).  Default is ``\"Sphinx/X.Y.Z\n   requests/X.Y.Z python/X.Y.Z\"``.\n\n   .. versionadded:: 2.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:527: WARNING: Unknown directive type \"confval\".\n\n.. confval:: tls_verify\n\n   If true, Sphinx verifies server certifications.  Default is ``True``.\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:533: WARNING: Unknown directive type \"confval\".\n\n.. confval:: tls_cacerts\n\n   A path to a certification file of CA or a path to directory which\n   contains the certificates.  This also allows a dictionary mapping\n   hostname to the path to certificate file.\n   The certificates are used to verify server certifications.\n\n   .. versionadded:: 1.5\n\n   .. tip:: Sphinx uses requests_ as a HTTP library internally.\n            Therefore, Sphinx refers a certification file on the\n            directory pointed ``REQUESTS_CA_BUNDLE`` environment\n            variable if ``tls_cacerts`` not set.\n\n            .. _requests: https://requests.readthedocs.io/en/master/\n/sphinx-doc__sphinx/doc/usage/configuration.rst:549: WARNING: Unknown directive type \"confval\".\n\n.. confval:: today\n             today_fmt\n\n   These values determine how to format the current date, used as the\n   replacement for ``|today|``.\n\n   * If you set :confval:`today` to a non-empty value, it is used.\n   * Otherwise, the current time is formatted using :func:`time.strftime` and\n     the format given in :confval:`today_fmt`.\n\n   The default is now :confval:`today` and a :confval:`today_fmt` of ``'%B %d,\n   %Y'`` (or, if translation is enabled with :confval:`language`, an equivalent\n   format for the selected locale).\n/sphinx-doc__sphinx/doc/usage/configuration.rst:563: WARNING: Unknown directive type \"confval\".\n\n.. confval:: highlight_language\n\n   The default language to highlight source code in.  The default is\n   ``'python3'``.  The value should be a valid Pygments lexer name, see\n   :ref:`code-examples` for more details.\n\n   .. versionadded:: 0.5\n\n   .. versionchanged:: 1.4\n      The default is now ``'default'``. It is similar to ``'python3'``;\n      it is mostly a superset of ``'python'`` but it fallbacks to\n      ``'none'`` without warning if failed.  ``'python3'`` and other\n      languages will emit warning if failed.  If you prefer Python 2\n      only highlighting, you can set it back to ``'python'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:578: WARNING: Unknown directive type \"confval\".\n\n.. confval:: highlight_options\n\n   A dictionary of options that modify how the lexer specified by\n   :confval:`highlight_language` generates highlighted source code. These are\n   lexer-specific; for the options understood by each, see the\n   `Pygments documentation <https://pygments.org/docs/lexers>`_.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:587: WARNING: Unknown directive type \"confval\".\n\n.. confval:: pygments_style\n\n   The style name to use for Pygments highlighting of source code.  If not set,\n   either the theme's default style or ``'sphinx'`` is selected for HTML\n   output.\n\n   .. versionchanged:: 0.3\n      If the value is a fully-qualified name of a custom Pygments style class,\n      this is then used as custom style.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:597: WARNING: Unknown directive type \"confval\".\n\n.. confval:: add_function_parentheses\n\n   A boolean that decides whether parentheses are appended to function and\n   method role text (e.g. the content of ``:func:`input```) to signify that the\n   name is callable.  Default is ``True``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:603: WARNING: Unknown directive type \"confval\".\n\n.. confval:: add_module_names\n\n   A boolean that decides whether module names are prepended to all\n   :term:`object` names (for object types where a \"module\" of some kind is\n   defined), e.g. for :rst:dir:`py:function` directives.  Default is ``True``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:609: WARNING: Unknown directive type \"confval\".\n\n.. confval:: show_authors\n\n   A boolean that decides whether :rst:dir:`codeauthor` and\n   :rst:dir:`sectionauthor` directives produce any output in the built files.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:614: WARNING: Unknown directive type \"confval\".\n\n.. confval:: modindex_common_prefix\n\n   A list of prefixes that are ignored for sorting the Python module index\n   (e.g., if this is set to ``['foo.']``, then ``foo.bar`` is shown under ``B``,\n   not ``F``). This can be handy if you document a project that consists of a\n   single package.  Works only for the HTML builder currently.  Default is\n   ``[]``.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:624: WARNING: Unknown directive type \"confval\".\n\n.. confval:: trim_footnote_reference_space\n\n   Trim spaces before footnote references that are necessary for the reST\n   parser to recognize the footnote, but do not look too nice in the output.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:631: WARNING: Unknown directive type \"confval\".\n\n.. confval:: trim_doctest_flags\n\n   If true, doctest flags (comments looking like ``# doctest: FLAG, ...``) at\n   the ends of lines and ``<BLANKLINE>`` markers are removed for all code\n   blocks showing interactive Python sessions (i.e. doctests).  Default is\n   ``True``.  See the extension :mod:`~sphinx.ext.doctest` for more\n   possibilities of including doctests.\n\n   .. versionadded:: 1.0\n   .. versionchanged:: 1.1\n      Now also removes ``<BLANKLINE>``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:643: WARNING: Unknown directive type \"confval\".\n\n.. confval:: strip_signature_backslash\n\n   Default is ``False``.\n   When backslash stripping is enabled then every occurrence of ``\\\\`` in a\n   domain directive will be changed to ``\\``, even within string literals.\n   This was the behaviour before version 3.0, and setting this variable to\n   ``True`` will reinstate that behaviour.\n\n    .. versionadded:: 3.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:662: WARNING: Unknown directive type \"confval\".\n\n.. confval:: language\n\n   The code for the language the docs are written in.  Any text automatically\n   generated by Sphinx will be in that language.  Also, Sphinx will try to\n   substitute individual paragraphs from your documents with the translation\n   sets obtained from :confval:`locale_dirs`.  Sphinx will search\n   language-specific figures named by :confval:`figure_language_filename`\n   (e.g. the German version of ``myfigure.png`` will be ``myfigure.de.png``\n   by default setting) and substitute them for original figures.  In the LaTeX\n   builder, a suitable language will be selected as an option for the *Babel*\n   package.  Default is ``None``, which means that no translation will be done.\n\n   .. versionadded:: 0.5\n\n   .. versionchanged:: 1.4\n\n      Support figure substitution\n\n   Currently supported languages by Sphinx are:\n\n   * ``ar`` -- Arabic\n   * ``bg`` -- Bulgarian\n   * ``bn`` -- Bengali\n   * ``ca`` -- Catalan\n   * ``cak`` -- Kaqchikel\n   * ``cs`` -- Czech\n   * ``cy`` -- Welsh\n   * ``da`` -- Danish\n   * ``de`` -- German\n   * ``el`` -- Greek\n   * ``en`` -- English\n   * ``eo`` -- Esperanto\n   * ``es`` -- Spanish\n   * ``et`` -- Estonian\n   * ``eu`` -- Basque\n   * ``fa`` -- Iranian\n   * ``fi`` -- Finnish\n   * ``fr`` -- French\n   * ``he`` -- Hebrew\n   * ``hi`` -- Hindi\n   * ``hi_IN`` -- Hindi (India)\n   * ``hr`` -- Croatian\n   * ``hu`` -- Hungarian\n   * ``id`` -- Indonesian\n   * ``it`` -- Italian\n   * ``ja`` -- Japanese\n   * ``ko`` -- Korean\n   * ``lt`` -- Lithuanian\n   * ``lv`` -- Latvian\n   * ``mk`` -- Macedonian\n   * ``nb_NO`` -- Norwegian Bokmal\n   * ``ne`` -- Nepali\n   * ``nl`` -- Dutch\n   * ``pl`` -- Polish\n   * ``pt`` -- Portuguese\n   * ``pt_BR`` -- Brazilian Portuguese\n   * ``pt_PT`` -- European Portuguese\n   * ``ro`` -- Romanian\n   * ``ru`` -- Russian\n   * ``si`` -- Sinhala\n   * ``sk`` -- Slovak\n   * ``sl`` -- Slovenian\n   * ``sq`` -- Albanian\n   * ``sr`` -- Serbian\n   * ``sr@latin`` -- Serbian (Latin)\n   * ``sr_RS`` -- Serbian (Cyrillic)\n   * ``sv`` -- Swedish\n   * ``ta`` -- Tamil\n   * ``te`` -- Telugu\n   * ``tr`` -- Turkish\n   * ``uk_UA`` -- Ukrainian\n   * ``ur`` -- Urdu\n   * ``vi`` -- Vietnamese\n   * ``zh_CN`` -- Simplified Chinese\n   * ``zh_TW`` -- Traditional Chinese\n/sphinx-doc__sphinx/doc/usage/configuration.rst:738: WARNING: Unknown directive type \"confval\".\n\n.. confval:: locale_dirs\n\n   .. versionadded:: 0.5\n\n   Directories in which to search for additional message catalogs (see\n   :confval:`language`), relative to the source directory.  The directories on\n   this path are searched by the standard :mod:`gettext` module.\n\n   Internal messages are fetched from a text domain of ``sphinx``; so if you\n   add the directory :file:`./locale` to this setting, the message catalogs\n   (compiled from ``.po`` format using :program:`msgfmt`) must be in\n   :file:`./locale/{language}/LC_MESSAGES/sphinx.mo`.  The text domain of\n   individual documents depends on :confval:`gettext_compact`.\n\n   The default is ``['locales']``.\n\n   .. versionchanged:: 1.5\n      Use ``locales`` directory as a default value\n/sphinx-doc__sphinx/doc/usage/configuration.rst:757: WARNING: Unknown directive type \"confval\".\n\n.. confval:: gettext_compact\n\n   .. versionadded:: 1.1\n\n   If true, a document's text domain is its docname if it is a top-level\n   project file and its very base directory otherwise.\n\n   If set to string, all document's text domain is this string, making all\n   documents use single text domain.\n\n   By default, the document ``markup/code.rst`` ends up in the ``markup`` text\n   domain.  With this option set to ``False``, it is ``markup/code``.\n\n   .. versionchanged:: 3.3\n      The string value is now accepted.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:773: WARNING: Unknown directive type \"confval\".\n\n.. confval:: gettext_uuid\n\n   If true, Sphinx generates uuid information for version tracking in message\n   catalogs. It is used for:\n\n   * Add uid line for each msgids in .pot files.\n   * Calculate similarity between new msgids and previously saved old msgids.\n     This calculation takes a long time.\n\n   If you want to accelerate the calculation, you can use\n   ``python-levenshtein`` 3rd-party package written in C by using\n   :command:`pip install python-levenshtein`.\n\n   The default is ``False``.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:790: WARNING: Unknown directive type \"confval\".\n\n.. confval:: gettext_location\n\n   If true, Sphinx generates location information for messages in message\n   catalogs.\n\n   The default is ``True``.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:799: WARNING: Unknown directive type \"confval\".\n\n.. confval:: gettext_auto_build\n\n   If true, Sphinx builds mo file for each translation catalog files.\n\n   The default is ``True``.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:807: WARNING: Unknown directive type \"confval\".\n\n.. confval:: gettext_additional_targets\n\n   To specify names to enable gettext extracting and translation applying for\n   i18n additionally. You can specify below names:\n\n   :index: index terms\n   :literal-block: literal blocks (``::`` annotation and ``code-block`` directive)\n   :doctest-block: doctest block\n   :raw: raw content\n   :image: image/figure uri and alt\n\n   For example: ``gettext_additional_targets = ['literal-block', 'image']``.\n\n   The default is ``[]``.\n\n   .. versionadded:: 1.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:824: WARNING: Unknown directive type \"confval\".\n\n.. confval:: figure_language_filename\n\n   The filename format for language-specific figures.  The default value is\n   ``{root}.{language}{ext}``.  It will be expanded to\n   ``dirname/filename.en.png`` from ``.. image:: dirname/filename.png``.\n   The available format tokens are:\n\n   * ``{root}`` - the filename, including any path component, without the file\n     extension, e.g. ``dirname/filename``\n   * ``{path}`` - the directory path component of the filename, with a trailing\n     slash if non-empty, e.g. ``dirname/``\n   * ``{docpath}`` - the directory path component for the current document, with\n     a trailing slash if non-empty.\n   * ``{basename}`` - the filename without the directory path or file extension\n     components, e.g. ``filename``\n   * ``{ext}`` - the file extension, e.g. ``.png``\n   * ``{language}`` - the translation language, e.g. ``en``\n\n   For example, setting this to ``{path}{language}/{basename}{ext}`` will\n   expand to ``dirname/en/filename.png`` instead.\n\n   .. versionadded:: 1.4\n\n   .. versionchanged:: 1.5\n      Added ``{path}`` and ``{basename}`` tokens.\n\n   .. versionchanged:: 3.2\n      Added ``{docpath}`` token.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:861: WARNING: Unknown directive type \"confval\".\n\n.. confval:: math_number_all\n\n   Set this option to ``True`` if you want all displayed math to be numbered.\n   The default is ``False``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:866: WARNING: Unknown directive type \"confval\".\n\n.. confval:: math_eqref_format\n\n   A string used for formatting the labels of references to equations.\n   The ``{number}`` place-holder stands for the equation number.\n\n   Example: ``'Eq.{number}'`` gets rendered as, for example, ``Eq.10``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:873: WARNING: Unknown directive type \"confval\".\n\n.. confval:: math_numfig\n\n   If ``True``, displayed math equations are numbered across pages when\n   :confval:`numfig` is enabled.  The :confval:`numfig_secnum_depth` setting\n   is respected.  The :rst:role:`eq`, not :rst:role:`numref`, role\n   must be used to reference equation numbers.  Default is ``True``.\n\n   .. versionadded:: 1.7\n/sphinx-doc__sphinx/doc/usage/configuration.rst:891: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_theme\n\n   The \"theme\" that the HTML output should use.  See the :doc:`section about\n   theming </usage/theming>`.  The default is ``'alabaster'``.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:898: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_theme_options\n\n   A dictionary of options that influence the look and feel of the selected\n   theme.  These are theme-specific.  For the options understood by the builtin\n   themes, see :ref:`this section <builtin-themes>`.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:906: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_theme_path\n\n   A list of paths that contain custom themes, either as subdirectories or as\n   zip files.  Relative paths are taken as relative to the configuration\n   directory.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:914: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_style\n\n   The style sheet to use for HTML pages.  A file of that name must exist\n   either in Sphinx's :file:`static/` path, or in one of the custom paths given\n   in :confval:`html_static_path`.  Default is the stylesheet given by the\n   selected theme.  If you only want to add or override a few things compared\n   to the theme's stylesheet, use CSS ``@import`` to import the theme's\n   stylesheet.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:923: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_title\n\n   The \"title\" for HTML documentation generated with Sphinx's own templates.\n   This is appended to the ``<title>`` tag of individual pages, and used in the\n   navigation bar as the \"topmost\" element.  It defaults to :samp:`'{<project>}\n   v{<revision>} documentation'`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:930: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_short_title\n\n   A shorter \"title\" for the HTML docs.  This is used for links in the\n   header and in the HTML Help docs.  If not given, it defaults to the value of\n   :confval:`html_title`.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:938: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_baseurl\n\n   The URL which points to the root of the HTML documentation.  It is used to\n   indicate the location of document like ``canonical_url``.\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:945: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_codeblock_linenos_style\n\n   The style of line numbers for code-blocks.\n\n   * ``'table'`` -- display line numbers using ``<table>`` tag (default)\n   * ``'inline'`` -- display line numbers using ``<span>`` tag\n\n   .. versionadded:: 3.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:954: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_context\n\n   A dictionary of values to pass into the template engine's context for all\n   pages.  Single values can also be put in this dictionary using the\n   :option:`-A <sphinx-build -A>` command-line option of ``sphinx-build``.\n\n   .. versionadded:: 0.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:962: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_logo\n\n   If given, this must be the name of an image file (path relative to the\n   :term:`configuration directory`) that is the logo of the docs.  It is placed\n   at the top of the sidebar; its width should therefore not exceed 200 pixels.\n   Default: ``None``.\n\n   .. versionadded:: 0.4.1\n      The image file will be copied to the ``_static`` directory of the output\n      HTML, but only if the file does not already exist there.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:973: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_favicon\n\n   If given, this must be the name of an image file (path relative to the\n   :term:`configuration directory`) that is the favicon of the docs.  Modern\n   browsers use this as the icon for tabs, windows and bookmarks.  It should\n   be a Windows-style icon file (``.ico``), which is 16x16 or 32x32\n   pixels large.  Default: ``None``.\n\n   .. versionadded:: 0.4\n      The image file will be copied to the ``_static`` directory of the output\n      HTML, but only if the file does not already exist there.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:985: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_css_files\n\n   A list of CSS files.  The entry must be a *filename* string or a tuple\n   containing the *filename* string and the *attributes* dictionary.  The\n   *filename* must be relative to the :confval:`html_static_path`, or a full URI\n   with scheme like ``http://example.org/style.css``.  The *attributes* is used\n   for attributes of ``<link>`` tag.  It defaults to an empty list.\n\n   Example::\n\n       html_css_files = ['custom.css',\n                         'https://example.com/css/custom.css',\n                         ('print.css', {'media': 'print'})]\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1001: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_js_files\n\n   A list of JavaScript *filename*.  The entry must be a *filename* string or a\n   tuple containing the *filename* string and the *attributes* dictionary.  The\n   *filename* must be relative to the :confval:`html_static_path`, or a full\n   URI with scheme like ``http://example.org/script.js``.  The *attributes* is\n   used for attributes of ``<script>`` tag.  It defaults to an empty list.\n\n   Example::\n\n       html_js_files = ['script.js',\n                        'https://example.com/scripts/custom.js',\n                        ('custom.js', {'async': 'async'})]\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1017: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_static_path\n\n   A list of paths that contain custom static files (such as style\n   sheets or script files).  Relative paths are taken as relative to\n   the configuration directory.  They are copied to the output's\n   :file:`_static` directory after the theme's static files, so a file\n   named :file:`default.css` will overwrite the theme's\n   :file:`default.css`.\n\n   As these files are not meant to be built, they are automatically excluded\n   from source files.\n\n   .. note::\n\n      For security reasons, dotfiles under ``html_static_path`` will\n      not be copied.  If you would like to copy them intentionally, please\n      add each filepath to this setting::\n\n          html_static_path = ['_static', '_static/.htaccess']\n\n      Another way to do that, you can also use\n      :confval:`html_extra_path`.  It allows to copy dotfiles under\n      the directories.\n\n   .. versionchanged:: 0.4\n      The paths in :confval:`html_static_path` can now contain subdirectories.\n\n   .. versionchanged:: 1.0\n      The entries in :confval:`html_static_path` can now be single files.\n\n   .. versionchanged:: 1.8\n      The files under :confval:`html_static_path` are excluded from source\n      files.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1051: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_extra_path\n\n   A list of paths that contain extra files not directly related to\n   the documentation, such as :file:`robots.txt` or :file:`.htaccess`.\n   Relative paths are taken as relative to the configuration\n   directory.  They are copied to the output directory.  They will\n   overwrite any existing file of the same name.\n\n   As these files are not meant to be built, they are automatically excluded\n   from source files.\n\n   .. versionadded:: 1.2\n\n   .. versionchanged:: 1.4\n      The dotfiles in the extra directory will be copied to the output\n      directory.  And it refers :confval:`exclude_patterns` on copying extra\n      files and directories, and ignores if path matches to patterns.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1069: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_last_updated_fmt\n\n   If this is not None, a 'Last updated on:' timestamp is inserted\n   at every page bottom, using the given :func:`strftime` format.\n   The empty string is equivalent to ``'%b %d, %Y'`` (or a\n   locale-dependent equivalent).\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1076: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_use_smartypants\n\n   If true, quotes and dashes are converted to typographically correct\n   entities.  Default: ``True``.\n\n   .. deprecated:: 1.6\n      To disable smart quotes, use rather :confval:`smartquotes`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1084: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_add_permalinks\n\n   Sphinx will add \"permalinks\" for each heading and description environment as\n   paragraph signs that become visible when the mouse hovers over them.\n\n   This value determines the text for the permalink; it defaults to ``\"\u00b6\"``.\n   Set it to ``None`` or the empty string to disable permalinks.\n\n   .. versionadded:: 0.6\n      Previously, this was always activated.\n\n   .. versionchanged:: 1.1\n      This can now be a string to select the actual text of the link.\n      Previously, only boolean values were accepted.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1099: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_sidebars\n\n   Custom sidebar templates, must be a dictionary that maps document names to\n   template names.\n\n   The keys can contain glob-style patterns [1]_, in which case all matching\n   documents will get the specified sidebars.  (A warning is emitted when a\n   more than one glob-style pattern matches for any document.)\n\n   The values can be either lists or single strings.\n\n   * If a value is a list, it specifies the complete list of sidebar templates\n     to include.  If all or some of the default sidebars are to be included,\n     they must be put into this list as well.\n\n     The default sidebars (for documents that don't match any pattern) are\n     defined by theme itself.  Builtin themes are using these templates by\n     default: ``['localtoc.html', 'relations.html', 'sourcelink.html',\n     'searchbox.html']``.\n\n   * If a value is a single string, it specifies a custom sidebar to be added\n     between the ``'sourcelink.html'`` and ``'searchbox.html'`` entries.  This\n     is for compatibility with Sphinx versions before 1.0.\n\n   .. deprecated:: 1.7\n\n      a single string value for ``html_sidebars`` will be removed in 2.0\n\n   Builtin sidebar templates that can be rendered are:\n\n   * **localtoc.html** -- a fine-grained table of contents of the current\n     document\n   * **globaltoc.html** -- a coarse-grained table of contents for the whole\n     documentation set, collapsed\n   * **relations.html** -- two links to the previous and next documents\n   * **sourcelink.html** -- a link to the source of the current document, if\n     enabled in :confval:`html_show_sourcelink`\n   * **searchbox.html** -- the \"quick search\" box\n\n   Example::\n\n      html_sidebars = {\n         '**': ['globaltoc.html', 'sourcelink.html', 'searchbox.html'],\n         'using/windows': ['windowssidebar.html', 'searchbox.html'],\n      }\n\n   This will render the custom template ``windowssidebar.html`` and the quick\n   search box within the sidebar of the given document, and render the default\n   sidebars for all other pages (except that the local TOC is replaced by the\n   global TOC).\n\n   .. versionadded:: 1.0\n      The ability to use globbing keys and to specify multiple sidebars.\n\n   Note that this value only has no effect if the chosen theme does not possess\n   a sidebar, like the builtin **scrolls** and **haiku** themes.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1156: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_additional_pages\n\n   Additional templates that should be rendered to HTML pages, must be a\n   dictionary that maps document names to template names.\n\n   Example::\n\n      html_additional_pages = {\n          'download': 'customdownload.html',\n      }\n\n   This will render the template ``customdownload.html`` as the page\n   ``download.html``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1170: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_domain_indices\n\n   If true, generate domain-specific indices in addition to the general index.\n   For e.g. the Python domain, this is the global module index.  Default is\n   ``True``.\n\n   This value can be a bool or a list of index names that should be generated.\n   To find out the index name for a specific index, look at the HTML file name.\n   For example, the Python module index has the name ``'py-modindex'``.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1182: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_use_index\n\n   If true, add an index to the HTML documents.  Default is ``True``.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1188: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_split_index\n\n   If true, the index is generated twice: once as a single page with all the\n   entries, and once as one page per starting letter.  Default is ``False``.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1195: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_copy_source\n\n   If true, the reST sources are included in the HTML build as\n   :file:`_sources/{name}`.  The default is ``True``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1200: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_show_sourcelink\n\n   If true (and :confval:`html_copy_source` is true as well), links to the\n   reST sources will be added to the sidebar.  The default is ``True``.\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1207: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_sourcelink_suffix\n\n   Suffix to be appended to source links (see :confval:`html_show_sourcelink`),\n   unless they have this suffix already.  Default is ``'.txt'``.\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1214: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_use_opensearch\n\n   If nonempty, an `OpenSearch <http://www.opensearch.org/Home>`_ description\n   file will be output, and all pages will contain a ``<link>`` tag referring\n   to it.  Since OpenSearch doesn't support relative URLs for its search page\n   location, the value of this option must be the base URL from which these\n   documents are served (without trailing slash), e.g.\n   ``\"https://docs.python.org\"``.  The default is ``''``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1223: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_file_suffix\n\n   This is the file name suffix for generated HTML files.  The default is\n   ``\".html\"``.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1230: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_link_suffix\n\n   Suffix for generated links to HTML files.  The default is whatever\n   :confval:`html_file_suffix` is set to; it can be set differently (e.g. to\n   support different web server setups).\n\n   .. versionadded:: 0.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1238: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_show_copyright\n\n   If true, \"(C) Copyright ...\" is shown in the HTML footer. Default is\n   ``True``.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1245: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_show_sphinx\n\n   If true, \"Created using Sphinx\" is shown in the HTML footer.  Default is\n   ``True``.\n\n   .. versionadded:: 0.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1252: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_output_encoding\n\n   Encoding of HTML output files. Default is ``'utf-8'``.  Note that this\n   encoding name must both be a valid Python encoding name and a valid HTML\n   ``charset`` value.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1260: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_compact_lists\n\n   If true, a list all whose items consist of a single paragraph and/or a\n   sub-list all whose items etc... (recursive definition) will not use the\n   ``<p>`` element for any of its items. This is standard docutils behavior.\n   Default: ``True``.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1269: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_secnumber_suffix\n\n   Suffix for section numbers.  Default: ``\". \"``.  Set to ``\" \"`` to suppress\n   the final dot on section numbers.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1276: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_search_language\n\n   Language to be used for generating the HTML full-text search index.  This\n   defaults to the global language selected with :confval:`language`.  If there\n   is no support for this language, ``\"en\"`` is used which selects the English\n   language.\n\n   Support is present for these languages:\n\n   * ``da`` -- Danish\n   * ``nl`` -- Dutch\n   * ``en`` -- English\n   * ``fi`` -- Finnish\n   * ``fr`` -- French\n   * ``de`` -- German\n   * ``hu`` -- Hungarian\n   * ``it`` -- Italian\n   * ``ja`` -- Japanese\n   * ``no`` -- Norwegian\n   * ``pt`` -- Portuguese\n   * ``ro`` -- Romanian\n   * ``ru`` -- Russian\n   * ``es`` -- Spanish\n   * ``sv`` -- Swedish\n   * ``tr`` -- Turkish\n   * ``zh`` -- Chinese\n\n   .. admonition:: Accelerating build speed\n\n      Each language (except Japanese) provides its own stemming algorithm.\n      Sphinx uses a Python implementation by default.  You can use a C\n      implementation to accelerate building the index file.\n\n      * `PorterStemmer <https://pypi.org/project/PorterStemmer/>`_ (``en``)\n      * `PyStemmer <https://pypi.org/project/PyStemmer/>`_ (all languages)\n\n   .. versionadded:: 1.1\n      With support for ``en`` and ``ja``.\n\n   .. versionchanged:: 1.3\n      Added additional languages.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1318: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_search_options\n\n   A dictionary with options for the search language support, empty by default.\n   The meaning of these options depends on the language selected.\n\n   The English support has no options.\n\n   The Japanese support has these options:\n\n   :type:\n      _`type` is dotted module path string to specify Splitter implementation\n      which should be derived from :class:`sphinx.search.ja.BaseSplitter`.  If\n      not specified or None is specified,\n      ``'sphinx.search.ja.DefaultSplitter'`` will be used.\n\n      You can choose from these modules:\n\n      :'sphinx.search.ja.DefaultSplitter':\n         TinySegmenter algorithm. This is default splitter.\n      :'sphinx.search.ja.MecabSplitter':\n         MeCab binding. To use this splitter, 'mecab' python binding or dynamic\n         link library ('libmecab.so' for linux, 'libmecab.dll' for windows) is\n         required.\n      :'sphinx.search.ja.JanomeSplitter':\n         Janome binding. To use this splitter,\n         `Janome <https://pypi.org/project/Janome/>`_ is required.\n\n      .. deprecated:: 1.6\n         ``'mecab'``, ``'janome'`` and ``'default'`` is deprecated.\n         To keep compatibility, ``'mecab'``, ``'janome'`` and ``'default'`` are\n         also acceptable.\n\n   Other option values depend on splitter value which you choose.\n\n   Options for ``'mecab'``:\n      :dic_enc:\n         _`dic_enc option` is the encoding for the MeCab algorithm.\n      :dict:\n         _`dict option` is the dictionary to use for the MeCab algorithm.\n      :lib:\n         _`lib option` is the library name for finding the MeCab library via\n         ctypes if the Python binding is not installed.\n\n      For example::\n\n          html_search_options = {\n              'type': 'mecab',\n              'dic_enc': 'utf-8',\n              'dict': '/path/to/mecab.dic',\n              'lib': '/path/to/libmecab.so',\n          }\n\n   Options for ``'janome'``:\n      :user_dic:\n         _`user_dic option` is the user dictionary file path for Janome.\n      :user_dic_enc:\n         _`user_dic_enc option` is the encoding for the user dictionary file\n         specified by ``user_dic`` option. Default is 'utf8'.\n\n   .. versionadded:: 1.1\n\n   .. versionchanged:: 1.4\n      html_search_options for Japanese is re-organized and any custom splitter\n      can be used by `type`_ settings.\n\n   The Chinese support has these options:\n\n   * ``dict``  -- the ``jieba`` dictionary path if want to use\n     custom dictionary.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1388: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_search_scorer\n\n   The name of a JavaScript file (relative to the configuration directory) that\n   implements a search results scorer.  If empty, the default will be used.\n\n   .. XXX describe interface for scorer here\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1397: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_scaled_image_link\n\n   If true, images itself links to the original image if it doesn't have\n   'target' option or scale related options: 'scale', 'width', 'height'.\n   The default is ``True``.\n\n   Document authors can this feature manually with giving ``no-scaled-link``\n   class to the image:\n\n   .. code-block:: rst\n\n      .. image:: sphinx.png\n         :scale: 50%\n         :class: no-scaled-link\n\n   .. versionadded:: 1.3\n\n   .. versionchanged:: 3.0\n\n      It is disabled for images having ``no-scaled-link`` class\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1418: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_math_renderer\n\n   The name of math_renderer extension for HTML output.  The default is\n   ``'mathjax'``.\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1425: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html_experimental_html5_writer\n\n   Output is processed with HTML5 writer.  This feature needs docutils 0.13 or\n   newer.  Default is ``False``.\n\n   .. versionadded:: 1.6\n\n   .. deprecated:: 2.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1434: WARNING: Unknown directive type \"confval\".\n\n.. confval:: html4_writer\n\n   Output is processed with HTML4 writer.  Default is ``False``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1441: WARNING: Unknown directive type \"confval\".\n\n.. confval:: singlehtml_sidebars\n\n   Custom sidebar templates, must be a dictionary that maps document names to\n   template names.  And it only allows a key named `'index'`.  All other keys\n   are ignored.  For more information, refer to :confval:`html_sidebars`.  By\n   default, it is same as :confval:`html_sidebars`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1454: WARNING: Unknown directive type \"confval\".\n\n.. confval:: htmlhelp_basename\n\n   Output file base name for HTML help builder.  Default is ``'pydoc'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1458: WARNING: Unknown directive type \"confval\".\n\n.. confval:: htmlhelp_file_suffix\n\n   This is the file name suffix for generated HTML help files.  The\n   default is ``\".html\"``.\n\n   .. versionadded:: 2.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1465: WARNING: Unknown directive type \"confval\".\n\n.. confval:: htmlhelp_link_suffix\n\n   Suffix for generated links to HTML files.  The default is ``\".html\"``.\n\n   .. versionadded:: 2.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1488: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1493: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_bundle_name\n\n   The basename for the Apple Help Book.  Defaults to the :confval:`project`\n   name.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1498: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_bundle_id\n\n   The bundle ID for the help book bundle.\n\n   .. warning::\n\n      You *must* set this value in order to generate Apple Help.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1506: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_dev_region\n\n   The development region.  Defaults to ``'en-us'``, which is Apple\u2019s\n   recommended setting.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1511: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_bundle_version\n\n   The bundle version (as a string).  Defaults to ``'1'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1515: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_icon\n\n   The help bundle icon file, or ``None`` for no icon.  According to Apple's\n   documentation, this should be a 16-by-16 pixel version of the application's\n   icon with a transparent background, saved as a PNG file.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1521: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_kb_product\n\n   The product tag for use with :confval:`applehelp_kb_url`.  Defaults to\n   :samp:`'{<project>}-{<release>}'`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1526: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_kb_url\n\n   The URL for your knowledgebase server,\n   e.g. ``https://example.com/kbsearch.py?p='product'&q='query'&l='lang'``.\n   Help Viewer will replace the values ``'product'``, ``'query'`` and\n   ``'lang'`` at runtime with the contents of :confval:`applehelp_kb_product`,\n   the text entered by the user in the search box and the user's system\n   language respectively.\n\n   Defaults to ``None`` for no remote search.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1537: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_remote_url\n\n   The URL for remote content.  You can place a copy of your Help Book's\n   ``Resources`` folder at this location and Help Viewer will attempt to use\n   it to fetch updated content.\n\n   e.g. if you set it to ``https://example.com/help/Foo/`` and Help Viewer\n   wants a copy of ``index.html`` for an English speaking customer, it will\n   look at ``https://example.com/help/Foo/en.lproj/index.html``.\n\n   Defaults to ``None`` for no remote content.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1549: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_index_anchors\n\n   If ``True``, tell the help indexer to index anchors in the generated HTML.\n   This can be useful for jumping to a particular topic using the\n   ``AHLookupAnchor`` function or the ``openHelpAnchor:inBook:`` method in\n   your code.  It also allows you to use ``help:anchor`` URLs; see the Apple\n   documentation for more information on this topic.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1557: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_min_term_length\n\n   Controls the minimum term length for the help indexer.  Defaults to\n   ``None``, which means the default will be used.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1562: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_stopwords\n\n   Either a language specification (to use the built-in stopwords), or the\n   path to a stopwords plist, or ``None`` if you do not want to use stopwords.\n   The default stopwords plist can be found at\n   ``/usr/share/hiutil/Stopwords.plist`` and contains, at time of writing,\n   stopwords for the following languages:\n\n   =========  ====\n   Language   Code\n   =========  ====\n   English    en\n   German     de\n   Spanish    es\n   French     fr\n   Swedish    sv\n   Hungarian  hu\n   Italian    it\n   =========  ====\n\n   Defaults to :confval:`language`, or if that is not set, to :confval:`en`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1584: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_locale\n\n   Specifies the locale to generate help for.  This is used to determine\n   the name of the ``.lproj`` folder inside the Help Book\u2019s ``Resources``, and\n   is passed to the help indexer.\n\n   Defaults to :confval:`language`, or if that is not set, to :confval:`en`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1592: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_title\n\n   Specifies the help book title.  Defaults to :samp:`'{<project>} Help'`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1596: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_codesign_identity\n\n   Specifies the identity to use for code signing, or ``None`` if code signing\n   is not to be performed.\n\n   Defaults to the value of the environment variable ``CODE_SIGN_IDENTITY``,\n   which is set by Xcode for script build phases, or ``None`` if that variable\n   is not set.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1605: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_codesign_flags\n\n   A *list* of additional arguments to pass to :program:`codesign` when\n   signing the help book.\n\n   Defaults to a list based on the value of the environment variable\n   ``OTHER_CODE_SIGN_FLAGS``, which is set by Xcode for script build phases,\n   or the empty list if that variable is not set.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1614: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_indexer_path\n\n   The path to the :program:`hiutil` program.  Defaults to\n   ``'/usr/bin/hiutil'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1619: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_codesign_path\n\n   The path to the :program:`codesign` program.  Defaults to\n   ``'/usr/bin/codesign'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1624: WARNING: Unknown directive type \"confval\".\n\n.. confval:: applehelp_disable_external_tools\n\n   If ``True``, the builder will not run the indexer or the code signing tool,\n   no matter what other settings are specified.\n\n   This is mainly useful for testing, or where you want to run the Sphinx\n   build on a non-Mac OS X platform and then complete the final steps on OS X\n   for some reason.\n\n   Defaults to ``False``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1646: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_basename\n\n   The basename for the epub file.  It defaults to the :confval:`project` name.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1650: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_theme\n\n   The HTML theme for the epub output.  Since the default themes are not\n   optimized for small screen space, using the same theme for HTML and epub\n   output is usually not wise.  This defaults to ``'epub'``, a theme designed\n   to save visual space.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1657: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_theme_options\n\n   A dictionary of options that influence the look and feel of the selected\n   theme.  These are theme-specific.  For the options understood by the builtin\n   themes, see :ref:`this section <builtin-themes>`.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1665: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_title\n\n   The title of the document.  It defaults to the :confval:`html_title` option\n   but can be set independently for epub creation.  It defaults to the\n   :confval:`project` option.\n\n   .. versionchanged:: 2.0\n      It defaults to the ``project`` option.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1674: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_description\n\n   The description of the document. The default value is ``'unknown'``.\n\n   .. versionadded:: 1.4\n\n   .. versionchanged:: 1.5\n      Renamed from ``epub3_description``\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1683: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_author\n\n   The author of the document.  This is put in the Dublin Core metadata.  It\n   defaults to the :confval:`author` option.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1688: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_contributor\n\n   The name of a person, organization, etc. that played a secondary role in\n   the creation of the content of an EPUB Publication. The default value is\n   ``'unknown'``.\n\n   .. versionadded:: 1.4\n\n   .. versionchanged:: 1.5\n      Renamed from ``epub3_contributor``\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1699: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_language\n\n   The language of the document.  This is put in the Dublin Core metadata.  The\n   default is the :confval:`language` option or ``'en'`` if unset.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1704: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_publisher\n\n   The publisher of the document.  This is put in the Dublin Core metadata.\n   You may use any sensible string, e.g. the project homepage.  The defaults to\n   the :confval:`author` option.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1710: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_copyright\n\n   The copyright of the document.  It defaults to the :confval:`copyright`\n   option but can be set independently for epub creation.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1715: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_identifier\n\n   An identifier for the document.  This is put in the Dublin Core metadata.\n   For published documents this is the ISBN number, but you can also use an\n   alternative scheme, e.g. the project homepage.  The default value is\n   ``'unknown'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1722: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_scheme\n\n   The publication scheme for the :confval:`epub_identifier`.  This is put in\n   the Dublin Core metadata.  For published books the scheme is ``'ISBN'``.  If\n   you use the project homepage, ``'URL'`` seems reasonable.  The default value\n   is ``'unknown'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1729: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_uid\n\n   A unique identifier for the document.  This is put in the Dublin Core\n   metadata.  You may use a\n   `XML's Name format <https://www.w3.org/TR/REC-xml/#NT-NameStartChar>`_\n   string.  You can't use hyphen, period, numbers as a first character.  The\n   default value is ``'unknown'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1737: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_cover\n\n   The cover page information.  This is a tuple containing the filenames of\n   the cover image and the html template.  The rendered html cover page is\n   inserted as the first item in the spine in :file:`content.opf`.  If the\n   template filename is empty, no html cover page is created.  No cover at all\n   is created if the tuple is empty.  Examples::\n\n      epub_cover = ('_static/cover.png', 'epub-cover.html')\n      epub_cover = ('_static/cover.png', '')\n      epub_cover = ()\n\n   The default value is ``()``.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1753: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_css_files\n\n   A list of CSS files.  The entry must be a *filename* string or a tuple\n   containing the *filename* string and the *attributes* dictionary.  For more\n   information, see :confval:`html_css_files`.\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1761: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_guide\n\n   Meta data for the guide element of :file:`content.opf`. This is a\n   sequence of tuples containing the *type*, the *uri* and the *title* of\n   the optional guide information. See the OPF documentation\n   at `<http://idpf.org/epub>`_ for details. If possible, default entries\n   for the *cover* and *toc* types are automatically inserted. However,\n   the types can be explicitly overwritten if the default entries are not\n   appropriate. Example::\n\n      epub_guide = (('cover', 'cover.html', u'Cover Page'),)\n\n   The default value is ``()``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1775: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_pre_files\n\n   Additional files that should be inserted before the text generated by\n   Sphinx. It is a list of tuples containing the file name and the title.\n   If the title is empty, no entry is added to :file:`toc.ncx`.  Example::\n\n      epub_pre_files = [\n          ('index.html', 'Welcome'),\n      ]\n\n   The default value is ``[]``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1787: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_post_files\n\n   Additional files that should be inserted after the text generated by Sphinx.\n   It is a list of tuples containing the file name and the title.  This option\n   can be used to add an appendix.  If the title is empty, no entry is added\n   to :file:`toc.ncx`.  The default value is ``[]``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1794: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_exclude_files\n\n   A list of files that are generated/copied in the build directory but should\n   not be included in the epub file.  The default value is ``[]``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1799: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_tocdepth\n\n   The depth of the table of contents in the file :file:`toc.ncx`.  It should\n   be an integer greater than zero.  The default value is 3.  Note: A deeply\n   nested table of contents may be difficult to navigate.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1805: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_tocdup\n\n   This flag determines if a toc entry is inserted again at the beginning of\n   its nested toc listing.  This allows easier navigation to the top of\n   a chapter, but can be confusing because it mixes entries of different\n   depth in one list.  The default value is ``True``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1812: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_tocscope\n\n   This setting control the scope of the epub table of contents.  The setting\n   can have the following values:\n\n   * ``'default'`` -- include all toc entries that are not hidden (default)\n   * ``'includehidden'`` -- include all toc entries\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1822: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_fix_images\n\n   This flag determines if sphinx should try to fix image formats that are not\n   supported by some epub readers.  At the moment palette images with a small\n   color table are upgraded.  You need Pillow, the Python Image Library,\n   installed to use this option.  The default value is ``False`` because the\n   automatic conversion may lose information.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1832: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_max_image_width\n\n   This option specifies the maximum width of images.  If it is set to a value\n   greater than zero, images with a width larger than the given value are\n   scaled accordingly.  If it is zero, no scaling is performed. The default\n   value is ``0``.  You need the Python Image Library (Pillow) installed to use\n   this option.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1842: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_show_urls\n\n   Control whether to display URL addresses. This is very useful for\n   readers that have no other means to display the linked URL. The\n   settings can have the following values:\n\n   * ``'inline'`` -- display URLs inline in parentheses (default)\n   * ``'footnote'`` -- display URLs in footnotes\n   * ``'no'`` -- do not display URLs\n\n   The display of inline URLs can be customized by adding CSS rules for the\n   class ``link-target``.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1857: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_use_index\n\n   If true, add an index to the epub document.  It defaults to the\n   :confval:`html_use_index` option but can be set independently for epub\n   creation.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1865: WARNING: Unknown directive type \"confval\".\n\n.. confval:: epub_writing_mode\n\n   It specifies writing direction. It can accept ``'horizontal'`` (default) and\n   ``'vertical'``\n\n   .. list-table::\n      :header-rows: 1\n      :stub-columns: 1\n\n      - * ``epub_writing_mode``\n        * ``'horizontal'``\n        * ``'vertical'``\n      - * writing-mode [#]_\n        * ``horizontal-tb``\n        * ``vertical-rl``\n      - * page progression\n        * left to right\n        * right to left\n      - * iBook's Scroll Theme support\n        * scroll-axis is vertical.\n        * scroll-axis is horizontal.\n\n   .. [#] https://developer.mozilla.org/en-US/docs/Web/CSS/writing-mode\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1897: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_engine\n\n   The LaTeX engine to build the docs.  The setting can have the following\n   values:\n\n   * ``'pdflatex'`` -- PDFLaTeX (default)\n   * ``'xelatex'`` -- XeLaTeX\n   * ``'lualatex'`` -- LuaLaTeX\n   * ``'platex'`` -- pLaTeX (default if :confval:`language` is ``'ja'``)\n   * ``'uplatex'`` -- upLaTeX (experimental)\n\n   ``'pdflatex'``\\ 's support for Unicode characters is limited.\n\n   .. note::\n\n      2.0 adds to ``'pdflatex'`` support in Latin language document of\n      occasional Cyrillic or Greek letters or words.  This is not automatic,\n      see the discussion of the :confval:`latex_elements` ``'fontenc'`` key.\n\n   If your project uses Unicode characters, setting the engine to\n   ``'xelatex'`` or ``'lualatex'`` and making sure to use an OpenType font\n   with wide-enough glyph coverage is often easier than trying to make\n   ``'pdflatex'`` work with the extra Unicode characters.  Since Sphinx 2.0\n   the default is the GNU FreeFont which covers well Latin, Cyrillic and\n   Greek.\n\n   .. versionchanged:: 2.1.0\n\n      Use ``xelatex`` (and LaTeX package ``xeCJK``) by default for Chinese\n      documents.\n\n   .. versionchanged:: 2.2.1\n\n      Use ``xelatex`` by default for Greek documents.\n\n   .. versionchanged:: 2.3\n\n      Add ``uplatex`` support.\n\n   Contrarily to :ref:`MathJaX math rendering in HTML output <math-support>`,\n   LaTeX requires some extra configuration to support Unicode literals in\n   :rst:dir:`math`: the only comprehensive solution (as far as we know) is to\n   use ``'xelatex'`` or ``'lualatex'`` *and* to add\n   ``r'\\usepackage{unicode-math}'`` (e.g. via the :confval:`latex_elements`\n   ``'preamble'`` key).  You may prefer\n   ``r'\\usepackage[math-style=literal]{unicode-math}'`` to keep a Unicode\n   literal such as ``\u03b1`` (U+03B1) for example as is in output, rather than\n   being rendered as :math:`\\alpha`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1946: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_documents\n\n   This value determines how to group the document tree into LaTeX source files.\n   It must be a list of tuples ``(startdocname, targetname, title, author,\n   theme, toctree_only)``, where the items are:\n\n   *startdocname*\n     String that specifies the :term:`document name` of the LaTeX file's master\n     document.  All documents referenced by the *startdoc* document in TOC trees\n     will be included in the LaTeX file.  (If you want to use the default master\n     document for your LaTeX build, provide your :confval:`master_doc` here.)\n\n   *targetname*\n     File name of the LaTeX file in the output directory.\n\n   *title*\n     LaTeX document title.  Can be empty to use the title of the *startdoc*\n     document.  This is inserted as LaTeX markup, so special characters like a\n     backslash or ampersand must be represented by the proper LaTeX commands if\n     they are to be inserted literally.\n\n   *author*\n     Author for the LaTeX document.  The same LaTeX markup caveat as for *title*\n     applies.  Use ``\\\\and`` to separate multiple authors, as in:\n     ``'John \\\\and Sarah'`` (backslashes must be Python-escaped to reach LaTeX).\n\n   *theme*\n     LaTeX theme.  See :confval:`latex_theme`.\n\n   *toctree_only*\n     Must be ``True`` or ``False``.  If true, the *startdoc* document itself is\n     not included in the output, only the documents referenced by it via TOC\n     trees.  With this option, you can put extra stuff in the master document\n     that shows up in the HTML, but not the LaTeX output.\n\n   .. versionadded:: 1.2\n      In the past including your own document class required you to prepend the\n      document class name with the string \"sphinx\". This is not necessary\n      anymore.\n\n   .. versionadded:: 0.3\n      The 6th item ``toctree_only``.  Tuples with 5 items are still accepted.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1989: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_logo\n\n   If given, this must be the name of an image file (relative to the\n   configuration directory) that is the logo of the docs.  It is placed at the\n   top of the title page.  Default: ``None``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:1995: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_toplevel_sectioning\n\n   This value determines the topmost sectioning unit. It should be chosen from\n   ``'part'``, ``'chapter'`` or ``'section'``. The default is ``None``;\n   the topmost\n   sectioning unit is switched by documentclass: ``section`` is used if\n   documentclass will be ``howto``, otherwise ``chapter`` will be used.\n\n   Note that if LaTeX uses ``\\part`` command, then the numbering of sectioning\n   units one level deep gets off-sync with HTML numbering, because LaTeX\n   numbers continuously ``\\chapter`` (or ``\\section`` for ``howto``.)\n\n   .. versionadded:: 1.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2009: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_appendices\n\n   A list of document names to append as an appendix to all manuals.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2013: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_domain_indices\n\n   If true, generate domain-specific indices in addition to the general index.\n   For e.g. the Python domain, this is the global module index.  Default is\n   ``True``.\n\n   This value can be a bool or a list of index names that should be generated,\n   like for :confval:`html_domain_indices`.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2024: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_show_pagerefs\n\n   If true, add page references after internal references.  This is very useful\n   for printed copies of the manual.  Default is ``False``.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2031: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_show_urls\n\n   Control whether to display URL addresses.  This is very useful for printed\n   copies of the manual.  The setting can have the following values:\n\n   * ``'no'`` -- do not display URLs (default)\n   * ``'footnote'`` -- display URLs in footnotes\n   * ``'inline'`` -- display URLs inline in parentheses\n\n   .. versionadded:: 1.0\n   .. versionchanged:: 1.1\n      This value is now a string; previously it was a boolean value, and a true\n      value selected the ``'inline'`` display.  For backwards compatibility,\n      ``True`` is still accepted.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2046: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_use_latex_multicolumn\n\n   The default is ``False``: it means that Sphinx's own macros are used for\n   merged cells from grid tables. They allow general contents (literal blocks,\n   lists, blockquotes, ...) but may have problems if the\n   :rst:dir:`tabularcolumns` directive was used to inject LaTeX mark-up of the\n   type ``>{..}``, ``<{..}``, ``@{..}`` as column specification.\n\n   Setting to ``True`` means to use LaTeX's standard ``\\multicolumn``; this is\n   incompatible with literal blocks in the horizontally merged cell, and also\n   with multiple paragraphs in such cell if the table is rendered using\n   ``tabulary``.\n\n   .. versionadded:: 1.6\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2061: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_use_xindy\n\n   If ``True``, the PDF build from the LaTeX files created by Sphinx\n   will use :program:`xindy` (doc__) rather than :program:`makeindex`\n   for preparing the index of general terms (from :rst:dir:`index`\n   usage).  This means that words with UTF-8 characters will get\n   ordered correctly for the :confval:`language`.\n\n   __ http://xindy.sourceforge.net/\n\n   - This option is ignored if :confval:`latex_engine` is ``'platex'``\n     (Japanese documents; :program:`mendex` replaces :program:`makeindex`\n     then).\n\n   - The default is ``True`` for ``'xelatex'`` or ``'lualatex'`` as\n     :program:`makeindex`, if any indexed term starts with a non-ascii\n     character, creates ``.ind`` files containing invalid bytes for\n     UTF-8 encoding. With ``'lualatex'`` this then breaks the PDF\n     build.\n\n   - The default is ``False`` for ``'pdflatex'`` but ``True`` is\n     recommended for non-English documents as soon as some indexed\n     terms use non-ascii characters from the language script.\n\n   Sphinx adds to :program:`xindy` base distribution some dedicated support\n   for using ``'pdflatex'`` engine with Cyrillic scripts.  And whether with\n   ``'pdflatex'`` or Unicode engines, Cyrillic documents handle correctly the\n   indexing of Latin names, even with diacritics.\n\n   .. versionadded:: 1.8\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2092: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_elements\n\n   .. versionadded:: 0.5\n\n   Its :ref:`documentation <latex_elements_confval>` has moved to :doc:`/latex`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2098: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_docclass\n\n   A dictionary mapping ``'howto'`` and ``'manual'`` to names of real document\n   classes that will be used as the base for the two Sphinx classes.  Default\n   is to use ``'article'`` for ``'howto'`` and ``'report'`` for ``'manual'``.\n\n   .. versionadded:: 1.0\n\n   .. versionchanged:: 1.5\n\n      In Japanese docs (:confval:`language` is ``'ja'``), by default\n      ``'jreport'`` is used for ``'howto'`` and ``'jsbook'`` for ``'manual'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2111: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_additional_files\n\n   A list of file names, relative to the configuration directory, to copy to\n   the build directory when building LaTeX output.  This is useful to copy\n   files that Sphinx doesn't copy automatically, e.g. if they are referenced in\n   custom LaTeX added in ``latex_elements``.  Image files that are referenced\n   in source files (e.g. via ``.. image::``) are copied automatically.\n\n   You have to make sure yourself that the filenames don't collide with those\n   of any automatically copied files.\n\n   .. versionadded:: 0.6\n\n   .. versionchanged:: 1.2\n      This overrides the files which is provided from Sphinx such as\n      ``sphinx.sty``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2128: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_theme\n\n   The \"theme\" that the LaTeX output should use.  It is a collection of settings\n   for LaTeX output (ex. document class, top level sectioning unit and so on).\n\n   As a built-in LaTeX themes, ``manual`` and ``howto`` are bundled.\n\n   ``manual``\n     A LaTeX theme for writing a manual.  It imports the ``report`` document\n     class (Japanese documents use ``jsbook``).\n\n   ``howto``\n     A LaTeX theme for writing an article.  It imports the ``article`` document\n     class (Japanese documents use ``jreport`` rather).  :confval:`latex_appendices`\n     is available only for this theme.\n\n   It defaults to ``'manual'``.\n\n   .. versionadded:: 3.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2148: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_theme_options\n\n   A dictionary of options that influence the look and feel of the selected\n   theme.\n\n   .. versionadded:: 3.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2155: WARNING: Unknown directive type \"confval\".\n\n.. confval:: latex_theme_path\n\n   A list of paths that contain custom LaTeX themes as subdirectories.  Relative\n   paths are taken as relative to the configuration directory.\n\n   .. versionadded:: 3.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2170: WARNING: Unknown directive type \"confval\".\n\n.. confval:: text_newlines\n\n   Determines which end-of-line character(s) are used in text output.\n\n   * ``'unix'``: use Unix-style line endings (``\\n``)\n   * ``'windows'``: use Windows-style line endings (``\\r\\n``)\n   * ``'native'``: use the line ending style of the platform the documentation\n     is built on\n\n   Default: ``'unix'``.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2183: WARNING: Unknown directive type \"confval\".\n\n.. confval:: text_sectionchars\n\n   A string of 7 characters that should be used for underlining sections.\n   The first character is used for first-level headings, the second for\n   second-level headings and so on.\n\n   The default is ``'*=-~\"+`'``.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2193: WARNING: Unknown directive type \"confval\".\n\n.. confval:: text_add_secnumbers\n\n   A boolean that decides whether section numbers are included in text output.\n   Default is ``True``.\n\n   .. versionadded:: 1.7\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2200: WARNING: Unknown directive type \"confval\".\n\n.. confval:: text_secnumber_suffix\n\n   Suffix for section numbers in text output.  Default: ``\". \"``. Set to\n   ``\" \"`` to suppress the final dot on section numbers.\n\n   .. versionadded:: 1.7\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2215: WARNING: Unknown directive type \"confval\".\n\n.. confval:: man_pages\n\n   This value determines how to group the document tree into manual pages.  It\n   must be a list of tuples ``(startdocname, name, description, authors,\n   section)``, where the items are:\n\n   *startdocname*\n     String that specifies the :term:`document name` of the manual page's master\n     document. All documents referenced by the *startdoc* document in TOC trees\n     will be included in the manual file.  (If you want to use the default\n     master document for your manual pages build, use your :confval:`master_doc`\n     here.)\n\n   *name*\n     Name of the manual page.  This should be a short string without spaces or\n     special characters.  It is used to determine the file name as well as the\n     name of the manual page (in the NAME section).\n\n   *description*\n     Description of the manual page.  This is used in the NAME section.\n\n   *authors*\n     A list of strings with authors, or a single string.  Can be an empty\n     string or list if you do not want to automatically generate an AUTHORS\n     section in the manual page.\n\n   *section*\n     The manual page section.  Used for the output file name as well as in the\n     manual page header.\n\n   .. versionadded:: 1.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2247: WARNING: Unknown directive type \"confval\".\n\n.. confval:: man_show_urls\n\n   If true, add URL addresses after links.  Default is ``False``.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2253: WARNING: Unknown directive type \"confval\".\n\n.. confval:: man_make_section_directory\n\n   If true, make a section directory on build man page.  Default is False.\n\n   .. versionadded:: 3.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2267: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_documents\n\n   This value determines how to group the document tree into Texinfo source\n   files.  It must be a list of tuples ``(startdocname, targetname, title,\n   author, dir_entry, description, category, toctree_only)``, where the items\n   are:\n\n   *startdocname*\n     String that specifies the :term:`document name` of the the Texinfo file's\n     master document.  All documents referenced by the *startdoc* document in\n     TOC trees will be included in the Texinfo file.  (If you want to use the\n     default master document for your Texinfo build, provide your\n     :confval:`master_doc` here.)\n\n   *targetname*\n     File name (no extension) of the Texinfo file in the output directory.\n\n   *title*\n     Texinfo document title.  Can be empty to use the title of the *startdoc*\n     document.  Inserted as Texinfo markup, so special characters like ``@`` and\n     ``{}`` will need to be escaped to be inserted literally.\n\n   *author*\n     Author for the Texinfo document.  Inserted as Texinfo markup.  Use ``@*``\n     to separate multiple authors, as in: ``'John@*Sarah'``.\n\n   *dir_entry*\n     The name that will appear in the top-level ``DIR`` menu file.\n\n   *description*\n     Descriptive text to appear in the top-level ``DIR`` menu file.\n\n   *category*\n     Specifies the section which this entry will appear in the top-level\n     ``DIR`` menu file.\n\n   *toctree_only*\n     Must be ``True`` or ``False``.  If true, the *startdoc* document itself is\n     not included in the output, only the documents referenced by it via TOC\n     trees.  With this option, you can put extra stuff in the master document\n     that shows up in the HTML, but not the Texinfo output.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2311: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_appendices\n\n   A list of document names to append as an appendix to all manuals.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2317: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_domain_indices\n\n   If true, generate domain-specific indices in addition to the general index.\n   For e.g. the Python domain, this is the global module index.  Default is\n   ``True``.\n\n   This value can be a bool or a list of index names that should be generated,\n   like for :confval:`html_domain_indices`.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2328: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_show_urls\n\n   Control how to display URL addresses.\n\n   * ``'footnote'`` -- display URLs in footnotes (default)\n   * ``'no'`` -- do not display URLs\n   * ``'inline'`` -- display URLs inline in parentheses\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2338: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_no_detailmenu\n\n   If true, do not generate a ``@detailmenu`` in the \"Top\" node's menu\n   containing entries for each sub-node in the document.  Default is ``False``.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2345: WARNING: Unknown directive type \"confval\".\n\n.. confval:: texinfo_elements\n\n   A dictionary that contains Texinfo snippets that override those Sphinx\n   usually puts into the generated ``.texi`` files.\n\n   * Keys that you may want to override include:\n\n     ``'paragraphindent'``\n        Number of spaces to indent the first line of each paragraph, default\n        ``2``.  Specify ``0`` for no indentation.\n\n     ``'exampleindent'``\n        Number of spaces to indent the lines for examples or literal blocks,\n        default ``4``.  Specify ``0`` for no indentation.\n\n     ``'preamble'``\n        Texinfo markup inserted near the beginning of the file.\n\n     ``'copying'``\n        Texinfo markup inserted within the ``@copying`` block and displayed\n        after the title.  The default value consists of a simple title page\n        identifying the project.\n\n   * Keys that are set by other options and therefore should not be overridden\n     are:\n\n     ``'author'``\n     ``'body'``\n     ``'date'``\n     ``'direntry'``\n     ``'filename'``\n     ``'project'``\n     ``'release'``\n     ``'title'``\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2391: WARNING: Unknown directive type \"confval\".\n\n.. confval:: qthelp_basename\n\n   The basename for the qthelp file.  It defaults to the :confval:`project`\n   name.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2396: WARNING: Unknown directive type \"confval\".\n\n.. confval:: qthelp_namespace\n\n   The namespace for the qthelp file.  It defaults to\n   ``org.sphinx.<project_name>.<project_version>``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2401: WARNING: Unknown directive type \"confval\".\n\n.. confval:: qthelp_theme\n\n   The HTML theme for the qthelp output.\n   This defaults to ``'nonav'``.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2406: WARNING: Unknown directive type \"confval\".\n\n.. confval:: qthelp_theme_options\n\n   A dictionary of options that influence the look and feel of the selected\n   theme.  These are theme-specific.  For the options understood by the builtin\n   themes, see :ref:`this section <builtin-themes>`.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2416: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_ignore\n\n   A list of regular expressions that match URIs that should not be checked\n   when doing a ``linkcheck`` build.  Example::\n\n      linkcheck_ignore = [r'http://localhost:\\d+/']\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2425: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_request_headers\n\n   A dictionary that maps baseurls to HTTP request headers.\n\n   The key is a URL base string like ``\"https://sphinx-doc.org/\"``.  To specify\n   headers for other hosts, ``\"*\"`` can be used.  It matches all hosts only when\n   the URL does not match other settings.\n\n   The value is a dictionary that maps header name to its value.\n\n   Example:\n\n   .. code-block:: python\n\n      linkcheck_request_headers = {\n          \"https://sphinx-doc.org/\": {\n              \"Accept\": \"text/html\",\n              \"Accept-Encoding\": \"utf-8\",\n          },\n          \"*\": {\n              \"Accept\": \"text/html,application/xhtml+xml\",\n          }\n      }\n\n   .. versionadded:: 3.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2451: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_retries\n\n   The number of times the linkcheck builder will attempt to check a URL before\n   declaring it broken. Defaults to 1 attempt.\n\n   .. versionadded:: 1.4\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2458: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_timeout\n\n   A timeout value, in seconds, for the linkcheck builder.  The default is to\n   use Python's global socket timeout.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2465: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_workers\n\n   The number of worker threads to use when checking links.  Default is 5\n   threads.\n\n   .. versionadded:: 1.1\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2472: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_anchors\n\n   If true, check the validity of ``#anchor``\\ s in links. Since this requires\n   downloading the whole document, it's considerably slower when enabled.\n   Default is ``True``.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2480: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_anchors_ignore\n\n   A list of regular expressions that match anchors Sphinx should skip when\n   checking the validity of anchors in links. This allows skipping anchors that\n   a website's JavaScript adds to control dynamic pages or when triggering an\n   internal REST request. Default is ``[\"^!\"]``.\n\n   .. note::\n\n      If you want to ignore anchors of a specific page or of pages that match a\n      specific pattern (but still check occurrences of the same page(s) that\n      don't have anchors), use :confval:`linkcheck_ignore` instead, for example\n      as follows::\n\n         linkcheck_ignore = [\n            'http://www.sphinx-doc.org/en/1.7/intro.html#'\n         ]\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2500: WARNING: Unknown directive type \"confval\".\n\n.. confval:: linkcheck_auth\n\n   Pass authentication information when doing a ``linkcheck`` build.\n\n   A list of ``(regex_pattern, auth_info)`` tuples where the items are:\n\n   *regex_pattern*\n     A regular expression that matches a URI.\n   *auth_info*\n     Authentication information to use for that URI. The value can be anything\n     that is understood by the ``requests`` library (see `requests\n     Authentication <requests-auth>`_ for details).\n\n     .. _requests-auth: https://requests.readthedocs.io/en/master/user/authentication/\n\n   The ``linkcheck`` builder will use the first matching ``auth_info`` value\n   it can find in the :confval:`linkcheck_auth` list, so values earlier in the\n   list have higher priority.\n\n   Example::\n\n      linkcheck_auth = [\n        ('https://foo\\.yourcompany\\.com/.+', ('johndoe', 'secret')),\n        ('https://.+\\.yourcompany\\.com/.+', HTTPDigestAuth(...)),\n      ]\n\n   .. versionadded:: 2.3\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2532: WARNING: Unknown directive type \"confval\".\n\n.. confval:: xml_pretty\n\n   If true, pretty-print the XML.  Default is ``True``.\n\n   .. versionadded:: 1.2\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2552: WARNING: Unknown directive type \"confval\".\n\n.. confval:: c_id_attributes\n\n   A list of strings that the parser additionally should accept as attributes.\n   This can for example be used when attributes have been ``#define`` d for\n   portability.\n\n   .. versionadded:: 3.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2560: WARNING: Unknown directive type \"confval\".\n\n.. confval:: c_paren_attributes\n\n   A list of strings that the parser additionally should accept as attributes\n   with one argument.  That is, if ``my_align_as`` is in the list, then\n   ``my_align_as(X)`` is parsed as an attribute for all strings ``X`` that have\n   balanced braces (``()``, ``[]``, and ``{}``).  This can for example be used\n   when attributes have been ``#define`` d for portability.\n\n   .. versionadded:: 3.0\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2570: WARNING: Unknown directive type \"confval\".\n\n.. confval:: c_allow_pre_v3\n\n   A boolean (default ``False``) controlling whether to parse and try to\n   convert pre-v3 style type directives and type roles.\n\n   .. versionadded:: 3.2\n   .. deprecated:: 3.2\n      Use the directives and roles added in v3.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2579: WARNING: Unknown directive type \"confval\".\n\n.. confval:: c_warn_on_allowed_pre_v3\n\n   A boolean (default ``True``) controlling whether to warn when a pre-v3\n   style type directive/role is parsed and converted.\n\n   .. versionadded:: 3.2\n   .. deprecated:: 3.2\n      Use the directives and roles added in v3.\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2593: WARNING: Unknown directive type \"confval\".\n\n.. confval:: cpp_index_common_prefix\n\n   A list of prefixes that will be ignored when sorting C++ objects in the\n   global index.  For example ``['awesome_lib::']``.\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2600: WARNING: Unknown directive type \"confval\".\n\n.. confval:: cpp_id_attributes\n\n   A list of strings that the parser additionally should accept as attributes.\n   This can for example be used when attributes have been ``#define`` d for\n   portability.\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2608: WARNING: Unknown directive type \"confval\".\n\n.. confval:: cpp_paren_attributes\n\n   A list of strings that the parser additionally should accept as attributes\n   with one argument.  That is, if ``my_align_as`` is in the list, then\n   ``my_align_as(X)`` is parsed as an attribute for all strings ``X`` that have\n   balanced braces (``()``, ``[]``, and ``{}``).  This can for example be used\n   when attributes have been ``#define`` d for portability.\n\n   .. versionadded:: 1.5\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2622: WARNING: Include file '/sphinx-doc__sphinx/_static/conf.py.txt' not found or reading it failed\n/sphinx-doc__sphinx/doc/usage/configuration.rst:2541: WARNING: Footnote [1] is not referenced.\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:119: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:267: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:290: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:383: WARNING: Unknown directive type \"confval\".\n\n.. confval:: autoclass_content\n\n   This value selects what content will be inserted into the main body of an\n   :rst:dir:`autoclass` directive.  The possible values are:\n\n   ``\"class\"``\n      Only the class' docstring is inserted.  This is the default.  You can\n      still document ``__init__`` as a separate method using\n      :rst:dir:`automethod` or the ``members`` option to :rst:dir:`autoclass`.\n   ``\"both\"``\n      Both the class' and the ``__init__`` method's docstring are concatenated\n      and inserted.\n   ``\"init\"``\n      Only the ``__init__`` method's docstring is inserted.\n\n   .. versionadded:: 0.3\n\n   If the class has no ``__init__`` method or if the ``__init__`` method's\n   docstring is empty, but the class has a ``__new__`` method's docstring,\n   it is used instead.\n\n   .. versionadded:: 1.4\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:406: WARNING: Unknown directive type \"confval\".\n\n.. confval:: autodoc_member_order\n\n   This value selects if automatically documented members are sorted\n   alphabetical (value ``'alphabetical'``), by member type (value\n   ``'groupwise'``) or by source order (value ``'bysource'``).  The default is\n   alphabetical.\n\n   Note that for source order, the module must be a Python module with the\n   source code available.\n\n   .. versionadded:: 0.6\n   .. versionchanged:: 1.0\n      Support for ``'bysource'``.\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:420: WARNING: Unknown directive type \"confval\".\n\n.. confval:: autodoc_default_flags\n\n   This value is a list of autodoc directive flags that should be automatically\n   applied to all autodoc directives.  The supported flags are ``'members'``,\n   ``'undoc-members'``, ``'private-members'``, ``'special-members'``,\n   ``'inherited-members'``, ``'show-inheritance'``, ``'ignore-module-all'``\n   and ``'exclude-members'``.\n\n   .. versionadded:: 1.0\n\n   .. deprecated:: 1.8\n\n      Integrated into :confval:`autodoc_default_options`.\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:434: WARNING: Unknown directive type \"confval\".\n\n.. confval:: autodoc_default_options\n\n   The default options for autodoc directives.  They are applied to all autodoc\n   directives automatically.  It must be a dictionary which maps option names\n   to the values.  For example::\n\n       autodoc_default_options = {\n           'members': 'var1, var2',\n           'member-order': 'bysource',\n           'special-members': '__init__',\n           'undoc-members': True,\n           'exclude-members': '__weakref__'\n       }\n\n   Setting ``None`` or ``True`` to the value is equivalent to giving only the\n   option name to the directives.\n\n   The supported options are ``'members'``, ``'member-order'``,\n   ``'undoc-members'``, ``'private-members'``, ``'special-members'``,\n   ``'inherited-members'``, ``'show-inheritance'``, ``'ignore-module-all'``,\n   ``'imported-members'`` and ``'exclude-members'``.\n\n   .. versionadded:: 1.8\n\n   .. versionchanged:: 2.0\n      Accepts ``True`` as a value.\n\n   .. versionchanged:: 2.1\n      Added ``'imported-members'``.\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:464: WARNING: Unknown directive type \"confval\".\n\n.. confval:: autodoc_docstring_signature\n\n   Functions imported from C modules cannot be introspected, and therefore the\n   signature for such functions cannot be automatically determined.  However, it\n   is an often-used convention to put the signature into the first line of the\n   function's docstring.\n\n   If this boolean value is set to ``True`` (which is the default), autodoc will\n   look at the first line of the docstring for functions and methods, and if it\n   looks like a signature, use the line as the signature and remove it from the\n   docstring content.\n\n   If the signature line ends with backslash, autodoc considers the function has\n   multiple signatures and look at the next line of the docstring.  It is useful\n   for overloaded function.\n\n   .. versionadded:: 1.1\n   .. versionchanged:: 3.1\n\n      Support overloaded signatures\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:485: WARNING: Unknown directive type \"confval\".\n\n.. confval:: autodoc_mock_imports\n\n   This value contains a list of modules to be mocked up. This is useful when\n   some external dependencies are not met at build time and break the building\n   process. You may only specify the root package of the dependencies\n   themselves and omit the sub-modules:\n\n   .. code-block:: python\n\n      autodoc_mock_imports = [\"django\"]\n\n   Will mock all imports under the ``django`` package.\n\n   .. versionadded:: 1.3\n\n   .. versionchanged:: 1.6\n      This config value only requires to declare the top-level modules that\n      should be mocked.\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:504: WARNING: Unknown directive type \"confval\".\n\n.. confval:: autodoc_typehints\n\n   This value controls how to represents typehints.  The setting takes the\n   following values:\n\n   * ``'signature'`` -- Show typehints as its signature (default)\n   * ``'description'`` -- Show typehints as content of function or method\n   * ``'none'`` -- Do not show typehints\n\n   .. versionadded:: 2.1\n   .. versionadded:: 3.0\n\n      New option ``'description'`` is added.\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:518: WARNING: Unknown directive type \"confval\".\n\n.. confval:: autodoc_type_aliases\n\n   A dictionary for users defined `type aliases`__ that maps a type name to the\n   full-qualified object name.  It is used to keep type aliases not evaluated in\n   the document.  Defaults to empty (``{}``).\n\n   The type aliases are only available if your program enables `Postponed\n   Evaluation of Annotations (PEP 563)`__ feature via ``from __future__ import\n   annotations``.\n\n   For example, there is code using a type alias::\n\n     from __future__ import annotations\n\n     AliasType = Union[List[Dict[Tuple[int, str], Set[int]]], Tuple[str, List[str]]]\n\n     def f() -> AliasType:\n         ...\n\n   If ``autodoc_type_aliases`` is not set, autodoc will generate internal mark-up\n   from this code as following::\n\n     .. py:function:: f() -> Union[List[Dict[Tuple[int, str], Set[int]]], Tuple[str, List[str]]]\n\n        ...\n\n   If you set ``autodoc_type_aliases`` as\n   ``{'AliasType': 'your.module.TypeAlias'}``, it generates a following document\n   internally::\n\n     .. py:function:: f() -> your.module.AliasType:\n\n        ...\n\n   .. __: https://www.python.org/dev/peps/pep-0563/\n   .. __: https://mypy.readthedocs.io/en/latest/kinds_of_types.html#type-aliases\n   .. versionadded:: 3.3\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:556: WARNING: Unknown directive type \"confval\".\n\n.. confval:: autodoc_warningiserror\n\n   This value controls the behavior of :option:`sphinx-build -W` during\n   importing modules.\n   If ``False`` is given, autodoc forcedly suppresses the error if the imported\n   module emits warnings.  By default, ``True``.\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:563: WARNING: Unknown directive type \"confval\".\n\n.. confval:: autodoc_inherit_docstrings\n\n   This value controls the docstrings inheritance.\n   If set to True the docstring for classes or methods, if not explicitly set,\n   is inherited form parents.\n\n   The default is ``True``.\n\n   .. versionadded:: 1.7\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:573: WARNING: Unknown directive type \"confval\".\n\n.. confval:: suppress_warnings\n   :noindex:\n\n   :mod:`autodoc` supports to suppress warning messages via\n   :confval:`suppress_warnings`.  It allows following warnings types in\n   addition:\n\n   * autodoc\n   * autodoc.import_object\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:589: WARNING: Unknown directive type \"event\".\n\n.. event:: autodoc-process-docstring (app, what, name, obj, options, lines)\n\n   .. versionadded:: 0.4\n\n   Emitted when autodoc has read and processed a docstring.  *lines* is a list\n   of strings -- the lines of the processed docstring -- that the event handler\n   can modify **in place** to change what Sphinx puts into the output.\n\n   :param app: the Sphinx application object\n   :param what: the type of the object which the docstring belongs to (one of\n      ``\"module\"``, ``\"class\"``, ``\"exception\"``, ``\"function\"``, ``\"method\"``,\n      ``\"attribute\"``)\n   :param name: the fully qualified name of the object\n   :param obj: the object itself\n   :param options: the options given to the directive: an object with attributes\n      ``inherited_members``, ``undoc_members``, ``show_inheritance`` and\n      ``noindex`` that are true if the flag option of same name was given to the\n      auto directive\n   :param lines: the lines of the docstring, see above\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:609: WARNING: Unknown directive type \"event\".\n\n.. event:: autodoc-before-process-signature (app, obj, bound_method)\n\n   .. versionadded:: 2.4\n\n   Emitted before autodoc formats a signature for an object. The event handler\n   can modify an object to change its signature.\n\n   :param app: the Sphinx application object\n   :param obj: the object itself\n   :param bound_method: a boolean indicates an object is bound method or not\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:620: WARNING: Unknown directive type \"event\".\n\n.. event:: autodoc-process-signature (app, what, name, obj, options, signature, return_annotation)\n\n   .. versionadded:: 0.5\n\n   Emitted when autodoc has formatted a signature for an object. The event\n   handler can return a new tuple ``(signature, return_annotation)`` to change\n   what Sphinx puts into the output.\n\n   :param app: the Sphinx application object\n   :param what: the type of the object which the docstring belongs to (one of\n      ``\"module\"``, ``\"class\"``, ``\"exception\"``, ``\"function\"``, ``\"method\"``,\n      ``\"attribute\"``)\n   :param name: the fully qualified name of the object\n   :param obj: the object itself\n   :param options: the options given to the directive: an object with attributes\n      ``inherited_members``, ``undoc_members``, ``show_inheritance`` and\n      ``noindex`` that are true if the flag option of same name was given to the\n      auto directive\n   :param signature: function signature, as a string of the form\n      ``\"(parameter_1, parameter_2)\"``, or ``None`` if introspection didn't\n      succeed and signature wasn't specified in the directive.\n   :param return_annotation: function return annotation as a string of the form\n      ``\" -> annotation\"``, or ``None`` if there is no return annotation\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:644: WARNING: Unknown interpreted text role \"event\".\n/sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py:docstring of sphinx.ext.autodoc.cut_lines:10: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/extensions/autodoc.rst:657: WARNING: Unknown directive type \"event\".\n\n.. event:: autodoc-skip-member (app, what, name, obj, skip, options)\n\n   .. versionadded:: 0.5\n\n   Emitted when autodoc has to decide whether a member should be included in the\n   documentation.  The member is excluded if a handler returns ``True``.  It is\n   included if the handler returns ``False``.\n\n   If more than one enabled extension handles the ``autodoc-skip-member``\n   event, autodoc will use the first non-``None`` value returned by a handler.\n   Handlers should return ``None`` to fall back to the skipping behavior of\n   autodoc and other enabled extensions.\n\n   :param app: the Sphinx application object\n   :param what: the type of the object which the docstring belongs to (one of\n      ``\"module\"``, ``\"class\"``, ``\"exception\"``, ``\"function\"``, ``\"method\"``,\n      ``\"attribute\"``)\n   :param name: the fully qualified name of the object\n   :param obj: the object itself\n   :param skip: a boolean indicating if autodoc will skip this member if the\n      user handler does not override the decision\n   :param options: the options given to the directive: an object with attributes\n      ``inherited_members``, ``undoc_members``, ``show_inheritance`` and\n      ``noindex`` that are true if the flag option of same name was given to the\n      auto directive\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:119: WARNING: Unknown directive type \"todo\".\n\n.. todo:: Update the below link when we add new guides on these.\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:161: WARNING: Unknown directive type \"todo\".\n\n.. todo:: Move this whole section into a guide on rST or directives\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:252: WARNING: Unknown directive type \"todo\".\n\n.. todo:: Move this entire doc to a different section\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:262: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:297: WARNING: Unknown directive type \"todo\".\n\n.. todo:: Move this doc to another section\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:308: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:308: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:312: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:317: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:347: WARNING: image file not readable: _static/more.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:13: WARNING: Unknown directive type \"todo\".\n\n.. todo:: Populate when the 'builders' document is split up.\n/sphinx-doc__sphinx/doc/usage/theming.rst:39: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:46: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:57: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:161: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:168: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:176: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:183: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:296: WARNING: Unknown interpreted text role \"confval\".\n/sphinx-doc__sphinx/doc/usage/theming.rst:117: WARNING: image file not readable: _static/themes/alabaster.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:118: WARNING: image file not readable: _static/themes/classic.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:119: WARNING: image file not readable: _static/themes/sphinxdoc.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:120: WARNING: image file not readable: _static/themes/scrolls.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:121: WARNING: image file not readable: _static/themes/agogo.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:122: WARNING: image file not readable: _static/themes/traditional.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:123: WARNING: image file not readable: _static/themes/nature.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:124: WARNING: image file not readable: _static/themes/haiku.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:125: WARNING: image file not readable: _static/themes/pyramid.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:126: WARNING: image file not readable: _static/themes/bizstyle.png\n/sphinx-doc__sphinx/doc/usage/theming.rst:347: WARNING: image file not readable: _static/themes/sphinx_rtd_theme.png\nWARNING: autodoc: failed to import module 'autodoc_dummy_module'; the following exception was raised:\nNo module named 'autodoc_dummy_module'\nWARNING: autodoc: failed to import module 'autodoc_dummy_foo' from module 'bug2437'; the following exception was raised:\nNo module named 'bug2437'\nWARNING: autodoc: failed to import module 'autodoc_dummy_bar'; the following exception was raised:\nNo module named 'autodoc_dummy_bar'\nWARNING: autodoc: failed to import function 'typehints.incr' from module 'target'; the following exception was raised:\nNo module named 'target'\nWARNING: autodoc: failed to import function 'typehints.tuple_args' from module 'target'; the following exception was raised:\nNo module named 'target'\nWARNING: autodoc: failed to import module 'coverage_ignored'; the following exception was raised:\nNo module named 'coverage_ignored'\nWARNING: autodoc: failed to import module 'coverage_not_ignored'; the following exception was raised:\nNo module named 'coverage_not_ignored'\nWARNING: autodoc: failed to import module 'bar' from module 'dir'; the following exception was raised:\nNo module named 'dir'\nWARNING: autodoc: failed to import module 'foo'; the following exception was raised:\nNo module named 'foo'\nWARNING: autodoc: failed to import function 'func1' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'func2' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'mod1.func1' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'mod2.func2' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'Class1' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'Class2' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'mod1.Class1' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import function 'mod2.Class2' from module 'spam'; the following exception was raised:\nNo module named 'spam'\n/sphinx-doc__sphinx/tests/roots/test-ext-viewcode/index.rst:23: WARNING: Object named 'func1' not found in include file '/sphinx-doc__sphinx/tests/roots/test-ext-viewcode/spam/__init__.py'\nWARNING: autodoc: failed to import class 'mod3.Class3' from module 'spam'; the following exception was raised:\nNo module named 'spam'\nWARNING: autodoc: failed to import module 'mod3' from module 'spam'; the following exception was raised:\nNo module named 'spam'\n/sphinx-doc__sphinx/tests/roots/test-latex-labels/index.rst:10: WARNING: image file not readable: tests/roots/test-latex-labels/logo.jpg\n/sphinx-doc__sphinx/tests/roots/test-latex-labels/index.rst:14: WARNING: image file not readable: tests/roots/test-latex-labels/logo.jpg\n/sphinx-doc__sphinx/tests/roots/test-latex-title/index.rst:8: WARNING: toctree contains reference to nonexisting document 'tests/roots/test-latex-title/foo'\n/sphinx-doc__sphinx/tests/roots/test-latex-title/index.rst:8: WARNING: toctree contains reference to nonexisting document 'tests/roots/test-latex-title/bar'\n/sphinx-doc__sphinx/tests/roots/test-prolog/index.rst:4: WARNING: toctree contains reference to nonexisting document 'tests/roots/test-prolog/markdown'\n/sphinx-doc__sphinx/tests/roots/test-roles-download/index.rst:6: WARNING: download file not readable: /sphinx-doc__sphinx/tests/roots/test-roles-download/not_found.dat\nWARNING: autodoc: failed to import module 'autodoc_fodder'; the following exception was raised:\nNo module named 'autodoc_fodder'\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:19: WARNING: Encoding 'utf-8-sig' used for reading included file '/sphinx-doc__sphinx/tests/roots/test-warnings/wrongenc.inc' seems to be wrong, try giving an :encoding: option\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:27: WARNING: invalid single index entry ''\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:10: WARNING: image file not readable: tests/roots/test-warnings/foo.png\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:24: WARNING: download file not readable: /sphinx-doc__sphinx/tests/roots/test-warnings/nonexisting.png\n/sphinx-doc__sphinx/tests/roots/test-numbered-circular/sub.rst:1: WARNING: tests/roots/test-numbered-circular/index is already assigned section numbers (nested numbered toctree?)\n/sphinx-doc__sphinx/tests/roots/test-toctree-maxdepth/index.rst:4: WARNING: tests/roots/test-toctree-maxdepth/foo is already assigned section numbers (nested numbered toctree?)\n/sphinx-doc__sphinx/tests/roots/test-toctree-maxdepth/index.rst:4: WARNING: tests/roots/test-toctree-maxdepth/bar is already assigned section numbers (nested numbered toctree?)\n/sphinx-doc__sphinx/CONTRIBUTING.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/README.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/doc/contents.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/sphinx/ext/autosummary/templates/autosummary/base.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/sphinx/ext/autosummary/templates/autosummary/class.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/sphinx/ext/autosummary/templates/autosummary/module.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-add_enumerable_node/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-api-set-translator/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-autosummary/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-autosummary/sphinx.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-basic/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-build-html-translator/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-builder-dirhtml/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-builder-gettext-dont-rebuild-mo/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-changes/contents.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-correct-year/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-default_role/foo.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-default_role/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-directive-code/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-directive-only/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-directives-raw/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-docutilsconf/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-c/anon-dup-decl.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-c/function_param_target.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-c/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-c/namespace.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-c/semicolon.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/anon-dup-decl.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/any-role.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/backslash.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/lookup-key-overload.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/multi-decl-lookup.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/roles.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/roles-targets-ok.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/roles-targets-warn.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/roles2.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/semicolon.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/warn-template-param-qualified-name.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-cpp/xref_consistency.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-js/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-py/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-domain-py/module_option.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-double-inheriting-theme/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-epub-anchor-id/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autodoc/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosectionlabel-prefix-document/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosectionlabel/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-filename-map/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-imported_members/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-mock_imports/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-recursive/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-skip-member/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-template/_templates/empty.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary-template/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-autosummary/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-coverage/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-doctest-with-autodoc/dir/inner.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-doctest-with-autodoc/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-githubpages/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-graphviz/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-ifconfig/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-imgconverter/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-inheritance_diagram/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-intersphinx-cppdomain/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-math-compat/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-math-simple/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-math/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-todo/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-viewcode-find/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-ext-viewcode/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-footnotes/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-gettext-template/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-glossary/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_assets/extra/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_assets/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_assets/static/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_entity/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_scaled_image_link/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-html_style/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-image-in-parsed-literal/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-image-in-section/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-images/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-images/subdir/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-index_on_title/contents.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-inheritance/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-keep_warnings/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-babel/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-equations/equations.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-figure-in-admonition/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-includegraphics/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-index/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-labels/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-numfig/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-table/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-theme/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-title/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-latex-unicode/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-linkcheck-localserver/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-manpage_url/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-markup-citation/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-markup-rubric/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-maxlistdepth/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-metadata/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-need-escaped/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-nested-enumerated-list/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-nested-tables/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-numfig/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-productionlist/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-prolog/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-pycode-egg/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-reST-code-block/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-refonly_bullet_list/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-roles-download/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-search/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-search/nosearch.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-smartquotes/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-stylesheets/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-templating/_templates/autosummary/class.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-theming/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-tocdepth/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-duplicated/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-empty/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-glob/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-glob/quux.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-maxdepth/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree-maxdepth/qux.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree/qux.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-toctree/tocdepth.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-trim_doctest_flags/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst: WARNING: document isn't included in any toctree\n/sphinx-doc__sphinx/doc/usage/index.rst:5: WARNING: unknown document: /development/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:5: WARNING: unknown document: /usage/restructuredtext/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:5: WARNING: unknown document: /usage/markdown\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:12: WARNING: unknown document: /usage/restructuredtext/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:12: WARNING: unknown document: /development/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:18: WARNING: unknown document: /usage/installation\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:18: WARNING: unknown document: /usage/restructuredtext/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:121: WARNING: unknown document: /usage/restructuredtext/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:140: WARNING: unknown document: /man/sphinx-build\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:223: WARNING: unknown document: /usage/restructuredtext/domains\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:248: WARNING: unknown document: /usage/configuration\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:332: WARNING: unknown document: /usage/extensions/index\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:334: WARNING: unknown document: /usage/theming\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:335: WARNING: unknown document: /usage/advanced/setuptools\n/sphinx-doc__sphinx/doc/usage/quickstart.rst:343: WARNING: unknown document: /man/sphinx-build\n/sphinx-doc__sphinx/doc/usage/theming.rst:23: WARNING: unknown document: /development/theming\n/sphinx-doc__sphinx/doc/usage/theming.rst:83: WARNING: unknown document: /development/theming\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:41: WARNING: unknown option: &option\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:45: WARNING: citation not found: missing\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:13: WARNING: a suitable image for html builder not found: tests/roots/test-warnings/foo.*\n/sphinx-doc__sphinx/tests/roots/test-warnings/index.rst:33: WARNING: Could not lex literal_block as \"c\". Highlighting skipped.\n\n(Open file: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "The Sphinx build process completed with several warnings, but it did not fail. To verify if the `autodoc_typehints` setting is respected for overloaded callables, we need to check the generated HTML documentation.\n\nLet's open the generated HTML file for the `example` module to see if the type hints are displayed correctly.\n\n```\nopen _build/index.html\n```",
      "thought": "The Sphinx build process completed with several warnings, but it did not fail. To verify if the `autodoc_typehints` setting is respected for overloaded callables, we need to check the generated HTML documentation.\n\nLet's open the generated HTML file for the `example` module to see if the type hints are displayed correctly.\n\n",
      "action": "open _build/index.html\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "[File: /sphinx-doc__sphinx/_build/index.html (100 lines total)]\n1:\n2:<!DOCTYPE html>\n3:\n4:<html>\n5:  <head>\n6:    <meta charset=\"utf-8\" />\n7:    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n8:\n9:    <title>Welcome to Example Project\u2019s documentation! &#8212; Example Project  documentation</title>\n10:    <link rel=\"stylesheet\" href=\"_static/pygments.css\" type=\"text/css\" />\n11:    <link rel=\"stylesheet\" href=\"_static/alabaster.css\" type=\"text/css\" />\n12:    <script id=\"documentation_options\" data-url_root=\"./\" src=\"_static/documentation_options.js\"></script>\n13:    <script src=\"_static/jquery.js\"></script>\n14:    <script src=\"_static/underscore.js\"></script>\n15:    <script src=\"_static/doctools.js\"></script>\n16:    <script src=\"_static/language_data.js\"></script>\n17:    <script async=\"async\" src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/latest.js?config=TeX-AMS-MML_HTMLorMML\"></script>\n18:    <link rel=\"index\" title=\"Index\" href=\"genindex.html\" />\n19:    <link rel=\"search\" title=\"Search\" href=\"search.html\" />\n20:   \n21:  <link rel=\"stylesheet\" href=\"_static/custom.css\" type=\"text/css\" />\n22:  \n23:  \n24:  <meta name=\"viewport\" content=\"width=device-width, initial-scale=0.9, maximum-scale=0.9\" />\n25:\n26:  </head><body>\n27:  \n28:\n29:    <div class=\"document\">\n30:      <div class=\"documentwrapper\">\n31:        <div class=\"bodywrapper\">\n32:          \n33:\n34:          <div class=\"body\" role=\"main\">\n35:            \n36:  <section id=\"module-example\">\n37:<span id=\"welcome-to-example-project-s-documentation\"></span><h1>Welcome to Example Project\u2019s documentation!<a class=\"headerlink\" href=\"#module-example\" title=\"Permalink to this headline\">\u00b6</a></h1>\n38:<dl class=\"py function\">\n39:<dt id=\"example.foo\">\n40:<code class=\"sig-prename descclassname\">example.</code><code class=\"sig-name descname\">foo</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#example.foo\" title=\"Permalink to this definition\">\u00b6</a></dt>\n41:<dd></dd></dl>\n42:\n43:</section>\n44:\n45:\n46:          </div>\n47:          \n48:        </div>\n49:      </div>\n50:      <div class=\"sphinxsidebar\" role=\"navigation\" aria-label=\"main navigation\">\n51:        <div class=\"sphinxsidebarwrapper\">\n52:<h1 class=\"logo\"><a href=\"#\">Example Project</a></h1>\n53:\n54:\n55:\n56:\n57:\n58:\n59:\n60:\n61:<h3>Navigation</h3>\n62:\n63:<div class=\"relations\">\n64:<h3>Related Topics</h3>\n65:<ul>\n66:  <li><a href=\"#\">Documentation overview</a><ul>\n67:  </ul></li>\n68:</ul>\n69:</div>\n70:<div id=\"searchbox\" style=\"display: none\" role=\"search\">\n71:  <h3 id=\"searchlabel\">Quick search</h3>\n72:    <div class=\"searchformwrapper\">\n73:    <form class=\"search\" action=\"search.html\" method=\"get\">\n74:      <input type=\"text\" name=\"q\" aria-labelledby=\"searchlabel\" />\n75:      <input type=\"submit\" value=\"Go\" />\n76:    </form>\n77:    </div>\n78:</div>\n79:<script>$('#searchbox').show(0);</script>\n80:        </div>\n81:      </div>\n82:      <div class=\"clearer\"></div>\n83:    </div>\n84:    <div class=\"footer\">\n85:      &copy;2023, Example Author.\n86:      \n87:      |\n88:      Powered by <a href=\"http://sphinx-doc.org/\">Sphinx 3.3.0+/2c2335bbb</a>\n89:      &amp; <a href=\"https://github.com/bitprophet/alabaster\">Alabaster 0.7.11</a>\n90:      \n91:      |\n92:      <a href=\"_sources/index.rst.txt\"\n93:          rel=\"nofollow\">Page source</a>\n94:    </div>\n95:\n96:    \n97:\n98:    \n99:  </body>\n100:</html>\n\n(Open file: /sphinx-doc__sphinx/_build/index.html)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "The generated HTML file does not show the type hints for the overloaded `foo` function, which means the `autodoc_typehints` setting is not being respected for overloaded callables.\n\nLet's investigate further by checking the `FunctionDocumenter` class in the `sphinx/ext/autodoc/__init__.py` file to ensure that the `autodoc_typehints` setting is applied correctly for overloaded callables.\n\n```\nsearch_file \"class FunctionDocumenter\" sphinx/ext/autodoc/__init__.py\n```",
      "thought": "The generated HTML file does not show the type hints for the overloaded `foo` function, which means the `autodoc_typehints` setting is not being respected for overloaded callables.\n\nLet's investigate further by checking the `FunctionDocumenter` class in the `sphinx/ext/autodoc/__init__.py` file to ensure that the `autodoc_typehints` setting is applied correctly for overloaded callables.\n\n",
      "action": "search_file \"class FunctionDocumenter\" sphinx/ext/autodoc/__init__.py\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "Found 1 matches for \"class FunctionDocumenter\" in /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py:\nLine 1196:class FunctionDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type: ignore\nEnd of matches for \"class FunctionDocumenter\" in /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py\n\n(Open file: /sphinx-doc__sphinx/_build/index.html)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "We have already examined the `FunctionDocumenter` class and made changes to the `format_signature` method to ensure that the `autodoc_typehints` setting is respected for overloaded callables. However, the changes did not produce the expected results.\n\nLet's review the `format_signature` method again to ensure that the `show_annotation` flag is set correctly when formatting the signatures of overloaded functions.\n\n```\nopen sphinx/ext/autodoc/__init__.py 1196\n```",
      "thought": "We have already examined the `FunctionDocumenter` class and made changes to the `format_signature` method to ensure that the `autodoc_typehints` setting is respected for overloaded callables. However, the changes did not produce the expected results.\n\nLet's review the `format_signature` method again to ensure that the `show_annotation` flag is set correctly when formatting the signatures of overloaded functions.\n\n",
      "action": "open sphinx/ext/autodoc/__init__.py 1196\n",
      "agent": "primary"
    },
    {
      "role": "user",
      "content": "[File: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py (2284 lines total)]\n(1180 more lines above)\n1181:    feature of stripping any function signature from the docstring.\n1182:    \"\"\"\n1183:    def format_signature(self, **kwargs: Any) -> str:\n1184:        if self.args is None and self.env.config.autodoc_docstring_signature:  # type: ignore\n1185:            # only act if a signature is not explicitly given already, and if\n1186:            # the feature is enabled\n1187:            result = self._find_signature()\n1188:            if result is not None:\n1189:                # Discarding _args is a only difference with\n1190:                # DocstringSignatureMixin.format_signature.\n1191:                # Documenter.format_signature use self.args value to format.\n1192:                _args, self.retann = result\n1193:        return super().format_signature(**kwargs)\n1194:\n1195:\n1196:class FunctionDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type: ignore\n1197:    \"\"\"\n1198:    Specialized Documenter subclass for functions.\n1199:    \"\"\"\n1200:    objtype = 'function'\n1201:    member_order = 30\n1202:\n1203:    @classmethod\n1204:    def can_document_member(cls, member: Any, membername: str, isattr: bool, parent: Any\n1205:                            ) -> bool:\n1206:        # supports functions, builtins and bound methods exported at the module level\n1207:        return (inspect.isfunction(member) or inspect.isbuiltin(member) or\n1208:                (inspect.isroutine(member) and isinstance(parent, ModuleDocumenter)))\n1209:\n1210:    def format_args(self, **kwargs: Any) -> str:\n1211:        if self.env.config.autodoc_typehints in ('none', 'description'):\n1212:            kwargs.setdefault('show_annotation', False)\n1213:\n1214:        try:\n1215:            self.env.app.emit('autodoc-before-process-signature', self.object, False)\n1216:            sig = inspect.signature(self.object, follow_wrapped=True,\n1217:                                    type_aliases=self.env.config.autodoc_type_aliases)\n1218:            args = stringify_signature(sig, **kwargs)\n1219:        except TypeError as exc:\n1220:            logger.warning(__(\"Failed to get a function signature for %s: %s\"),\n1221:                           self.fullname, exc)\n1222:            return None\n1223:        except ValueError:\n1224:            args = ''\n1225:\n1226:        if self.env.config.strip_signature_backslash:\n1227:            # escape backslashes for reST\n1228:            args = args.replace('\\\\', '\\\\\\\\')\n1229:        return args\n1230:\n1231:    def document_members(self, all_members: bool = False) -> None:\n1232:        pass\n1233:\n1234:    def add_directive_header(self, sig: str) -> None:\n1235:        sourcename = self.get_sourcename()\n1236:        super().add_directive_header(sig)\n1237:\n1238:        if inspect.iscoroutinefunction(self.object):\n1239:            self.add_line('   :async:', sourcename)\n1240:\n1241:    def format_signature(self, **kwargs: Any) -> str:\n1242:        sigs = []\n1243:        if self.analyzer and '.'.join(self.objpath) in self.analyzer.overloads:\n1244:            # Use signatures for overloaded functions instead of the implementation function.\n1245:            overloaded = True\n1246:        else:\n1247:            overloaded = False\n1248:            sig = super().format_signature(**kwargs)\n1249:            sigs.append(sig)\n1250:\n1251:        if inspect.is_singledispatch_function(self.object):\n1252:            # append signature of singledispatch'ed functions\n1253:            for typ, func in self.object.registry.items():\n1254:                if typ is object:\n1255:                    pass  # default implementation. skipped.\n1256:                else:\n1257:                    self.annotate_to_first_argument(func, typ)\n1258:\n1259:                    documenter = FunctionDocumenter(self.directive, '')\n1260:                    documenter.object = func\n1261:                    documenter.objpath = [None]\n1262:                    sigs.append(documenter.format_signature())\n1263:        if overloaded:\n1264:            __globals__ = safe_getattr(self.object, '__globals__', {})\n1265:            for overload in self.analyzer.overloads.get('.'.join(self.objpath)):\n1266:                overload = evaluate_signature(overload, __globals__,\n1267:                                              self.env.config.autodoc_type_aliases)\n1268:\n1269:                if self.env.config.autodoc_typehints in ('none', 'description'):\n1270:                    kwargs.setdefault('show_annotation', False)\n1271:                sig = stringify_signature(overload, **kwargs)\n1272:                sigs.append(sig)\n1273:        return \"\\n\".join(sigs)\n1274:\n1275:    def annotate_to_first_argument(self, func: Callable, typ: Type) -> None:\n1276:        \"\"\"Annotate type hint to the first argument of function if needed.\"\"\"\n1277:        try:\n1278:            sig = inspect.signature(func, type_aliases=self.env.config.autodoc_type_aliases)\n1279:        except TypeError as exc:\n1280:            logger.warning(__(\"Failed to get a function signature for %s: %s\"),\n(1004 more lines below)\n\n(Open file: /sphinx-doc__sphinx/sphinx/ext/autodoc/__init__.py)\n(Current directory: /sphinx-doc__sphinx)\nbash-$",
      "agent": "primary"
    },
    {
      "role": "assistant",
      "content": "Exit due to cost limit",
      "thought": "Exit due to cost limit",
      "action": "exit_cost",
      "agent": "primary"
    }
  ],
  "info": {
    "exit_status": "exit_cost",
    "model_stats": {
      "total_cost": 152.48302499999994,
      "instance_cost": 3.1487649999999996,
      "tokens_sent": 622394,
      "tokens_received": 2453,
      "api_calls": 29
    }
  }
}