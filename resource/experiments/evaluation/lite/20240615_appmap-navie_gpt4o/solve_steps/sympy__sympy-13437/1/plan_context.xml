<context>
<code-snippet location="examples/intermediate/limit_examples_advanced.ipynb:1-45">
{
 "metadata": {
  "name": "limit_examples_advanced"
 },
 "name": "limit_examples_advanced",
 "nbformat": 2,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "code",
     "collapsed": true,
     "input": "from sympy import *",
     "language": "python",
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": true,
     "input": "x = Symbol(\"x\")",
     "language": "python",
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(exp(x)*exp(x**2)*(erf(x+1/exp(x))-erf(x)), x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": "2/sqrt(pi)"
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "markdown",
     "source": "The examples here show the limit computation on exp-log expressions (from Gruntz' thesis pp. 122 to 123)"
    },
    {
     "cell_type": "markdown",
</code-snippet>
<code-snippet location="sympy/concrete/expr_with_limits.py:1-18">
from __future__ import print_function, division

from sympy.core.add import Add
from sympy.core.expr import Expr
from sympy.core.mul import Mul
from sympy.core.relational import Equality
from sympy.sets.sets import Interval
from sympy.core.singleton import S
from sympy.core.symbol import Symbol, Dummy
from sympy.core.sympify import sympify
from sympy.core.compatibility import is_sequence, range
from sympy.core.containers import Tuple
from sympy.functions.elementary.piecewise import (piecewise_fold,
    Piecewise)
from sympy.utilities import flatten
from sympy.utilities.iterables import sift
from sympy.matrices import Matrix
from sympy.tensor.indexed import Idx
</code-snippet>
<code-snippet location="examples/intermediate/limit_examples_advanced.ipynb:398-446">
"source": "Eqn 8.12"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "(3**x + 5**x)**(1/x)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 26,
       "text": "(3**x + 5**x)**(1/x)"
      }
     ],
     "prompt_number": 26
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 27,
       "text": "5"
      }
     ],
     "prompt_number": 27
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.13"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "x/log(x**(log(x**(log(2)/log(x)))))",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 28,
       "text": "x/log(x**log(x**(log(2)/log(x))))"
      }
     ],
     "prompt_number": 28
    },
    {
</code-snippet>
<code-snippet location="examples/intermediate/limit_examples_advanced.ipynb:1220-1271">
"prompt_number": 78,
       "text": "polygamma(0, polygamma(0, polygamma(0, x)))"
      }
     ],
     "prompt_number": 78
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 79,
       "text": "oo"
      }
     ],
     "prompt_number": 79
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "loggamma(loggamma(x))",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 80,
       "text": "loggamma(loggamma(x))"
      }
     ],
     "prompt_number": 80
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 81,
       "text": "oo"
      }
     ],
     "prompt_number": 81
    }
   ]
  }
 ]
}
</code-snippet>
<code-snippet location="examples/intermediate/limit_examples_advanced.ipynb:110-152">
"source": "Eqn 8.3"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "exp(exp(x-exp(-x))/(1-1/x)) - exp(exp(x))",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": "exp(exp(x - exp(-x))/(1 - 1/x)) - exp(exp(x))"
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 9,
       "text": "oo"
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.4"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "exp(exp(exp(x)/(1-1/x))) - exp(exp(exp(x)/(1-1/x-log(x)**(-log(x)))))",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 10,
</code-snippet>
<code-snippet location="examples/intermediate/limit_examples_advanced.ipynb:1074-1124">
}
     ],
     "prompt_number": 68
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 69,
       "text": "exp(-1/2)"
      }
     ],
     "prompt_number": 69
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.34"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "exp(exp(digamma(log(x))))/x",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 70,
       "text": "exp(exp(polygamma(0, log(x))))/x"
      }
     ],
     "prompt_number": 70
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 71,
       "text": "exp(-1/2)"
      }
     ],
     "prompt_number": 71
    },
    {
</code-snippet>
<code-snippet location="examples/intermediate/limit_examples_advanced.ipynb:1114-1161">
"language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 71,
       "text": "exp(-1/2)"
      }
     ],
     "prompt_number": 71
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.35"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "exp(exp(exp(digamma(digamma(digamma(x))))))/x",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 72,
       "text": "exp(exp(exp(polygamma(0, polygamma(0, polygamma(0, x))))))/x"
      }
     ],
     "prompt_number": 72
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 73,
       "text": "0"
      }
     ],
     "prompt_number": 73
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.36"
    },
    {
     "cell_type": "code",
</code-snippet>
<code-snippet location="examples/intermediate/limit_examples_advanced.ipynb:673-714">
"input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 43,
       "text": "E"
      }
     ],
     "prompt_number": 43
    },
    {
     "cell_type": "markdown",
     "source": "The following examples show limit computation on special functions (from Gruntz' thesis p. 126)"
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.21"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "exp(x)*(sin(1/x+exp(-x))-sin(1/x+exp(-x**2)))",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 44,
       "text": "(sin(exp(-x) + 1/x) - sin(exp(-x**2) + 1/x))*exp(x)"
      }
     ],
     "prompt_number": 44
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 45,
</code-snippet>
<code-snippet location="examples/intermediate/limit_examples_advanced.ipynb:1036-1082">
"language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 66,
       "text": "exp(-x)*log(gamma(gamma(x)))"
      }
     ],
     "prompt_number": 66
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 67,
       "text": "oo"
      }
     ],
     "prompt_number": 67
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.33"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "exp(exp(digamma(digamma(x))))/x",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 68,
       "text": "exp(exp(polygamma(0, polygamma(0, x))))/x"
      }
     ],
     "prompt_number": 68
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
</code-snippet>
<code-snippet location="examples/intermediate/limit_examples_advanced.ipynb:1000-1041">
{
     "cell_type": "code",
     "collapsed": false,
     "input": "gamma(x+1)/sqrt(2*pi) - exp(-x)*(x**(x+S(1)/2) + x**(x-S(1)/2)/12)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 64,
       "text": "-(x**(x - 1/2)/12 + x**(x + 1/2))*exp(-x) + sqrt(2)*gamma(x + 1)/(2*sqrt(pi))"
      }
     ],
     "prompt_number": 64
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 65,
       "text": "oo"
      }
     ],
     "prompt_number": 65
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.32"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "log(gamma(gamma(x)))/exp(x)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 66,
       "text": "exp(-x)*log(gamma(gamma(x)))"
</code-snippet>
<code-snippet location="examples/intermediate/limit_examples_advanced.ipynb:257-305">
"input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 17,
       "text": "1"
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.8"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "exp(exp(x)) / exp(exp(x-exp(-exp(exp(x)))))",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 18,
       "text": "exp(exp(x))*exp(-exp(x - exp(-exp(exp(x)))))"
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 19,
       "text": "1"
      }
     ],
     "prompt_number": 19
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.9"
    },
    {
     "cell_type": "code",
</code-snippet>
<code-snippet location="examples/intermediate/limit_examples_advanced.ipynb:707-752">
"cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 45,
       "text": "1"
      }
     ],
     "prompt_number": 45
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.22"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "exp(exp(x)) * (exp(sin(1/x+exp(-exp(x)))) - exp(sin(1/x)))",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 46,
       "text": "(-exp(sin(1/x)) + exp(sin(exp(-exp(x)) + 1/x)))*exp(exp(x))"
      }
     ],
     "prompt_number": 46
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 47,
       "text": "1"
      }
     ],
     "prompt_number": 47
    },
    {
</code-snippet>
<code-snippet location="examples/intermediate/limit_examples_advanced.ipynb:853-897">
"output_type": "pyout",
       "prompt_number": 54,
       "text": "(-gamma(x) + gamma(x + exp(-x)))*exp(x)"
      }
     ],
     "prompt_number": 54
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 55,
       "text": "oo"
      }
     ],
     "prompt_number": 55
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.27"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "exp(gamma(x-exp(-x))*exp(1/x)) - exp(gamma(x))",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 56,
       "text": "exp(exp(1/x)*gamma(x - exp(-x))) - exp(gamma(x))"
      }
     ],
     "prompt_number": 56
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "#limit(_, x, oo)",
     "language": "python",
     "outputs": [],
</code-snippet>
<code-snippet location="examples/intermediate/limit_examples_advanced.ipynb:742-789">
"language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 47,
       "text": "1"
      }
     ],
     "prompt_number": 47
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.23"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "(erf(x-exp(-exp(x))) - erf(x)) * exp(exp(x)) * exp(x**2)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 48,
       "text": "(-erf(x) + erf(x - exp(-exp(x))))*exp(x**2)*exp(exp(x))"
      }
     ],
     "prompt_number": 48
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 49,
       "text": "-2/sqrt(pi)"
      }
     ],
     "prompt_number": 49
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.24"
    },
    {
     "cell_type": "code",
</code-snippet>
<code-snippet location="examples/intermediate/limit_examples_advanced.ipynb:218-265">
}
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 15,
       "text": "oo"
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.7"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "exp(exp(exp(x))) / exp(exp(exp(x-exp(-exp(exp(x))))))",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 16,
       "text": "exp(exp(exp(x)))*exp(-exp(exp(x - exp(-exp(exp(x))))))"
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 17,
       "text": "1"
      }
     ],
</code-snippet>
<code-snippet location="examples/intermediate/limit_examples_advanced.ipynb:147-187">
"input": "exp(exp(exp(x)/(1-1/x))) - exp(exp(exp(x)/(1-1/x-log(x)**(-log(x)))))",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 10,
       "text": "exp(exp(exp(x)/(1 - 1/x))) - exp(exp(exp(x)/(1 - log(x)**(-log(x)) - 1/x)))"
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 11,
       "text": "-oo"
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.5"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "exp(exp(exp(x+exp(-x)))) / exp(exp(exp(x)))",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 12,
       "text": "exp(-exp(exp(x)))*exp(exp(exp(x + exp(-x))))"
      }
     ],
</code-snippet>
<code-snippet location="examples/intermediate/limit_examples_advanced.ipynb:639-681">
"cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 41,
       "text": "1"
      }
     ],
     "prompt_number": 41
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.20"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "exp((log(log(x+exp(log(x)*log(log(x)))))) / (log(log(log(exp(x)+x+log(x))))))",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 42,
       "text": "exp(log(log(x + exp(log(x)*log(log(x)))))/log(log(log(x + exp(x) + log(x)))))"
      }
     ],
     "prompt_number": 42
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 43,
       "text": "E"
      }
     ],
</code-snippet>
<code-snippet location="sympy/series/limits.py:1-14">
from __future__ import print_function, division

from sympy.core import S, Symbol, Add, sympify, Expr, PoleError, Mul
from sympy.core.compatibility import string_types
from sympy.core.symbol import Dummy
from sympy.functions.combinatorial.factorials import factorial
from sympy.core.numbers import GoldenRatio
from sympy.functions.combinatorial.numbers import fibonacci
from sympy.functions.special.gamma_functions import gamma
from sympy.series.order import Order
from .gruntz import gruntz
from sympy.core.exprtools import factor_terms
from sympy.simplify.ratsimp import ratsimp
from sympy.polys import PolynomialError
</code-snippet>
<code-snippet location="examples/intermediate/limit_examples_advanced.ipynb:437-480">
"outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 28,
       "text": "x/log(x**log(x**(log(2)/log(x))))"
      }
     ],
     "prompt_number": 28
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 29,
       "text": "oo"
      }
     ],
     "prompt_number": 29
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.14"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "exp(exp(2*log(x**5+x)*log(log(x)))) / exp(exp(10*log(x)*log(log(x))))",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 30,
       "text": "exp(-exp(10*log(x)*log(log(x))))*exp(exp(2*log(x**5 + x)*log(log(x))))"
      }
     ],
     "prompt_number": 30
    },
    {
     "cell_type": "code",
     "collapsed": false,
</code-snippet>
<code-snippet location="examples/intermediate/limit_examples_advanced.ipynb:180-225">
"language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 12,
       "text": "exp(-exp(exp(x)))*exp(exp(exp(x + exp(-x))))"
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 13,
       "text": "oo"
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.6"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "exp(exp(exp(x))) / exp(exp(exp(x-exp(-exp(x)))))",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 14,
       "text": "exp(exp(exp(x)))*exp(-exp(exp(x - exp(-exp(x)))))"
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
</code-snippet>
<code-snippet location="examples/intermediate/limit_examples_advanced.ipynb:602-646">
}
     ],
     "prompt_number": 38
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 39,
       "text": "2"
      }
     ],
     "prompt_number": 39
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.19"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "log(x)*(log(log(x)+log(log(x))) - log(log(x))) / (log(log(x)+log(log(log(x)))))",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 40,
       "text": "(log(log(x) + log(log(x))) - log(log(x)))*log(x)/log(log(x) + log(log(log(x))))"
      }
     ],
     "prompt_number": 40
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 41,
</code-snippet>
<code-snippet location="sympy/geometry/curve.py:1-18">
"""Curves in 2-dimensional Euclidean space.

Contains
========
Curve

"""

from __future__ import division, print_function

from sympy import sqrt
from sympy.core import sympify, diff
from sympy.core.compatibility import is_sequence
from sympy.core.containers import Tuple
from sympy.core.symbol import _symbol
from sympy.geometry.entity import GeometryEntity, GeometrySet
from sympy.geometry.point import Point
from sympy.integrals import integrate
</code-snippet>
<code-snippet location="examples/intermediate/limit_examples_advanced.ipynb:359-406">
"text": "1/3"
      }
     ],
     "prompt_number": 23
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.11"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "(exp(x*exp(-x)/(exp(-x)+exp(-2*x**2/(x+1)))) - exp(x))/x",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 24,
       "text": "(-exp(x) + exp(x*exp(-x)/(exp(-2*x**2/(x + 1)) + exp(-x))))/x"
      }
     ],
     "prompt_number": 24
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 25,
       "text": "-exp(2)"
      }
     ],
     "prompt_number": 25
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.12"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "(3**x + 5**x)**(1/x)",
     "language": "python",
     "outputs": [
      {
</code-snippet>
<code-snippet location="examples/intermediate/limit_examples_advanced.ipynb:537-580">
"text": "(-exp(x) + exp(4*x*exp(-x)/(exp(-2*x**2/(x + 1)) + exp(-x))))*exp(-4*x)"
      }
     ],
     "prompt_number": 34
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 35,
       "text": "1"
      }
     ],
     "prompt_number": 35
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.17"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "exp(x*exp(-x)/(exp(-x)+exp(-2*x**2/(x+1))))/exp(x)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 36,
       "text": "exp(-x)*exp(x*exp(-x)/(exp(-2*x**2/(x + 1)) + exp(-x)))"
      }
     ],
     "prompt_number": 36
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
</code-snippet>
<code-snippet location="examples/intermediate/limit_examples_advanced.ipynb:965-1006">
"cell_type": "markdown",
     "source": "Eqn 8.30"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "((gamma(x+1/gamma(x)) - gamma(x))/log(x) - cos(1/x))*x*log(x)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 62,
       "text": "x*((-gamma(x) + gamma(x + 1/gamma(x)))/log(x) - cos(1/x))*log(x)"
      }
     ],
     "prompt_number": 62
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 63,
       "text": "-1/2"
      }
     ],
     "prompt_number": 63
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.31"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "gamma(x+1)/sqrt(2*pi) - exp(-x)*(x**(x+S(1)/2) + x**(x-S(1)/2)/12)",
     "language": "python",
     "outputs": [
      {
</code-snippet>
<code-snippet location="examples/intermediate/limit_examples_advanced.ipynb:888-937">
}
     ],
     "prompt_number": 56
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "#limit(_, x, oo)",
     "language": "python",
     "outputs": [],
     "prompt_number": 57
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.28"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "(gamma(x+1/gamma(x)) - gamma(x)) / log(x)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 58,
       "text": "(-gamma(x) + gamma(x + 1/gamma(x)))/log(x)"
      }
     ],
     "prompt_number": 58
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "limit(_, x, oo)",
     "language": "python",
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 59,
       "text": "1"
      }
     ],
     "prompt_number": 59
    },
    {
     "cell_type": "markdown",
     "source": "Eqn 8.29"
    },
    {
     "cell_type": "code",
</code-snippet>
</context>