diff --git a/sympy/assumptions/handlers/sets.py b/sympy/assumptions/handlers/sets.py
index c531991b7b..e8bad342c5 100644
--- a/sympy/assumptions/handlers/sets.py
+++ b/sympy/assumptions/handlers/sets.py
@@ -294,10 +294,19 @@ def Pow(expr, assumptions):
 
     @staticmethod
     def sin(expr, assumptions):
-        if ask(Q.real(expr.args[0]), assumptions):
+        arg = expr.args[0]
+        if ask(Q.real(arg), assumptions):
+            return True
+        if arg.is_Rational and arg.q != 1:
             return True
 
-    cos = sin
+    @staticmethod
+    def cos(expr, assumptions):
+        arg = expr.args[0]
+        if ask(Q.real(arg), assumptions):
+            return True
+        if arg.is_Rational and arg.q != 1:
+            return True
 
     @staticmethod
     def exp(expr, assumptions):
diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py
index 421bfba0a7..4649bdf015 100644
--- a/sympy/simplify/simplify.py
+++ b/sympy/simplify/simplify.py
@@ -584,8 +584,12 @@ def shorter(*choices):
         expr = besselsimp(expr)
 
     if expr.has(TrigonometricFunction, HyperbolicFunction):
+        from sympy import sin, cos  # Adding imports for undefined names
         expr = trigsimp(expr, deep=True)
-
+        # Additional logic to handle rational multiples of pi for trigonometric functions
+        expr = expr.replace(sin, lambda arg: sin(arg).rewrite(cos) if isinstance(arg, Rational) and arg.q != 1 else sin(arg))
+        expr = expr.replace(cos, lambda arg: cos(arg).rewrite(sin) if isinstance(arg, Rational) and arg.q != 1 else cos(arg))
+        
     if expr.has(log):
         expr = shorter(expand_log(expr, deep=True), logcombine(expr))
 
