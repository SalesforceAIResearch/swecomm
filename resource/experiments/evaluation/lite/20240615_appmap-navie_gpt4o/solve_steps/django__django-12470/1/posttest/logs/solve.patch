diff --git a/django/db/models/options.py b/django/db/models/options.py
index f027a74976..ff2428600e 100644
--- a/django/db/models/options.py
+++ b/django/db/models/options.py
@@ -229,13 +229,20 @@ class Options:
                 )
             except StopIteration:
                 raise FieldDoesNotExist("%s has no field named '%s'" % (self.object_name, query))
-
+    
             self.ordering = ('_order',)
             if not any(isinstance(field, OrderWrt) for field in model._meta.local_fields):
                 model.add_to_class('_order', OrderWrt())
         else:
             self.order_with_respect_to = None
-
+    
+        # Inherit ordering from parents if not explicitly set
+        if not self.ordering:
+            for parent in self.parents:
+                if parent._meta.ordering:
+                    self.ordering = parent._meta.ordering
+                    break
+    
         if self.pk is None:
             if self.parents:
                 # Promote the first parent link in lieu of adding yet another
@@ -761,7 +768,7 @@ class Options:
         # This helper function is used to allow recursion in ``get_fields()``
         # implementation and to provide a fast way for Django's internals to
         # access specific subsets of fields.
-
+    
         # We must keep track of which models we have already seen. Otherwise we
         # could include the same field multiple times from different models.
         topmost_call = seen_models is None
