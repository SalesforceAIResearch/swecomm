diff --git a/src/_pytest/compat.py b/src/_pytest/compat.py
index 2c964f473..90c619061 100644
--- a/src/_pytest/compat.py
+++ b/src/_pytest/compat.py
@@ -157,6 +157,8 @@ _non_printable_ascii_translate_table.update(
 
 
 def _translate_non_printable(s):
+    if isinstance(s, bytes):
+        return ''.join('\\x{:02x}'.format(b) for b in s)
     return s.translate(_non_printable_ascii_translate_table)
 
 
@@ -168,7 +170,7 @@ def _bytes_to_ascii(val):
 
 
 def ascii_escaped(val):
-    """If val is pure ascii, returns it as a str().  Otherwise, escapes
+    """If val is pure ascii, returns it as a str(). Otherwise, escapes
     bytes objects into a sequence of escaped bytes:
 
     b'\xc3\xb4\xc5\xd6' -> '\\xc3\\xb4\\xc5\\xd6'
@@ -183,12 +185,11 @@ def ascii_escaped(val):
        valid utf-8 unicode if it finds them in bytes, but we
        want to return escaped bytes for any byte, even if they match
        a utf-8 string.
-
     """
     if isinstance(val, bytes):
-        ret = _bytes_to_ascii(val)
+        ret = val.decode("latin1")
     else:
-        ret = val.encode("unicode_escape").decode("ascii")
+        ret = val.encode("unicode_escape").decode("latin1")
     return _translate_non_printable(ret)
 
 
