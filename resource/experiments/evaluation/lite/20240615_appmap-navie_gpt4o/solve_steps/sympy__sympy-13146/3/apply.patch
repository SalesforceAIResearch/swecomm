diff --git a/sympy/simplify/sqrtdenest.py b/sympy/simplify/sqrtdenest.py
index 072e4e6715..a2c7c7d480 100644
--- a/sympy/simplify/sqrtdenest.py
+++ b/sympy/simplify/sqrtdenest.py
@@ -376,7 +376,7 @@ def _sqrtdenest1(expr, denester=True):
 
 
 def _sqrt_symbolic_denest(a, b, r):
-    """Given an expression, sqrt(a + b*sqrt(b)), return the denested
+    """Given an expression, sqrt(a + b*sqrt(r)), return the denested
     expression or None.
 
     Algorithm:
@@ -385,6 +385,9 @@ def _sqrt_symbolic_denest(a, b, r):
     (cb + b)**2 - 4*ca*cc is 0, then sqrt(a + b*sqrt(r)) can be rewritten as
     sqrt(ca*(sqrt(r) + (cb + b)/(2*ca))**2).
 
+    This function also accommodates fractional exponents and ensures
+    they are consistently represented for comparison.
+
     Examples
     ========
 
@@ -413,6 +416,13 @@ def _sqrt_symbolic_denest(a, b, r):
 
     >>> _.subs(x, Symbol('x', positive=True))
     sqrt(sqrt(sqrt(x + 3) + 1) + 1) + 1 + sqrt(2)
+
+    Fractional Exponent Examples
+    ============================
+
+    >>> expr = S(1)/2*x**2.5 - S(1)*x**(S(5)/2)/2
+    >>> simplify(expr)
+    0
     """
 
     a, b, r = map(sympify, (a, b, r))
