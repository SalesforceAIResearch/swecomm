diff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py
index c2623f099f..355511aedc 100644
--- a/django/db/models/query_utils.py
+++ b/django/db/models/query_utils.py
@@ -40,10 +40,21 @@ class Q(tree.Node):
     def __init__(self, *args, _connector=None, _negated=False, **kwargs):
         super().__init__(children=[*args, *sorted(kwargs.items())], connector=_connector, negated=_negated)
 
+    def _make_pickleable(self, obj):
+        if isinstance(obj, dict) and any(isinstance(k, type(dict().keys())) for k in obj.keys()):
+            obj = {k if not isinstance(k, type(dict().keys())) else list(k): v for k, v in obj.items()}
+        elif isinstance(obj, type(dict().keys())):  # In case obj itself is dict_keys
+            obj = list(obj)
+        return obj
+
     def _combine(self, other, conn):
         if not isinstance(other, Q):
             raise TypeError(other)
 
+        # Make self and other pickleable
+        self = self._make_pickleable(self)
+        other = self._make_pickleable(other)
+
         # If the other Q() is empty, ignore it and just use `self`.
         if not other:
             return copy.deepcopy(self)
