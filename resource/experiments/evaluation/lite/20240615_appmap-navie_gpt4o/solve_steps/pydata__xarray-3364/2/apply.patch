diff --git a/xarray/core/concat.py b/xarray/core/concat.py
index ecae2566..4acf503d 100644
--- a/xarray/core/concat.py
+++ b/xarray/core/concat.py
@@ -16,6 +16,7 @@ def concat(
     positions=None,
     fill_value=dtypes.NA,
     join="outer",
+    ignore_missing_vars=False,
 ):
     """Concatenate xarray objects along a new or existing dimension.
 
@@ -128,7 +129,7 @@ def concat(
             "can only concatenate xarray Dataset and DataArray "
             "objects, got %s" % type(first_obj)
         )
-    return f(objs, dim, data_vars, coords, compat, positions, fill_value, join)
+    return f(objs, dim, data_vars, coords, compat, positions, fill_value, join, ignore_missing_vars)
 
 
 def _calc_concat_dim_coord(dim):
@@ -311,13 +312,21 @@ def _dataset_concat(
     if variables_to_merge:
         to_merge = {var: [] for var in variables_to_merge}
 
+        if ignore_missing_vars:
+            all_vars = set().union(*(ds.variables for ds in datasets))
+            variables_to_merge.update(all_vars - set(result_vars))
+
         for ds in datasets:
             absent_merge_vars = variables_to_merge - set(ds.variables)
             if absent_merge_vars:
-                raise ValueError(
-                    "variables %r are present in some datasets but not others. "
-                    % absent_merge_vars
-                )
+                if ignore_missing_vars:
+                    for var in absent_merge_vars:
+                        ds[var] = Variable((), fill_value)
+                else:
+                    raise ValueError(
+                        "variables %r are present in some datasets but not others. "
+                        % absent_merge_vars
+                    )
 
             for var in variables_to_merge:
                 to_merge[var].append(ds.variables[var])
