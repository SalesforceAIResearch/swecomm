diff --git a/requests/exceptions.py b/requests/exceptions.py
index 89135a80..d82e1f84 100644
--- a/requests/exceptions.py
+++ b/requests/exceptions.py
@@ -8,6 +8,8 @@ This module contains the set of Requests' exceptions.
 
 """
 from .packages.urllib3.exceptions import HTTPError as BaseHTTPError
+from .packages.urllib3.exceptions import DecodeError as BaseDecodeError
+from .packages.urllib3.exceptions import TimeoutError as BaseTimeoutError
 
 
 class RequestException(IOError):
@@ -87,6 +89,28 @@ class ChunkedEncodingError(RequestException):
     """The server declared chunked encoding but sent an invalid chunk."""
 
 
+class ContentDecodingError(RequestException, BaseHTTPError):
+    """Failed to decode response content"""
+
+    def __init__(self, *args, **kwargs):
+        if 'response' in kwargs:
+            response = kwargs['response']
+            if isinstance(response.reason, BaseDecodeError):
+                kwargs['message'] = f"DecodeError: {response.reason}"
+        super(ContentDecodingError, self).__init__(*args, **kwargs)
+
+
+class RequestsTimeout(RequestException, BaseHTTPError):
+    """The request timed out"""
+
+    def __init__(self, *args, **kwargs):
+        if 'response' in kwargs:
+            response = kwargs['response']
+            if isinstance(response.reason, BaseTimeoutError):
+                kwargs['message'] = f"TimeoutError: {response.reason}"
+        super(RequestsTimeout, self).__init__(*args, **kwargs)
+
+
 class ContentDecodingError(RequestException, BaseHTTPError):
     """Failed to decode response content"""
 
