diff --git a/sphinx/ext/autodoc/importer.py b/sphinx/ext/autodoc/importer.py
index 477aae247..44120dedb 100644
--- a/sphinx/ext/autodoc/importer.py
+++ b/sphinx/ext/autodoc/importer.py
@@ -232,6 +232,13 @@ def get_object_members(subject: Any, objpath: List[str], attrgetter: Callable,
             if name and name not in members:
                 members[name] = Attribute(name, i == 0, INSTANCEATTR)
 
+    # Include annotation only members from superclasses
+    for cls in getmro(subject)[1:]:
+        for name in getannotations(cls):
+            unmangled = unmangle(cls, name)
+            if unmangled and unmangled not in members:
+                members[unmangled] = Attribute(unmangled, False, INSTANCEATTR)
+
     if analyzer:
         # append instance attributes (cf. self.attr1) if analyzer knows
         namespace = '.'.join(objpath)
@@ -292,6 +299,13 @@ def get_class_members(subject: Any, objpath: List[str], attrgetter: Callable
         except AttributeError:
             continue
 
+    # Include annotation only members from superclasses
+    for cls in getmro(subject)[1:]:
+        for name in getannotations(cls):
+            unmangled = unmangle(cls, name)
+            if unmangled and unmangled not in members:
+                members[unmangled] = ObjectMember(unmangled, INSTANCEATTR, class_=cls)
+
     try:
         for cls in getmro(subject):
             # annotation only member (ex. attr: int)
