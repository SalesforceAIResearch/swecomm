diff --git a/django/utils/functional.py b/django/utils/functional.py
index 9e1be0fe0f..33e3ab85e5 100644
--- a/django/utils/functional.py
+++ b/django/utils/functional.py
@@ -84,6 +84,8 @@ class Promise:
     pass
 
 
+import re  # Add this import at the top of the file
+
 def lazy(func, *resultclasses):
     """
     Turn any callable into a lazy evaluated callable. result classes or types
@@ -91,6 +93,10 @@ def lazy(func, *resultclasses):
     the lazy evaluation code is triggered. Results are not memoized; the
     function is evaluated on every access.
     """
+    
+    if func is lazystr:
+        global re_camel_case
+        re_camel_case = re.compile(r'([A-Z])')
 
     @total_ordering
     class __proxy__(Promise):
@@ -400,6 +406,14 @@ class SimpleLazyObject(LazyObject):
         value.
         """
         self.__dict__["_setupfunc"] = func
+
+    def __radd__(self, other):
+        """
+        Handle reverse addition operation.
+        """
+        if self._wrapped is empty:
+            self._setup()
+        return other + self._wrapped
         super().__init__()
 
     def _setup(self):
