diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py
index af0815d41d..edd7167772 100644
--- a/lib/matplotlib/axis.py
+++ b/lib/matplotlib/axis.py
@@ -1990,40 +1990,49 @@ class Axis(martist.Artist):
     def set_ticks(self, ticks, labels=None, *, minor=False, **kwargs):
         """
         Set this Axis' tick locations and optionally labels.
-
-        If necessary, the view limits of the Axis are expanded so that all
+        
+        If necessary, the view limits of the Axis are expanded so that all 
         given ticks are visible.
-
+        
         Parameters
         ----------
         ticks : list of floats
-            List of tick locations.  The axis `.Locator` is replaced by a
+            List of tick locations.  The axis `.Locator` is replaced by a 
             `~.ticker.FixedLocator`.
-
-            Some tick formatters will not label arbitrary tick positions;
-            e.g. log formatters only label decade ticks by default. In
-            such a case you can set a formatter explicitly on the axis
-            using `.Axis.set_major_formatter` or provide formatted
+            
+            Some tick formatters will not label arbitrary tick positions; 
+            e.g. log formatters only label decade ticks by default. In 
+            such a case you can set a formatter explicitly on the axis 
+            using `.Axis.set_major_formatter` or provide formatted 
             *labels* yourself.
         labels : list of str, optional
-            List of tick labels. If not set, the labels are generated with
+            List of tick labels. If not set, the labels are generated with 
             the axis tick `.Formatter`.
         minor : bool, default: False
             If ``False``, set the major ticks; if ``True``, the minor ticks.
         **kwargs
-            `.Text` properties for the labels. These take effect only if you
+            `.Text` properties for the labels. These take effect only if you 
             pass *labels*. In other cases, please use `~.Axes.tick_params`.
-
+        
         Notes
         -----
-        The mandatory expansion of the view limits is an intentional design
-        choice to prevent the surprise of a non-visible tick. If you need
-        other limits, you should set the limits explicitly after setting the
+        The mandatory expansion of the view limits is an intentional design 
+        choice to prevent the surprise of a non-visible tick. If you need 
+        other limits, you should set the limits explicitly after setting the 
         ticks.
         """
+        # Validate kwargs even if labels is None
+        valid_text_params = [prop for prop in dir(mtext.Text) if not prop.startswith('_')]
+        for kwarg in kwargs:
+            if kwarg not in valid_text_params:
+                raise ValueError(f"Invalid Text property: {kwarg}")
+        
         result = self._set_tick_locations(ticks, minor=minor)
         if labels is not None:
             self.set_ticklabels(labels, minor=minor, **kwargs)
+        elif kwargs:
+            raise ValueError("kwargs provided but labels is None. kwargs should only be used if labels are specified.")
+        
         return result
 
     def _get_tick_boxes_siblings(self, renderer):
