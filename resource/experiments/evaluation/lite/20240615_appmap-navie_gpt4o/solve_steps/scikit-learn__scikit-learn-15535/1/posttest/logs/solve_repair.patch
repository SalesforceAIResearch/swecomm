diff --git a/sklearn/metrics/cluster/_supervised.py b/sklearn/metrics/cluster/_supervised.py
index 4bddae35c..1afd70859 100644
--- a/sklearn/metrics/cluster/_supervised.py
+++ b/sklearn/metrics/cluster/_supervised.py
@@ -19,6 +19,7 @@ from math import log
 
 import numpy as np
 from scipy import sparse as sp
+import pandas as pd  # Added import statement for pandas
 
 from ._expected_mutual_info_fast import expected_mutual_information
 from ...utils.validation import check_array, check_consistent_length
@@ -31,7 +32,25 @@ def _comb2(n):
     return comb(n, 2, exact=1)
 
 
+def _check_object_dtype_and_convert(array):
+    """Helper function to convert object dtype arrays to categorical codes."""
+    if array.dtype == np.object:
+        array = pd.Categorical(array).codes
+    return array
+
+
+import pandas as pd  # Added import statement for pandas
+
+def _check_object_dtype_and_convert(array):
+    """Helper function to convert object dtype arrays to categorical codes."""
+    if array.dtype == np.object:
+        array = pd.Categorical(array).codes
+    return array
+
+
 def check_clusterings(labels_true, labels_pred):
+    labels_true = _check_object_dtype_and_convert(labels_true)
+    labels_pred = _check_object_dtype_and_convert(labels_pred)
     """Check that the labels arrays are 1D and of same dimension.
 
     Parameters
@@ -77,6 +96,8 @@ def _generalized_average(U, V, average_method):
 
 
 def contingency_matrix(labels_true, labels_pred, eps=None, sparse=False):
+    labels_true = _check_object_dtype_and_convert(labels_true)
+    labels_pred = _check_object_dtype_and_convert(labels_pred)
     """Build a contingency matrix describing the relationship between labels.
 
     Parameters
