diff --git a/sympy/physics/quantum/hilbert.py b/sympy/physics/quantum/hilbert.py
index 727f0e6112..3b3c644e38 100644
--- a/sympy/physics/quantum/hilbert.py
+++ b/sympy/physics/quantum/hilbert.py
@@ -423,17 +423,20 @@ def _pretty(self, printer, *args):
         return pform
 
     def _latex(self, printer, *args):
-        length = len(self.args)
-        s = ''
-        for i in range(length):
-            arg_s = printer._print(self.args[i], *args)
-            if isinstance(self.args[i], (DirectSumHilbertSpace,
-                 TensorProductHilbertSpace)):
-                arg_s = r'\left(%s\right)' % arg_s
-            s = s + arg_s
-            if i != length - 1:
-                s = s + r'\otimes '
-        return s
+            length = len(self.args)
+            s = ''
+            for i in range(length):
+                arg_s = printer._print(self.args[i], *args)
+                if isinstance(self.args[i], (DirectSumHilbertSpace,
+                     TensorProductHilbertSpace)):
+                    arg_s = r'\left(%s\right)' % arg_s
+                s = s + arg_s
+                if i != length - 1:
+                    s = s + r'\otimes '
+            # Ensure consistency with pretty printer for expressions involving tensor products
+            if printer._use_unicode:
+                s = '{' + s + '}'
+            return s
 
 
 class DirectSumHilbertSpace(HilbertSpace):
@@ -646,6 +649,9 @@ def _pretty(self, printer, *args):
         return pform_base**pform_exp
 
     def _latex(self, printer, *args):
-        base = printer._print(self.base, *args)
-        exp = printer._print(self.exp, *args)
-        return r'{%s}^{\otimes %s}' % (base, exp)
+            base = printer._print(self.base, *args)
+            exp = printer._print(self.exp, *args)
+            # Ensure consistency with pretty printer for expressions involving tensor products
+            if printer._use_unicode:
+                exp = '{' + exp + '}'
+            return r'{%s}^{\otimes %s}' % (base, exp)
