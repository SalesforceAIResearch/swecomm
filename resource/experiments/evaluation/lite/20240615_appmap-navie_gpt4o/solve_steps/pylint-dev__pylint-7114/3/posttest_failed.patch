diff --git a/pylint/pyreverse/diagrams.py b/pylint/pyreverse/diagrams.py
index 7b15bf816..aa69f71fe 100644
--- a/pylint/pyreverse/diagrams.py
+++ b/pylint/pyreverse/diagrams.py
@@ -267,7 +267,30 @@ class PackageDiagram(ClassDiagram):
                 return mod
             if mod_name == f"{package.rsplit('.', 1)[0]}.{name}":
                 return mod
+                
+        # Handle case where module is directly a file
+        if self._is_present_as_file_only(name, node):
+            return self._create_package_entity_for_file_only(name, node)
+            
         raise KeyError(name)
+    
+    def _is_present_as_file_only(self, name: str, node: nodes.Module) -> bool:
+        """Check if a module name corresponds to a file directly."""
+        package = node.root().name.rsplit('.', 1)[0]
+        try:
+            if astroid.MANAGER.ast_from_file(f"{package}/{name}.py", source_file=True):
+                return True
+        except astroid.exceptions.AstroidBuildingError:
+            pass
+        return False
+    
+    def _create_package_entity_for_file_only(self, name: str, node: nodes.Module) -> PackageEntity:
+        """Create a PackageEntity for file-only modules."""
+        mod = astroid.MANAGER.ast_from_file(f"{name}.py", source_file=True)
+        package_entity = PackageEntity(title=f"{name}", node=mod)
+        self._nodes[mod] = package_entity
+        self.objects.append(package_entity)
+        return package_entity
 
     def add_from_depend(self, node: nodes.ImportFrom, from_module: str) -> None:
         """Add dependencies created by from-imports."""
