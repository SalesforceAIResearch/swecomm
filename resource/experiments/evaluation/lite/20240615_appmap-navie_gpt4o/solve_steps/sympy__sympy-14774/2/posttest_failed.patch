diff --git a/sympy/parsing/sympy_parser.py b/sympy/parsing/sympy_parser.py
index 3e0cab7d9b..51fe4a47b6 100644
--- a/sympy/parsing/sympy_parser.py
+++ b/sympy/parsing/sympy_parser.py
@@ -945,7 +945,7 @@ def parse_expr(s, local_dict=None, transformations=standard_transformations,
     code = stringify_expr(s, local_dict, global_dict, transformations)
 
     if not evaluate:
-        code = compile(evaluateFalse(code), '<string>', 'eval')
+        code = compile(evaluateFalse(code) if evaluate else code, '<string>', 'eval')
 
     return eval_expr(code, local_dict, global_dict)
 
diff --git a/sympy/physics/vector/printing.py b/sympy/physics/vector/printing.py
index 559551c7c6..a399b8323e 100644
--- a/sympy/physics/vector/printing.py
+++ b/sympy/physics/vector/printing.py
@@ -86,14 +86,15 @@ def _print_Function(self, expr, exp=None):
                 len(args) == 1 and \
                 not self._needs_function_brackets(expr.args[0])
 
-            inv_trig_table = ["asin", "acos", "atan", "acot"]
+            inv_trig_table = ["asin", "acos", "atan", "acsc", "asec", "acot"]
 
             # If the function is an inverse trig function, handle the style
             if func in inv_trig_table:
                 if inv_trig_style == "abbreviated":
                     func = func
                 elif inv_trig_style == "full":
-                    func = "arc" + func[1:]
+                    if func.startswith("a"):
+                        func = "arc" + func[1:]
                 elif inv_trig_style == "power":
                     func = func[1:]
                     inv_trig_power_case = True
