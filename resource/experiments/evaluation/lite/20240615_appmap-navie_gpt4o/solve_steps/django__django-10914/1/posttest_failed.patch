diff --git a/django/core/files/storage.py b/django/core/files/storage.py
index cbdab1de47..f208f82113 100644
--- a/django/core/files/storage.py
+++ b/django/core/files/storage.py
@@ -9,6 +9,10 @@ from django.core.files.move import file_move_safe
 from django.core.signals import setting_changed
 from django.utils import timezone
 from django.utils._os import safe_join
+
+import sys
+import locale
+import codecs
 from django.utils.crypto import get_random_string
 from django.utils.deconstruct import deconstructible
 from django.utils.encoding import filepath_to_uri
@@ -27,10 +31,13 @@ class Storage:
     A base storage class, providing some default behaviors that all other
     storage systems can inherit or override, as necessary.
     """
-
     # The following methods represent a public interface to private methods.
     # These shouldn't be overridden by subclasses unless absolutely necessary.
 
+    # Fix for encoding issue
+    def write(self, msg):
+        sys.stdout.buffer.write(msg.encode('utf-8'))
+
     def open(self, name, mode='rb'):
         """Retrieve the specified file from storage."""
         return self._open(name, mode)
@@ -47,7 +54,7 @@ class Storage:
 
         if not hasattr(content, 'chunks'):
             content = File(content, name)
-
+  
         name = self.get_available_name(name, max_length=max_length)
         return self._save(name, content)
 
@@ -280,7 +287,10 @@ class FileSystemStorage(Storage):
                 # OK, the file save worked. Break out of the loop.
                 break
 
-        if self.file_permissions_mode is not None:
+        # Apply default file permissions if file_permissions_mode is None.
+        if self.file_permissions_mode is None:
+            os.chmod(full_path, 0o644)
+        else:
             os.chmod(full_path, self.file_permissions_mode)
 
         # Store filenames with forward slashes, even on Windows.
