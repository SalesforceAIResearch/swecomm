diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py
index 737e16cc74..e841d33aee 100644
--- a/sympy/printing/latex.py
+++ b/sympy/printing/latex.py
@@ -1853,17 +1853,24 @@ def _print_PolynomialRingBase(self, expr):
         return r"%s%s\left[%s\right]" % (inv, domain, symbols)
 
     def _print_Poly(self, poly):
+        from sympy import Mul  # Add this import at the top of the function or module if not already present
+
         cls = poly.__class__.__name__
-        expr = self._print(poly.as_expr())
+        expr_terms = poly.terms()
+    
+        # Sort terms in descending order by degree
+        expr_terms.sort(key=lambda term: -sum(term[0]))
+    
+        expr = " + ".join(self._print(Mul(term[1], Mul(*[gen**exp for gen, exp in zip(poly.gens, term[0])], evaluate=False), evaluate=False)) for term in expr_terms)
         gens = list(map(self._print, poly.gens))
         domain = "domain=%s" % self._print(poly.get_domain())
-
+    
         args = ", ".join([expr] + gens + [domain])
         if cls in accepted_latex_functions:
             tex = r"\%s {\left (%s \right )}" % (cls, args)
         else:
             tex = r"\operatorname{%s}{\left( %s \right)}" % (cls, args)
-
+    
         return tex
 
     def _print_ComplexRootOf(self, root):
