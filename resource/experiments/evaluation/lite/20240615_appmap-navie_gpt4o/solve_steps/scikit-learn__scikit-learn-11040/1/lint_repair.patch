diff --git a/sklearn/neighbors/base.py b/sklearn/neighbors/base.py
index 3e5e729c2..ac9e833b7 100644
--- a/sklearn/neighbors/base.py
+++ b/sklearn/neighbors/base.py
@@ -102,11 +102,19 @@ def _get_weights(dist, weights):
 class NeighborsBase(six.with_metaclass(ABCMeta, BaseEstimator)):
     """Base class for nearest neighbors estimators."""
 
-    @abstractmethod
+    @staticmethod
+    def _validate_n_neighbors(n_neighbors):
+        if n_neighbors is not None and not isinstance(n_neighbors, int):
+            if isinstance(n_neighbors, float) and n_neighbors.is_integer():
+                n_neighbors = int(n_neighbors)
+            else:
+                raise ValueError(f"`n_neighbors` should be integer. Got {n_neighbors} instead.")
+        return n_neighbors
+
     def __init__(self, n_neighbors=None, radius=None,
                  algorithm='auto', leaf_size=30, metric='minkowski',
                  p=2, metric_params=None, n_jobs=1):
-
+                 
         self.n_neighbors = n_neighbors
         self.radius = radius
         self.algorithm = algorithm
@@ -271,6 +279,9 @@ class KNeighborsMixin(object):
     """Mixin for k-neighbors searches"""
 
     def kneighbors(self, X=None, n_neighbors=None, return_distance=True):
+        if n_neighbors is None:
+            n_neighbors = self.n_neighbors
+        self._validate_n_neighbors(n_neighbors)
         """Finds the K-neighbors of a point.
 
         Returns indices of and distances to the neighbors of each point.
