diff --git a/django/db/migrations/writer.py b/django/db/migrations/writer.py
index 4918261fb0..9f53dd7c21 100644
--- a/django/db/migrations/writer.py
+++ b/django/db/migrations/writer.py
@@ -72,6 +72,8 @@ class OperationWriter:
                 imports.update(arg_imports)
 
         imports = set()
+        models_used = False  # Placeholder to check if models.Model is used
+
         name, args, kwargs = self.operation.deconstruct()
         operation_args = get_func_args(self.operation.__init__)
 
@@ -90,6 +92,8 @@ class OperationWriter:
             arg_value = arg
             arg_name = operation_args[i]
             _write(arg_name, arg_value)
+            if isinstance(arg_value, tuple) and arg_value[1] == models.Model:
+                models_used = True  # Detect models.Model in arguments
 
         i = len(args)
         # Only iterate over remaining arguments
@@ -97,10 +101,12 @@ class OperationWriter:
             if arg_name in kwargs:  # Don't sort to maintain signature order
                 arg_value = kwargs[arg_name]
                 _write(arg_name, arg_value)
+                if arg_value == models.Model:
+                    models_used = True  # Detect models.Model in keyword arguments
 
         self.unindent()
         self.feed('),')
-        return self.render(), imports
+        return self.render(), imports, models_used
 
     def indent(self):
         self.indentation += 1
@@ -134,13 +140,15 @@ class MigrationWriter:
         }
 
         imports = set()
+        models_used = False  # Flag to indicate if models import is needed
 
         # Deconstruct operations
         operations = []
         for operation in self.migration.operations:
-            operation_string, operation_imports = OperationWriter(operation).serialize()
+            operation_string, operation_imports, operation_models_used = OperationWriter(operation).serialize()
             imports.update(operation_imports)
             operations.append(operation_string)
+            models_used = models_used or operation_models_used
         items["operations"] = "\n".join(operations) + "\n" if operations else ""
 
         # Format dependencies and write out swappable dependencies right
@@ -164,7 +172,7 @@ class MigrationWriter:
 
         # django.db.migrations is always used, but models import may not be.
         # If models import exists, merge it with migrations import.
-        if "from django.db import models" in imports:
+        if "from django.db import models" in imports or models_used:
             imports.discard("from django.db import models")
             imports.add("from django.db import migrations, models")
         else:
