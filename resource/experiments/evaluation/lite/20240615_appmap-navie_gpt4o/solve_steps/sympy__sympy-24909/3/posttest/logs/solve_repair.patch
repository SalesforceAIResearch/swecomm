diff --git a/sympy/physics/units/prefixes.py b/sympy/physics/units/prefixes.py
index ca6a642156..0469f6ddb0 100644
--- a/sympy/physics/units/prefixes.py
+++ b/sympy/physics/units/prefixes.py
@@ -82,6 +82,9 @@ def __mul__(self, other):
         from sympy.physics.units import Quantity
         if not isinstance(other, (Quantity, Prefix)):
             return super().__mul__(other)
+        
+        if other == 1:
+            return self
 
         fact = self.scale_factor * other.scale_factor
 
@@ -93,10 +96,21 @@ def __mul__(self, other):
                 if PREFIXES[p].scale_factor == fact:
                     return PREFIXES[p]
             return fact
+        
+        if isinstance(other, Quantity):
+            # New Quantity with applied prefix
+            new_name = f"{self.name}{other.name}"
+            new_abbrev = f"{self.abbrev}{other.abbrev}"
+            return Quantity(
+                new_name,
+                abbrev=new_abbrev,
+                is_prefixed=True
+            ).set_global_relative_scale_factor(fact, other)
 
         return self.scale_factor * other
 
     def __truediv__(self, other):
+        from sympy.physics.units import Quantity
         if not hasattr(other, "scale_factor"):
             return super().__truediv__(other)
 
@@ -110,6 +124,16 @@ def __truediv__(self, other):
                     return PREFIXES[p]
             return fact
 
+        if isinstance(other, Quantity):
+            # New Quantity with applied prefix
+            new_name = f"{self.name}/{other.name}"
+            new_abbrev = f"{self.abbrev}/{other.abbrev}"
+            return Quantity(
+                new_name,
+                abbrev=new_abbrev,
+                is_prefixed=True
+            ).set_global_relative_scale_factor(fact, other)
+        
         return self.scale_factor / other
 
     def __rtruediv__(self, other):
