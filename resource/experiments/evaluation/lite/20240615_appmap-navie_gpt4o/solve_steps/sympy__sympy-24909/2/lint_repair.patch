diff --git a/sympy/physics/units/prefixes.py b/sympy/physics/units/prefixes.py
index ca6a642156..5b2975348b 100644
--- a/sympy/physics/units/prefixes.py
+++ b/sympy/physics/units/prefixes.py
@@ -80,22 +80,29 @@ def __repr__(self):
 
     def __mul__(self, other):
         from sympy.physics.units import Quantity
-        if not isinstance(other, (Quantity, Prefix)):
+        if isinstance(other, Prefix):
+            return Prefix(
+                name=f"{self.name}{other.name}",
+                abbrev=f"{self.abbrev}{other.abbrev}",
+                exponent=self._exponent + other._exponent,
+                base=self.base,
+                latex_repr=self._latex_repr
+            )
+        elif isinstance(other, Quantity):
+            new_name = f"{self.name}{other.name}"
+            new_abbrev = f"{self.abbrev}{other.abbrev}"
+            new_scale_factor = self.scale_factor * other.scale_factor
+
+            new_quantity = Quantity(
+                name=new_name,
+                abbrev=new_abbrev,
+                scale_factor=new_scale_factor,
+                is_prefixed=True,
+            )
+            return new_quantity
+        else:
             return super().__mul__(other)
 
-        fact = self.scale_factor * other.scale_factor
-
-        if fact == 1:
-            return 1
-        elif isinstance(other, Prefix):
-            # simplify prefix
-            for p in PREFIXES:
-                if PREFIXES[p].scale_factor == fact:
-                    return PREFIXES[p]
-            return fact
-
-        return self.scale_factor * other
-
     def __truediv__(self, other):
         if not hasattr(other, "scale_factor"):
             return super().__truediv__(other)
