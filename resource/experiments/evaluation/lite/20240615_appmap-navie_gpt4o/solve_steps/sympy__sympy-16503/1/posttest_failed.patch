diff --git a/sympy/core/sympify.py b/sympy/core/sympify.py
index 17e8508eef..a4b2d2b147 100644
--- a/sympy/core/sympify.py
+++ b/sympy/core/sympify.py
@@ -358,12 +358,11 @@ def sympify(a, locals=None, convert_xor=True, strict=False, rational=False,
     # _sympy_ (which is a canonical and robust way to convert
     # anything to SymPy expression).
     #
-    # As a last chance, we try to take "a"'s normal form via unicode()
+    # As a last chance, we try to take "a"'s normal form via str()
     # and try to parse it. If it fails, then we have no luck and
     # return an exception
     try:
-        from .compatibility import unicode
-        a = unicode(a)
+        a = str(a)
     except Exception as exc:
         raise SympifyError(a, exc)
 
diff --git a/sympy/printing/tree.py b/sympy/printing/tree.py
index f00a344974..cedd904749 100644
--- a/sympy/printing/tree.py
+++ b/sympy/printing/tree.py
@@ -27,12 +27,20 @@ def indent(s, type=1):
             else:
                 r += "  %s\n" % a
         return r
+    
+    def calculate_height(s):
+        return s.count("\n") + 1
+
     if not subtrees:
         return ""
     f = ""
+    heights = [calculate_height(a) for a in subtrees]
+    max_height = max(heights)
+    
     for a in subtrees[:-1]:
         f += indent(a)
     f += indent(subtrees[-1], 2)
+    
     return f
 
 
