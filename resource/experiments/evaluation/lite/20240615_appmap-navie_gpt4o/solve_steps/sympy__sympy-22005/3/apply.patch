diff --git a/sympy/solvers/polysys.py b/sympy/solvers/polysys.py
index b9809fd4e9..bf56bff177 100644
--- a/sympy/solvers/polysys.py
+++ b/sympy/solvers/polysys.py
@@ -229,51 +229,51 @@ def _solve_reduced_system(system, gens, entry=False):
         if len(system) == len(gens) == 1:
             zeros = list(roots(system[0], gens[-1]).keys())
             return [(zero,) for zero in zeros]
-
+    
         basis = groebner(system, gens, polys=True)
-
+    
         if len(basis) == 1 and basis[0].is_ground:
             if not entry:
                 return []
             else:
                 return None
-
+    
         univariate = list(filter(_is_univariate, basis))
-
-        if len(univariate) == 1:
+    
+        if len(univariate) == 1 and len(gens) == 1:
             f = univariate.pop()
         else:
             raise NotImplementedError(filldedent('''
                 only zero-dimensional systems supported
                 (finite number of solutions)
                 '''))
-
+    
         gens = f.gens
         gen = gens[-1]
-
+    
         zeros = list(roots(f.ltrim(gen)).keys())
-
+    
         if not zeros:
             return []
-
+    
         if len(basis) == 1:
             return [(zero,) for zero in zeros]
-
+    
         solutions = []
-
+    
         for zero in zeros:
             new_system = []
             new_gens = gens[:-1]
-
+    
             for b in basis[:-1]:
                 eq = _subs_root(b, gen, zero)
-
+    
                 if eq is not S.Zero:
                     new_system.append(eq)
-
+    
             for solution in _solve_reduced_system(new_system, new_gens):
                 solutions.append(solution + (zero,))
-
+    
         if solutions and len(solutions[0]) != len(gens):
             raise NotImplementedError(filldedent('''
                 only zero-dimensional systems supported
