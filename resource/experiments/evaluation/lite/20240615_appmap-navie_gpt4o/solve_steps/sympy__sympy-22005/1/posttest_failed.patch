diff --git a/sympy/solvers/polysys.py b/sympy/solvers/polysys.py
index b9809fd4e9..aa53b084e7 100644
--- a/sympy/solvers/polysys.py
+++ b/sympy/solvers/polysys.py
@@ -225,28 +225,28 @@ def _subs_root(f, gen, zero):
         return p
 
     def _solve_reduced_system(system, gens, entry=False):
-        """Recursively solves reduced polynomial systems. """
-        if len(system) == len(gens) == 1:
-            zeros = list(roots(system[0], gens[-1]).keys())
-            return [(zero,) for zero in zeros]
-
-        basis = groebner(system, gens, polys=True)
-
-        if len(basis) == 1 and basis[0].is_ground:
-            if not entry:
-                return []
+            """Recursively solves reduced polynomial systems. """
+            if len(system) == len(gens) == 1:
+                zeros = list(roots(system[0], gens[-1]).keys())
+                return [(zero,) for zero in zeros]
+    
+            basis = groebner(system, gens, polys=True)
+    
+            if len(basis) == 1 and basis[0].is_ground:
+                if not entry:
+                    return []
+                else:
+                    return None
+    
+            univariate = list(filter(_is_univariate, basis))
+    
+            if len(univariate) == 1 and len(gens) == 1:
+               f = univariate.pop()
             else:
-                return None
-
-        univariate = list(filter(_is_univariate, basis))
-
-        if len(univariate) == 1:
-            f = univariate.pop()
-        else:
-            raise NotImplementedError(filldedent('''
-                only zero-dimensional systems supported
-                (finite number of solutions)
-                '''))
+               raise NotImplementedError(filldedent('''
+                   only zero-dimensional systems supported
+                   (finite number of solutions)
+                   '''))
 
         gens = f.gens
         gen = gens[-1]
