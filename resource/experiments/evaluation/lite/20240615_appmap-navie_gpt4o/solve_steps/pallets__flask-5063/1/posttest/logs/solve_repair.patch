diff --git a/src/flask/cli.py b/src/flask/cli.py
index 37a15ff2..886ccc03 100644
--- a/src/flask/cli.py
+++ b/src/flask/cli.py
@@ -17,7 +17,7 @@ from werkzeug import run_simple
 from werkzeug.serving import is_running_from_reloader
 from werkzeug.utils import import_string
 
-from .globals import current_app
+from .globals import current_app, request
 from .helpers import get_debug_flag
 from .helpers import get_load_dotenv
 
@@ -1007,31 +1007,44 @@ def routes_command(sort: str, all_methods: bool) -> None:
         return
 
     ignored_methods = set(() if all_methods else ("HEAD", "OPTIONS"))
+    
+    if sort not in ("endpoint", "methods", "rule", "match"):
+        click.echo(f"Invalid sort option: {sort}")
+        return
 
-    if sort in ("endpoint", "rule"):
-        rules = sorted(rules, key=attrgetter(sort))
+    if sort == "endpoint":
+        rules.sort(key=attrgetter("endpoint"))
     elif sort == "methods":
-        rules = sorted(rules, key=lambda rule: sorted(rule.methods))  # type: ignore
+        rules.sort(key=lambda rule: sorted(rule.methods - ignored_methods))  # type: ignore
+    elif sort == "rule":
+        rules.sort(key=attrgetter("rule"))
+    elif sort == "match":
+        rules.sort(key=lambda rule: rule.match("/"))
 
     rule_methods = [
         ", ".join(sorted(rule.methods - ignored_methods))  # type: ignore
         for rule in rules
     ]
 
-    headers = ("Endpoint", "Methods", "Rule")
+    server_name = current_app.config.get("SERVER_NAME", "")
+
+    headers = ("Endpoint", "Methods", "Rule", "Domain")
     widths = (
         max(len(rule.endpoint) for rule in rules),
         max(len(methods) for methods in rule_methods),
         max(len(rule.rule) for rule in rules),
+        max(len(server_name) for rule in rules),
     )
     widths = [max(len(h), w) for h, w in zip(headers, widths)]
-    row = "{{0:<{0}}}  {{1:<{1}}}  {{2:<{2}}}".format(*widths)
+    row = "{{0:<{0}}}  {{1:<{1}}}  {{2:<{2}}}  {{3:<{3}}}".format(*widths)
 
     click.echo(row.format(*headers).strip())
     click.echo(row.format(*("-" * width for width in widths)))
 
     for rule, methods in zip(rules, rule_methods):
-        click.echo(row.format(rule.endpoint, methods, rule.rule).rstrip())
+        subdomain = rule.subdomain or ""
+        domain = f"{subdomain}.{server_name}".strip(".")
+        click.echo(row.format(rule.endpoint, methods, rule.rule, domain).rstrip())
 
 
 cli = FlaskGroup(
