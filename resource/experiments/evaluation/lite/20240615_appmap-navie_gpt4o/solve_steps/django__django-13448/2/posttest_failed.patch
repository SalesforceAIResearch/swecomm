diff --git a/django/db/backends/base/creation.py b/django/db/backends/base/creation.py
index 503f7f56fd..691cba3112 100644
--- a/django/db/backends/base/creation.py
+++ b/django/db/backends/base/creation.py
@@ -34,8 +34,11 @@ class BaseDatabaseCreation:
         """
         # Don't import django.core.management if it isn't needed.
         from django.core.management import call_command
-
+    
         test_database_name = self._get_test_db_name()
+        
+        # Check for MIGRATE setting
+        migrate = self.connection.settings_dict.get('TEST', {}).get('MIGRATE', True)
 
         if verbosity >= 1:
             action = 'Creating'
@@ -58,7 +61,7 @@ class BaseDatabaseCreation:
         settings.DATABASES[self.connection.alias]["NAME"] = test_database_name
         self.connection.settings_dict["NAME"] = test_database_name
 
-        if self.connection.settings_dict['TEST']['MIGRATE']:
+        if migrate:
             # We report migrate messages at one level lower than that
             # requested. This ensures we don't get flooded with messages during
             # testing (unless you really ask to be flooded).
@@ -69,6 +72,15 @@ class BaseDatabaseCreation:
                 database=self.connection.alias,
                 run_syncdb=True,
             )
+        else:
+            # Ensure essential tables are created with 'syncdb'
+            call_command(
+                'migrate',
+                verbosity=max(verbosity - 1, 0),
+                interactive=False,
+                database=self.connection.alias,
+                run_syncdb=True,
+            )
 
         # We then serialize the current state of the database into a string
         # and store it on the connection. This slightly horrific process is so people
@@ -187,6 +199,8 @@ class BaseDatabaseCreation:
                     confirm = input(
                         "Type 'yes' if you would like to try deleting the test "
                         "database '%s', or 'no' to cancel: " % test_database_name)
+                else:
+                    raise e
                 if autoclobber or confirm == 'yes':
                     try:
                         if verbosity >= 1:
