diff --git a/sklearn/linear_model/logistic.py b/sklearn/linear_model/logistic.py
index 1999f1dae..bb8b8593c 100644
--- a/sklearn/linear_model/logistic.py
+++ b/sklearn/linear_model/logistic.py
@@ -2169,18 +2169,19 @@ class LogisticRegressionCV(LogisticRegression, BaseEstimator,
             else:
                 # Take the best scores across every fold and the average of
                 # all coefficients corresponding to the best scores.
-                best_indices = np.argmax(scores, axis=1)
-                if self.multi_class == 'ovr':
-                    w = np.mean([coefs_paths[i, best_indices[i], :]
-                                 for i in range(len(folds))], axis=0)
-                else:
-                    w = np.mean([coefs_paths[:, i, best_indices[i], :]
-                                 for i in range(len(folds))], axis=0)
-
-                best_indices_C = best_indices % len(self.Cs_)
+                best_scores = scores.argmax(axis=2 if self.penalty == 'elasticnet' else 1)
+                w = []
+                for i in range(len(folds)):
+                    if self.multi_class == 'ovr':
+                        w.append(coefs_paths[i, best_scores[i], :])
+                    else:
+                        w.append(coefs_paths[:, i, best_scores[i], :].mean(axis=0))
+                w = np.mean(w, axis=0).reshape(-1, X.shape[1] + int(self.fit_intercept))
+
+                best_indices_C = best_scores % len(self.Cs_)
                 self.C_.append(np.mean(self.Cs_[best_indices_C]))
 
-                best_indices_l1 = best_indices // len(self.Cs_)
+                best_indices_l1 = best_scores // len(self.Cs_)
                 self.l1_ratio_.append(np.mean(l1_ratios_[best_indices_l1]))
 
             if multi_class == 'multinomial':
