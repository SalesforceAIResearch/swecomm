diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py
index 4648daf395..9b74390857 100644
--- a/django/db/models/sql/query.py
+++ b/django/db/models/sql/query.py
@@ -12,8 +12,9 @@ import functools
 import inspect
 import sys
 import warnings
-from collections import Counter, namedtuple
+from collections import Counter
 from collections.abc import Iterator, Mapping
+from collections import namedtuple
 from itertools import chain, count, product
 from string import ascii_uppercase
 
@@ -1077,10 +1078,14 @@ class Query(BaseExpression):
         elif isinstance(value, (list, tuple)):
             # The items of the iterable may be expressions and therefore need
             # to be resolved independently.
-            return type(value)(
+            resolved = [
                 self.resolve_lookup_value(sub_value, can_reuse, allow_joins)
                 for sub_value in value
-            )
+            ]
+            if isinstance(value, tuple) and hasattr(value, '_fields'):
+                # If value is a named tuple, unpack the resolved iterator
+                return type(value)(*resolved)
+            return type(value)(resolved)
         return value
 
     def solve_lookup_type(self, lookup):
