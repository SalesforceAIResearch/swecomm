diff --git a/galleries/examples/widgets/range_slider.py b/galleries/examples/widgets/range_slider.py
index 1ae40c9841..65a22e21a8 100644
--- a/galleries/examples/widgets/range_slider.py
+++ b/galleries/examples/widgets/range_slider.py
@@ -42,7 +42,7 @@ lower_limit_line = axs[1].axvline(slider.val[0], color='k')
 upper_limit_line = axs[1].axvline(slider.val[1], color='k')
 
 
-def update(val):
+def update_colormap(val):
     # The val passed to a callback by the RangeSlider will
     # be a tuple of (min, max)
 
@@ -58,6 +58,36 @@ def update(val):
     fig.canvas.draw_idle()
 
 
+import threading
+
+# Assuming addElements is imported or defined earlier in this script, otherwise, define here.
+def addElements():
+    # Dummy implementation of addElements function if not defined elsewhere
+    pass
+
+def delayed_update():
+    plt.clf()
+    addElements()
+    plt.draw()
+
+def update(val):
+    # The val passed to a callback by the RangeSlider will
+    # be a tuple of (min, max)
+
+    # Update the image's colormap
+    im.norm.vmin = val[0]
+    im.norm.vmax = val[1]
+
+    # Update the position of the vertical lines
+    lower_limit_line.set_xdata([val[0], val[0]])
+    upper_limit_line.set_xdata([val[1], val[1]])
+
+    # Set a timer to delay the clearing and redrawing
+    threading.Timer(0.05, delayed_update).start()
+
+    # Redraw the figure to ensure it updates
+    fig.canvas.draw_idle()
+
 slider.on_changed(update)
 plt.show()
 
