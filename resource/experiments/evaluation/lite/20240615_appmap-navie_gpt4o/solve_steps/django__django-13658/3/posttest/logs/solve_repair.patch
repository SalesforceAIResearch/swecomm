diff --git a/django/core/management/__init__.py b/django/core/management/__init__.py
index 1ba093e51f..7230fb61f1 100644
--- a/django/core/management/__init__.py
+++ b/django/core/management/__init__.py
@@ -344,7 +344,7 @@ class ManagementUtility:
         # Preprocess options to extract --settings and --pythonpath.
         # These options could affect the commands that are available, so they
         # must be processed early.
-        parser = CommandParser(usage='%(prog)s subcommand [options] [args]', add_help=False, allow_abbrev=False)
+        parser = CommandParser(prog=self.prog_name, usage='%(prog)s subcommand [options] [args]', add_help=False, allow_abbrev=False)
         parser.add_argument('--settings')
         parser.add_argument('--pythonpath')
         parser.add_argument('args', nargs='*')  # catch-all
@@ -410,5 +410,10 @@ class ManagementUtility:
 
 def execute_from_command_line(argv=None):
     """Run a ManagementUtility."""
+    # Ensure UTF-8 encoding for stdout and stderr to avoid UnicodeEncodeError
+    if hasattr(sys.stdout, 'encoding') and sys.stdout.encoding.lower() != 'utf-8':
+        sys.stdout = open(sys.stdout.fileno(), mode='w', encoding='utf-8', buffering=1)
+    if hasattr(sys.stderr, 'encoding') and sys.stderr.encoding.lower() != 'utf-8':
+        sys.stderr = open(sys.stderr.fileno(), mode='w', encoding='utf-8', buffering=1)
     utility = ManagementUtility(argv)
     utility.execute()
diff --git a/django/core/management/base.py b/django/core/management/base.py
index 463e4e8665..ea53cf61b0 100644
--- a/django/core/management/base.py
+++ b/django/core/management/base.py
@@ -77,6 +77,11 @@ def handle_default_options(options):
         os.environ['DJANGO_SETTINGS_MODULE'] = options.settings
     if options.pythonpath:
         sys.path.insert(0, options.pythonpath)
+    # Ensure UTF-8 encoding for stdout and stderr to avoid UnicodeEncodeError
+    if hasattr(sys.stdout, 'encoding') and sys.stdout.encoding.lower() != 'utf-8':
+        sys.stdout = open(sys.stdout.fileno(), mode='w', encoding='utf-8', buffering=1)
+    if hasattr(sys.stderr, 'encoding') and sys.stderr.encoding.lower() != 'utf-8':
+        sys.stderr = open(sys.stderr.fileno(), mode='w', encoding='utf-8', buffering=1)
 
 
 def no_translations(handle_func):
