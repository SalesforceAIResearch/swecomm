diff --git a/sympy/geometry/util.py b/sympy/geometry/util.py
index d32adc3066..4fd0a612d5 100644
--- a/sympy/geometry/util.py
+++ b/sympy/geometry/util.py
@@ -539,9 +539,10 @@ def idiff(eq, y, x, n=1):
     ========
 
     >>> from sympy.abc import x, y, a
+    >>> from sympy import Eq, Function
     >>> from sympy.geometry.util import idiff
 
-    >>> circ = x**2 + y**2 - 4
+    >>> circ = Eq(x**2 + y**2, 4)
     >>> idiff(circ, y, x)
     -x/y
     >>> idiff(circ, y, x, 2).simplify()
@@ -565,17 +566,25 @@ def idiff(eq, y, x, n=1):
     sympy.core.function.diff: explicitly differentiates wrt symbols
 
     """
+    if isinstance(eq, Eq):
+        eq = eq.lhs - eq.rhs
+
     if is_sequence(y):
         dep = set(y)
         y = y[0]
-    elif isinstance(y, Symbol):
+    elif isinstance(y, (Symbol, Function)):
         dep = {y}
     else:
         raise ValueError("expecting x-dependent symbol(s) but got: %s" % y)
 
-    f = dict([(s, Function(
-        s.name)(x)) for s in eq.free_symbols if s != x and s in dep])
-    dydx = Function(y.name)(x).diff(x)
+    if isinstance(y, Function):
+        f = {y: y}
+        y = y.func
+    else:
+        f = dict([(s, Function(s.name)(x)) for s in eq.free_symbols if s != x and s in dep])
+
+    dydx = f[y].diff(x)
+    eq = eq.subs(f)
     eq = eq.subs(f)
     derivs = {}
     for i in range(n):
