diff --git a/sympy/assumptions/sathandlers.py b/sympy/assumptions/sathandlers.py
index 61d62d04cf..881a5f9ba8 100644
--- a/sympy/assumptions/sathandlers.py
+++ b/sympy/assumptions/sathandlers.py
@@ -1,6 +1,7 @@
 from __future__ import print_function, division
 
-from collections import MutableMapping, defaultdict
+from collections.abc import MutableMapping
+from collections import defaultdict
 
 from sympy.core import (Add, Mul, Pow, Integer, Number, NumberSymbol,)
 from sympy.core.numbers import ImaginaryUnit
diff --git a/sympy/core/basic.py b/sympy/core/basic.py
index bdfebf24cc..b9b882b096 100644
--- a/sympy/core/basic.py
+++ b/sympy/core/basic.py
@@ -1,6 +1,7 @@
 """Base class for all the objects in SymPy"""
 from __future__ import print_function, division
-from collections import Mapping, defaultdict
+from collections.abc import Mapping
+from collections import defaultdict
 from itertools import chain
 
 from .assumptions import BasicMeta, ManagedProperties
diff --git a/sympy/core/containers.py b/sympy/core/containers.py
index 15abd93e3a..8ac11e7ecd 100644
--- a/sympy/core/containers.py
+++ b/sympy/core/containers.py
@@ -268,7 +268,7 @@ def _sorted_args(self):
         return tuple(sorted(self.args, key=default_sort_key))
 
 
-class OrderedSet(collections.MutableSet):
+class OrderedSet(collections.abc.MutableSet):
     def __init__(self, iterable=None):
         if iterable:
             self.map = collections.OrderedDict((item, None) for item in iterable)
diff --git a/sympy/core/expr.py b/sympy/core/expr.py
index 421e6cd8e6..ae2d0c53d0 100644
--- a/sympy/core/expr.py
+++ b/sympy/core/expr.py
@@ -9,7 +9,8 @@
 from .compatibility import reduce, as_int, default_sort_key, range
 from mpmath.libmp import mpf_log, prec_to_dps
 
-from collections import defaultdict, Iterable
+from collections.abc import Iterable
+from collections import defaultdict
 
 class Expr(Basic, EvalfMixin):
     """
diff --git a/sympy/physics/vector/printing.py b/sympy/physics/vector/printing.py
index 559551c7c6..2e0dea1c17 100644
--- a/sympy/physics/vector/printing.py
+++ b/sympy/physics/vector/printing.py
@@ -165,7 +165,7 @@ class VectorPrettyPrinter(PrettyPrinter):
 
     def _print_Derivative(self, deriv):
         from sympy.physics.vector.functions import dynamicsymbols
-        # XXX use U('PARTIAL DIFFERENTIAL') here ?
+        # Use U('PARTIAL DIFFERENTIAL') here if necessary
         t = dynamicsymbols._t
         dot_i = 0
         can_break = True
@@ -189,11 +189,11 @@ def _print_Derivative(self, deriv):
         if len(pform.picture) > 1:
             return super(VectorPrettyPrinter, self)._print_Derivative(deriv)
 
-        dots = {0 : u"",
-                1 : u"\N{COMBINING DOT ABOVE}",
-                2 : u"\N{COMBINING DIAERESIS}",
-                3 : u"\N{COMBINING THREE DOTS ABOVE}",
-                4 : u"\N{COMBINING FOUR DOTS ABOVE}"}
+        dots = {0: u"",
+                1: u"\N{COMBINING DOT ABOVE}",
+                2: u"\N{COMBINING DIAERESIS}",
+                3: u"\N{COMBINING THREE DOTS ABOVE}",
+                4: u"\N{COMBINING FOUR DOTS ABOVE}"}
 
         d = pform.__dict__
         pic = d['picture'][0]
diff --git a/sympy/physics/vector/vector.py b/sympy/physics/vector/vector.py
index a048ee57f1..4ffbb11531 100644
--- a/sympy/physics/vector/vector.py
+++ b/sympy/physics/vector/vector.py
@@ -262,6 +262,9 @@ def render(self, *args, **kwargs):
                 settings = printer._settings if printer else {}
                 vp = printer if printer else VectorPrettyPrinter(settings)
                 pforms = []  # output list, to be concatenated to a string
+                settings = printer._settings if printer else {}
+                vp = printer if printer else VectorPrettyPrinter(settings)
+                pforms = []  # output list, to be concatenated to a string
                 for i, v in enumerate(ar):
                     for j in 0, 1, 2:
                         # if the coef of the basis vector is 1, we skip the 1
@@ -270,7 +273,7 @@ def render(self, *args, **kwargs):
                         # if the coef of the basis vector is -1, we skip the 1
                         elif ar[i][0][j] == -1:
                             pform = vp._print(ar[i][1].pretty_vecs[j])
-                            pform= prettyForm(*pform.left(" - "))
+                            pform = prettyForm(*pform.left(" - "))
                             bin = prettyForm.NEG
                             pform = prettyForm(binding=bin, *pform)
                         elif ar[i][0][j] != 0:
diff --git a/sympy/plotting/plot.py b/sympy/plotting/plot.py
index 18c6f7afee..d740983ee3 100644
--- a/sympy/plotting/plot.py
+++ b/sympy/plotting/plot.py
@@ -25,7 +25,7 @@
 from __future__ import print_function, division
 
 import inspect
-from collections import Callable
+from collections.abc import Callable
 import warnings
 import sys
 
