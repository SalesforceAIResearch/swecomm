diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py
index 7ca05f0304..5e68dc5cd3 100644
--- a/sympy/simplify/trigsimp.py
+++ b/sympy/simplify/trigsimp.py
@@ -764,6 +764,8 @@ def _trigpats():
         (a*tan(b)**c*cos(b)**c, a*sin(b)**c, sin(b), cos(b)),
         (a*cot(b)**c*sin(b)**c, a*cos(b)**c, sin(b), cos(b)),
         (a*tan(b)**c/sin(b)**c, a/cos(b)**c, sin(b), cos(b)),
+        # New rule: handle sqrt(sin(x)**2) correctly
+        (a*sqrt(sin(b)**2), a*Abs(sin(b)), sin(b), cos(b)),
         (a*cot(b)**c/cos(b)**c, a/sin(b)**c, sin(b), cos(b)),
         (a*cot(b)**c*tan(b)**c, a, sin(b), cos(b)),
         (a*(cos(b) + 1)**c*(cos(b) - 1)**c,
@@ -996,6 +998,16 @@ def __trigsimp(expr, deep=False):
                 res = term.match(pattern)
                 if res is not None:
                     term = result.subs(res)
+                    break  # if matched, no need to check other patterns
+            # Additional handling for sqrt(sin(x)**2) -> Abs(sin(x))
+            if term.is_Pow and term.exp == S.Half and term.base.is_Pow and term.base.exp == 2:
+                base, exp = term.base.base, term.base.exp
+                if base.func == sin:
+                    term = Abs(base)
+            args.append(term*nc)
+        if args != expr.args:
+            expr = Add(*args)
+            expr = min(expr, expand(expr), key=count_ops)
                     break
             args.append(term*nc)
         if args != expr.args:
