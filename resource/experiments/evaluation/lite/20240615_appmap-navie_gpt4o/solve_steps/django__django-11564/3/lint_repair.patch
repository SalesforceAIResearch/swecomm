diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py
index ba3b62620d..98d099f967 100644
--- a/django/contrib/staticfiles/storage.py
+++ b/django/contrib/staticfiles/storage.py
@@ -141,11 +141,12 @@ class HashedFilesMixin:
 
         return unquote(final_url)
 
-    def url(self, name, force=False):
+    def url(self, name, force=False, request=None):
         """
         Return the non-hashed URL in DEBUG mode.
         """
-        return self._url(self.stored_name, name, force)
+        script_name = request.META.get('SCRIPT_NAME', '') if request else ''
+        return script_name + self._url(self.stored_name, name, force)
 
     def url_converter(self, name, hashed_files, template=None):
         """
diff --git a/django/template/defaulttags.py b/django/template/defaulttags.py
index 602e8b2a15..b2496c8432 100644
--- a/django/template/defaulttags.py
+++ b/django/template/defaulttags.py
@@ -440,12 +440,14 @@ class URLNode(Node):
         # Try to look up the URL. If it fails, raise NoReverseMatch unless the
         # {% url ... as var %} construct is used, in which case return nothing.
         url = ''
+        script_name = getattr(context.request.META, 'SCRIPT_NAME', '')
         try:
             url = reverse(view_name, args=args, kwargs=kwargs, current_app=current_app)
         except NoReverseMatch:
             if self.asvar is None:
                 raise
 
+        url = script_name + url
         if self.asvar:
             context[self.asvar] = url
             return ''
