diff --git a/django/db/models/query.py b/django/db/models/query.py
index f88662de12..1cb2a75b3b 100644
--- a/django/db/models/query.py
+++ b/django/db/models/query.py
@@ -1855,6 +1855,7 @@ class QuerySet(AltersData):
             using=self._db,
             hints=self._hints,
         )
+        c._filtered_relations = self._filtered_relations
         c._sticky_filter = self._sticky_filter
         c._for_write = self._for_write
         c._prefetch_related_lookups = self._prefetch_related_lookups[:]
diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py
index 7c433b3f06..afa76eb8cb 100644
--- a/django/db/models/sql/compiler.py
+++ b/django/db/models/sql/compiler.py
@@ -45,6 +45,7 @@ class SQLCompiler:
         # The select, klass_info, and annotations are needed by QuerySet.iterator()
         # these are set as a side-effect of executing the query. Note that we calculate
         # separately a list of extra select columns needed for grammatical correctness
+        self._filtered_relations = dict(self.query._filtered_relations)
         # of the query, but these columns are not included in self.select.
         self.select = None
         self.annotation_col_map = None
@@ -1123,6 +1124,19 @@ class SQLCompiler:
         Fill in the information needed for a select_related query. The current
         depth is measured as the number of connections away from the root model
         (for example, cur_depth=1 means we are looking at models with direct
+        # Ensure that filtered relations are accounted for in related selections
+        if self._filtered_relations:
+            select_related_filtered_relations = {
+                key: val
+                for key, val in self._filtered_relations.items()
+                if any(
+                    (lookup.split("__")[0] == rela.split("__")[0])
+                    for rela in val
+                    for lookup in requested or ()
+                )
+            }
+        else:
+            select_related_filtered_relations = {}
         connections to the root model).
         """
 
