diff --git a/sympy/sets/handlers/intersection.py b/sympy/sets/handlers/intersection.py
index ea4108fae3..5b6d6d93b2 100644
--- a/sympy/sets/handlers/intersection.py
+++ b/sympy/sets/handlers/intersection.py
@@ -419,12 +419,39 @@ def intersection_sets(a, b):
 
 @dispatch(FiniteSet, FiniteSet)
 def intersection_sets(a, b):
-    return FiniteSet(*(a._elements & b._elements))
+    # Remove duplicates by using set
+    a = FiniteSet(*set(a))
+    b = FiniteSet(*set(b))
+    
+    # Check if any elements are symbolic
+    symbolic_elements_a = [el for el in a if el.is_symbol]
+    symbolic_elements_b = [el for el in b if el.is_symbol]
+    
+    if symbolic_elements_a or symbolic_elements_b:
+        conditions = []
+        combined_elements = a._elements & b._elements
+        if len(combined_elements) > 1:
+            for el in combined_elements:
+                conditions.append((el, el))
+            return Piecewise(*conditions)
+        else:
+            return FiniteSet(*combined_elements)
+    else:
+        return FiniteSet(*(a._elements & b._elements))
 
 @dispatch(FiniteSet, Set)
 def intersection_sets(a, b):
+    # Remove duplicates by using set
+    a = FiniteSet(*set(a))
     try:
-        return FiniteSet(*[el for el in a if el in b])
+        intersected_elements = [el for el in a if el in b]
+        if any(el.is_symbol for el in intersected_elements):
+            conditions = []
+            for el in intersected_elements:
+                conditions.append((el, el))
+            return Piecewise(*conditions)
+        else:
+            return FiniteSet(*intersected_elements)
     except TypeError:
         return None  # could not evaluate `el in b` due to symbolic ranges.
 
