diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py
index 95302a05ca..974a96892c 100644
--- a/sympy/matrices/expressions/blockmatrix.py
+++ b/sympy/matrices/expressions/blockmatrix.py
@@ -17,7 +17,7 @@
 from sympy.matrices.expressions.determinant import det, Determinant
 from sympy.matrices.expressions.slice import MatrixSlice
 from sympy.matrices.expressions.inverse import Inverse
-from sympy.matrices import Matrix, ShapeError
+from sympy.matrices import Matrix, ShapeError, Zero
 from sympy.functions.elementary.complexes import re, im
 
 class BlockMatrix(MatrixExpr):
@@ -162,9 +162,15 @@ def structurally_equal(self, other):
             and self.colblocksizes == other.colblocksizes)
 
     def _blockmul(self, other):
+        from sympy.matrices import ZeroMatrix, Zero
         if (isinstance(other, BlockMatrix) and
                 self.colblocksizes == other.rowblocksizes):
-            return BlockMatrix(self.blocks*other.blocks)
+            result_blocks = self.blocks*other.blocks
+            for i in range(result_blocks.shape[0]):
+                for j in range(result_blocks.shape[1]):
+                    if isinstance(result_blocks[i, j], Zero):
+                        result_blocks[i, j] = ZeroMatrix(result_blocks[i, j].rows, result_blocks[i, j].cols)
+            return BlockMatrix(result_blocks)
 
         return self * other
 
