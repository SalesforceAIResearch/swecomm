diff --git a/lib/matplotlib/_pylab_helpers.py b/lib/matplotlib/_pylab_helpers.py
index d32a69d4ff..4843da1990 100644
--- a/lib/matplotlib/_pylab_helpers.py
+++ b/lib/matplotlib/_pylab_helpers.py
@@ -9,7 +9,7 @@ from collections import OrderedDict
 class Gcf:
     """
     Singleton to maintain the relation between figures and their managers, and
-    keep track of and "active" figure and manager.
+    keep track of the "active" figure and manager.
 
     The canvas of a figure created through pyplot is associated with a figure
     manager, which handles the interaction between the figure and the backend.
@@ -28,6 +28,19 @@ class Gcf:
         end.
     """
 
+    @staticmethod
+    def remove_interactive_components(fig):
+        """Remove non-pickleable interactive components from the figure."""
+        for legend in fig.legends:
+            legend.set_draggable(None)
+            legend._draggable = None
+
+    @staticmethod
+    def restore_interactive_components(fig):
+        """Restore interactive components to the figure post-pickling."""
+        for legend in fig.legends:
+            legend.set_draggable(True)
+
     figs = OrderedDict()
 
     @classmethod
@@ -52,6 +65,20 @@ class Gcf:
         It is recommended to pass a manager instance, to avoid confusion when
         two managers share the same number.
         """
+        if all(hasattr(num, attr) for attr in ["num", "destroy"]):
+            manager = num
+            if cls.figs.get(manager.num) is manager:
+                cls.figs.pop(manager.num)
+        else:
+            try:
+                manager = cls.figs.pop(num)
+            except KeyError:
+                return
+        if hasattr(manager, "_cidgcf"):
+            manager.canvas.mpl_disconnect(manager._cidgcf)
+        Gcf.remove_interactive_components(manager.canvas.figure)
+        manager.destroy()
+        del manager, num
         if all(hasattr(num, attr) for attr in ["num", "destroy"]):
             manager = num
             if cls.figs.get(manager.num) is manager:
@@ -133,3 +160,21 @@ class Gcf:
 
 
 atexit.register(Gcf.destroy_all)
+
+# Add pickling support to Figures
+import matplotlib.figure
+
+def reduce_figure(fig):
+    Gcf.remove_interactive_components(fig)
+    state = fig.__reduce__()
+    Gcf.restore_interactive_components(fig)
+    return state
+
+def restore_figure(state):
+    fig = matplotlib.figure.Figure()
+    fig.__setstate__(state)
+    Gcf.restore_interactive_components(fig)
+    return fig
+
+matplotlib.figure.Figure.__reduce__ = reduce_figure
+matplotlib.figure.Figure.__setstate__ = restore_figure
