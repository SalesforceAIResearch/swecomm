diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py
index a0eb97792e..bb78ea9f60 100644
--- a/sympy/printing/latex.py
+++ b/sympy/printing/latex.py
@@ -26,6 +26,7 @@
 
 from sympy.core.compatibility import default_sort_key, range
 from sympy.utilities.iterables import has_variety
+Trace = None
 
 import re
 
@@ -1514,6 +1515,12 @@ def parens(x):
                 return r"\left(%s\right)" % self._print(x)
             return self._print(x)
         return r' \circ '.join(map(parens, expr.args))
+    
+    def _print_Trace(self, expr):
+        """
+        Custom LaTeX printing for Trace expressions.
+        """
+        return r"\text{Trace}\left(%s\right)" % self._print(expr.arg)
 
     def _print_KroneckerProduct(self, expr):
         from sympy import Add, MatAdd, MatMul
@@ -2270,6 +2277,14 @@ def latex(expr, fold_frac_powers=False, fold_func_brackets=False,
     itex=False, ln_notation=False, long_frac_ratio=None,
     mat_delim="[", mat_str=None, mode="plain", mul_symbol=None,
     order=None, symbol_names=None):
+    global Trace
+    if Trace is None:
+        # Delayed import to avoid circular dependency
+        from sympy.matrices.expressions.trace import Trace
+    fold_short_frac=None, inv_trig_style="abbreviated",
+    itex=False, ln_notation=False, long_frac_ratio=None,
+    mat_delim="[", mat_str=None, mode="plain", mul_symbol=None,
+    order=None, symbol_names=None):
     r"""Convert the given expression to LaTeX string representation.
 
     Parameters
