diff --git a/django/db/models/query.py b/django/db/models/query.py
index a5b0f464a9..5dcce08531 100644
--- a/django/db/models/query.py
+++ b/django/db/models/query.py
@@ -1555,7 +1555,7 @@ class QuerySet(AltersData):
         self._not_support_combined_queries("select_related")
         if self._fields is not None:
             raise TypeError(
-                "Cannot call select_related() after .values() or .values_list()"
+                "Cannot call select_related() after .values(), .values_list(), or .only()"
             )
 
         obj = self._chain()
@@ -1733,7 +1733,7 @@ class QuerySet(AltersData):
         """
         self._not_support_combined_queries("only")
         if self._fields is not None:
-            raise TypeError("Cannot call only() after .values() or .values_list()")
+            raise TypeError("Cannot call only() after .values(), .values_list(), or .select_related()")
         if fields == (None,):
             # Can only pass None to defer(), not only(), as the rest option.
             # That won't stop people trying to do this, so let's be explicit.
@@ -1743,6 +1743,7 @@ class QuerySet(AltersData):
             if field in self.query._filtered_relations:
                 raise ValueError("only() is not supported with FilteredRelation.")
         clone = self._chain()
+        clone._fields = fields
         clone.query.add_immediate_loading(fields)
         return clone
 
