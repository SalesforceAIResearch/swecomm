diff --git a/sympy/parsing/latex/_parse_latex_antlr.py b/sympy/parsing/latex/_parse_latex_antlr.py
index f7a07cffb6..2d5c2ba4b3 100644
--- a/sympy/parsing/latex/_parse_latex_antlr.py
+++ b/sympy/parsing/latex/_parse_latex_antlr.py
@@ -178,9 +178,8 @@ def convert_postfix_list(arr, i=0):
                 right = convert_postfix(arr[i + 1])
                 if isinstance(left, sympy.Expr) and isinstance(
                         right, sympy.Expr):
-                    left_syms = convert_postfix(arr[i - 1]).atoms(sympy.Symbol)
-                    right_syms = convert_postfix(arr[i + 1]).atoms(
-                        sympy.Symbol)
+                    left_syms = {s for s in convert_postfix(arr[i - 1]).atoms() if not s.args}
+                    right_syms = {s for s in convert_postfix(arr[i + 1]).atoms() if not s.args}
                     # if the left and right sides contain no variables and the
                     # symbol in between is 'x', treat as multiplication.
                     if len(left_syms) == 0 and len(right_syms) == 0 and str(
@@ -201,7 +200,7 @@ def convert_postfix_list(arr, i=0):
 def do_subs(expr, at):
     if at.expr():
         at_expr = convert_expr(at.expr())
-        syms = at_expr.atoms(sympy.Symbol)
+        syms = {s for s in at_expr.atoms() if not s.args}
         if len(syms) == 0:
             return expr
         elif len(syms) > 0:
@@ -474,7 +473,7 @@ def handle_integral(func):
     if func.DIFFERENTIAL():
         int_var = get_differential_var(func.DIFFERENTIAL())
     else:
-        for sym in integrand.atoms(sympy.Symbol):
+        for sym in {s for s in integrand.atoms() if not s.args}:
             s = str(sym)
             if len(s) > 1 and s[0] == 'd':
                 if s[1] == '\\':
diff --git a/sympy/plotting/experimental_lambdify.py b/sympy/plotting/experimental_lambdify.py
index 74c244c932..16f366aa36 100644
--- a/sympy/plotting/experimental_lambdify.py
+++ b/sympy/plotting/experimental_lambdify.py
@@ -669,7 +669,7 @@ def sympy_expression_namespace(cls, expr):
     def sympy_atoms_namespace(expr):
         """For no real reason this function is separated from
         sympy_expression_namespace. It can be moved to it."""
-        atoms = expr.atoms(Symbol, NumberSymbol, I, zoo, oo)
+        atoms = {a for a in expr.atoms() if not a.args}
         d = {}
         for a in atoms:
             # XXX debug: print 'atom:' + str(a)
diff --git a/sympy/printing/pretty/pretty_symbology.py b/sympy/printing/pretty/pretty_symbology.py
index b5c5ba62c0..dccb63cc7a 100644
--- a/sympy/printing/pretty/pretty_symbology.py
+++ b/sympy/printing/pretty/pretty_symbology.py
@@ -512,12 +512,12 @@ def xsym(sym):
 
 
 def pretty_atom(atom_name, default=None, printer=None):
-    """return pretty representation of an atom"""
+    """Return pretty representation of an atom"""
     if _use_unicode:
         if printer is not None and atom_name == 'ImaginaryUnit' and printer._settings['imaginary_unit'] == 'j':
             return U('DOUBLE-STRUCK ITALIC SMALL J')
         else:
-            return atoms_table[atom_name]
+            return atoms_table.get(atom_name, default)
     else:
         if default is not None:
             return default
diff --git a/sympy/vector/operators.py b/sympy/vector/operators.py
index 9215679747..2e5cf6ff05 100644
--- a/sympy/vector/operators.py
+++ b/sympy/vector/operators.py
@@ -362,6 +362,6 @@ def _diff_conditional(expr, base_scalar, coeff_1, coeff_2):
     """
     from sympy.vector.functions import express
     new_expr = express(expr, base_scalar.system, variables=True)
-    if base_scalar in new_expr.atoms(BaseScalar):
+    if base_scalar in {a for a in new_expr.atoms() if not a.args}:
         return Derivative(coeff_1 * coeff_2 * new_expr, base_scalar)
     return S.Zero
