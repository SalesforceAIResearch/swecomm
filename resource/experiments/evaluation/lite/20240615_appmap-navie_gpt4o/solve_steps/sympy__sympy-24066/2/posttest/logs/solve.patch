diff --git a/sympy/physics/units/unitsystem.py b/sympy/physics/units/unitsystem.py
index 3daf84c108..6dfb153b82 100644
--- a/sympy/physics/units/unitsystem.py
+++ b/sympy/physics/units/unitsystem.py
@@ -168,7 +168,7 @@ def _collect_factor_and_dimension(self, expr):
             factor, dim = self._collect_factor_and_dimension(expr.base)
             exp_factor, exp_dim = self._collect_factor_and_dimension(expr.exp)
             if self.get_dimension_system().is_dimensionless(exp_dim):
-                exp_dim = 1
+                exp_dim = Dimension(1)
             return factor ** exp_factor, dim ** (exp_factor * exp_dim)
         elif isinstance(expr, Add):
             factor, dim = self._collect_factor_and_dimension(expr.args[0])
@@ -190,10 +190,11 @@ def _collect_factor_and_dimension(self, expr):
                 dim /= idim**count
             return factor, dim
         elif isinstance(expr, Function):
-            fds = [self._collect_factor_and_dimension(
-                arg) for arg in expr.args]
-            return (expr.func(*(f[0] for f in fds)),
-                    *(d[1] for d in fds))
+            fds = [self._collect_factor_and_dimension(arg) for arg in expr.args]
+            factors, dims = zip(*fds)
+            if all(self.get_dimension_system().is_dimensionless(d) for d in dims):
+                return expr.func(*factors), Dimension(1)
+            return expr.func(*factors), expr.func(*(d for d in dims if d != Dimension(1)))
         elif isinstance(expr, Dimension):
             return S.One, expr
         else:
