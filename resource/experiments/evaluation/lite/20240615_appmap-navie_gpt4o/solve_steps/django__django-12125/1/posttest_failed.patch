diff --git a/django/db/migrations/operations/fields.py b/django/db/migrations/operations/fields.py
index 402dae2829..9c20e0d934 100644
--- a/django/db/migrations/operations/fields.py
+++ b/django/db/migrations/operations/fields.py
@@ -75,10 +75,12 @@ class AddField(FieldOperation):
         super().__init__(model_name, name, field)
 
     def deconstruct(self):
+        field = self.field
+        field_path = f"{field.__module__}.{field.__class__.__name__}"
         kwargs = {
             'model_name': self.model_name,
             'name': self.name,
-            'field': self.field,
+            'field': field_path,
         }
         if self.preserve_default is not True:
             kwargs['preserve_default'] = self.preserve_default
@@ -149,14 +151,13 @@ class RemoveField(FieldOperation):
     """Remove a field from a model."""
 
     def deconstruct(self):
-        kwargs = {
-            'model_name': self.model_name,
-            'name': self.name,
-        }
         return (
             self.__class__.__name__,
             [],
-            kwargs
+            {
+                'model_name': self.model_name,
+                'name': self.name,
+            },
         )
 
     def state_forwards(self, app_label, state):
@@ -204,10 +205,12 @@ class AlterField(FieldOperation):
         super().__init__(model_name, name, field)
 
     def deconstruct(self):
+        field = self.field
+        field_path = f"{field.__module__}.{field.__class__.__name__}"
         kwargs = {
             'model_name': self.model_name,
             'name': self.name,
-            'field': self.field,
+            'field': field_path,
         }
         if self.preserve_default is not True:
             kwargs['preserve_default'] = self.preserve_default
@@ -288,15 +291,14 @@ class RenameField(FieldOperation):
         return self.new_name.lower()
 
     def deconstruct(self):
-        kwargs = {
-            'model_name': self.model_name,
-            'old_name': self.old_name,
-            'new_name': self.new_name,
-        }
         return (
             self.__class__.__name__,
             [],
-            kwargs
+            {
+                'model_name': self.model_name,
+                'old_name': self.old_name,
+                'new_name': self.new_name,
+            },
         )
 
     def state_forwards(self, app_label, state):
