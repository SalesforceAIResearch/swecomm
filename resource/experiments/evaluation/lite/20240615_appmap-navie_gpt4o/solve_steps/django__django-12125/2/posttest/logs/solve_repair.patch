diff --git a/django/db/migrations/operations/fields.py b/django/db/migrations/operations/fields.py
index 402dae2829..45551a8550 100644
--- a/django/db/migrations/operations/fields.py
+++ b/django/db/migrations/operations/fields.py
@@ -82,8 +82,12 @@ class AddField(FieldOperation):
         }
         if self.preserve_default is not True:
             kwargs['preserve_default'] = self.preserve_default
+        # Custom logic to handle nested class paths
+        path = '%s.%s' % (self.field.__class__.__module__, self.field.__class__.__qualname__)
+        if path.startswith('django.db.models.fields'):
+            path = path.replace('django.db.models.fields', 'django.db.models')
         return (
-            self.__class__.__name__,
+            path,
             [],
             kwargs
         )
diff --git a/django/db/migrations/writer.py b/django/db/migrations/writer.py
index 4918261fb0..923e0a6888 100644
--- a/django/db/migrations/writer.py
+++ b/django/db/migrations/writer.py
@@ -169,6 +169,9 @@ class MigrationWriter:
             imports.add("from django.db import migrations, models")
         else:
             imports.add("from django.db import migrations")
+        
+        # Ensure consistent ordering of imports
+        imports = sorted(imports)
 
         # Sort imports by the package / module to be imported (the part after
         # "from" in "from ... import ..." or after "import" in "import ...").
@@ -195,7 +198,10 @@ class MigrationWriter:
 
         if self.migration.initial:
             items['initial_str'] = "\n    initial = True\n"
-
+        
+        # Ensure 'django' is included in the list of imports
+        imports.add('import django')
+        
         return MIGRATION_TEMPLATE % items
 
     @property
