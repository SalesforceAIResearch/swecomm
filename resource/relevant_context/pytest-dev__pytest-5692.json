{"instance_id": "pytest-dev__pytest-5692", "identified_spans": [{"file_path": "src/_pytest/junitxml.py", "span_ids": ["LogXML", "LogXML.pytest_sessionfinish"], "content": [{"span_id": "LogXML", "start_line": 466, "end_line": 466, "content": ["class LogXML:\n"]}, {"span_id": "LogXML.pytest_sessionfinish", "start_line": 643, "end_line": 671, "content": ["    def pytest_sessionfinish(self):\n", "        dirname = os.path.dirname(os.path.abspath(self.logfile))\n", "        if not os.path.isdir(dirname):\n", "            os.makedirs(dirname)\n", "        logfile = open(self.logfile, \"w\", encoding=\"utf-8\")\n", "        suite_stop_time = time.time()\n", "        suite_time_delta = suite_stop_time - self.suite_start_time\n", "\n", "        numtests = (\n", "            self.stats[\"passed\"]\n", "            + self.stats[\"failure\"]\n", "            + self.stats[\"skipped\"]\n", "            + self.stats[\"error\"]\n", "            - self.cnt_double_fail_tests\n", "        )\n", "        logfile.write('<?xml version=\"1.0\" encoding=\"utf-8\"?>')\n", "\n", "        suite_node = Junit.testsuite(\n", "            self._get_global_properties_node(),\n", "            [x.to_xml() for x in self.node_reporters_ordered],\n", "            name=self.suite_name,\n", "            errors=self.stats[\"error\"],\n", "            failures=self.stats[\"failure\"],\n", "            skipped=self.stats[\"skipped\"],\n", "            tests=numtests,\n", "            time=\"%.3f\" % suite_time_delta,\n", "        )\n", "        logfile.write(Junit.testsuites([suite_node]).unicode(indent=0))\n", "        logfile.close()\n"]}]}]}