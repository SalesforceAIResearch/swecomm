{"instance_id": "pytest-dev__pytest-6116", "identified_spans": [{"file_path": "src/_pytest/main.py", "span_ids": ["pytest_addoption"], "content": [{"span_id": "pytest_addoption", "start_line": 46, "end_line": 181, "content": ["def pytest_addoption(parser):\n", "    parser.addini(\n", "        \"norecursedirs\",\n", "        \"directory patterns to avoid for recursion\",\n", "        type=\"args\",\n", "        default=[\".*\", \"build\", \"dist\", \"CVS\", \"_darcs\", \"{arch}\", \"*.egg\", \"venv\"],\n", "    )\n", "    parser.addini(\n", "        \"testpaths\",\n", "        \"directories to search for tests when no files or directories are given in the \"\n", "        \"command line.\",\n", "        type=\"args\",\n", "        default=[],\n", "    )\n", "    group = parser.getgroup(\"general\", \"running and selection options\")\n", "    group._addoption(\n", "        \"-x\",\n", "        \"--exitfirst\",\n", "        action=\"store_const\",\n", "        dest=\"maxfail\",\n", "        const=1,\n", "        help=\"exit instantly on first error or failed test.\",\n", "    ),\n", "    group._addoption(\n", "        \"--maxfail\",\n", "        metavar=\"num\",\n", "        action=\"store\",\n", "        type=int,\n", "        dest=\"maxfail\",\n", "        default=0,\n", "        help=\"exit after first num failures or errors.\",\n", "    )\n", "    group._addoption(\n", "        \"--strict-markers\",\n", "        \"--strict\",\n", "        action=\"store_true\",\n", "        help=\"markers not registered in the `markers` section of the configuration file raise errors.\",\n", "    )\n", "    group._addoption(\n", "        \"-c\",\n", "        metavar=\"file\",\n", "        type=str,\n", "        dest=\"inifilename\",\n", "        help=\"load configuration from `file` instead of trying to locate one of the implicit \"\n", "        \"configuration files.\",\n", "    )\n", "    group._addoption(\n", "        \"--continue-on-collection-errors\",\n", "        action=\"store_true\",\n", "        default=False,\n", "        dest=\"continue_on_collection_errors\",\n", "        help=\"Force test execution even if collection errors occur.\",\n", "    )\n", "    group._addoption(\n", "        \"--rootdir\",\n", "        action=\"store\",\n", "        dest=\"rootdir\",\n", "        help=\"Define root directory for tests. Can be relative path: 'root_dir', './root_dir', \"\n", "        \"'root_dir/another_dir/'; absolute path: '/home/user/root_dir'; path with variables: \"\n", "        \"'$HOME/root_dir'.\",\n", "    )\n", "\n", "    group = parser.getgroup(\"collect\", \"collection\")\n", "    group.addoption(\n", "        \"--collectonly\",\n", "        \"--collect-only\",\n", "        action=\"store_true\",\n", "        help=\"only collect tests, don't execute them.\",\n", "    ),\n", "    group.addoption(\n", "        \"--pyargs\",\n", "        action=\"store_true\",\n", "        help=\"try to interpret all arguments as python packages.\",\n", "    )\n", "    group.addoption(\n", "        \"--ignore\",\n", "        action=\"append\",\n", "        metavar=\"path\",\n", "        help=\"ignore path during collection (multi-allowed).\",\n", "    )\n", "    group.addoption(\n", "        \"--ignore-glob\",\n", "        action=\"append\",\n", "        metavar=\"path\",\n", "        help=\"ignore path pattern during collection (multi-allowed).\",\n", "    )\n", "    group.addoption(\n", "        \"--deselect\",\n", "        action=\"append\",\n", "        metavar=\"nodeid_prefix\",\n", "        help=\"deselect item during collection (multi-allowed).\",\n", "    )\n", "    # when changing this to --conf-cut-dir, config.py Conftest.setinitial\n", "    # needs upgrading as well\n", "    group.addoption(\n", "        \"--confcutdir\",\n", "        dest=\"confcutdir\",\n", "        default=None,\n", "        metavar=\"dir\",\n", "        type=functools.partial(directory_arg, optname=\"--confcutdir\"),\n", "        help=\"only load conftest.py's relative to specified dir.\",\n", "    )\n", "    group.addoption(\n", "        \"--noconftest\",\n", "        action=\"store_true\",\n", "        dest=\"noconftest\",\n", "        default=False,\n", "        help=\"Don't load any conftest.py files.\",\n", "    )\n", "    group.addoption(\n", "        \"--keepduplicates\",\n", "        \"--keep-duplicates\",\n", "        action=\"store_true\",\n", "        dest=\"keepduplicates\",\n", "        default=False,\n", "        help=\"Keep duplicate tests.\",\n", "    )\n", "    group.addoption(\n", "        \"--collect-in-virtualenv\",\n", "        action=\"store_true\",\n", "        dest=\"collect_in_virtualenv\",\n", "        default=False,\n", "        help=\"Don't ignore tests in a local virtualenv directory\",\n", "    )\n", "\n", "    group = parser.getgroup(\"debugconfig\", \"test session debugging and configuration\")\n", "    group.addoption(\n", "        \"--basetemp\",\n", "        dest=\"basetemp\",\n", "        default=None,\n", "        metavar=\"dir\",\n", "        help=(\n", "            \"base temporary directory for this test run.\"\n", "            \"(warning: this directory is removed if it exists)\"\n", "        ),\n", "    )\n"]}]}]}