{"instance_id": "django__django-13660", "identified_spans": [{"file_path": "django/core/management/commands/shell.py", "span_ids": ["Command.handle"], "content": [{"span_id": "Command.handle", "start_line": 84, "end_line": 103, "content": ["    def handle(self, **options):\n", "        # Execute the command and exit.\n", "        if options['command']:\n", "            exec(options['command'])\n", "            return\n", "\n", "        # Execute stdin if it has anything to read and exit.\n", "        # Not supported on Windows due to select.select() limitations.\n", "        if sys.platform != 'win32' and not sys.stdin.isatty() and select.select([sys.stdin], [], [], 0)[0]:\n", "            exec(sys.stdin.read())\n", "            return\n", "\n", "        available_shells = [options['interface']] if options['interface'] else self.shells\n", "\n", "        for shell in available_shells:\n", "            try:\n", "                return getattr(self, shell)(options)\n", "            except ImportError:\n", "                pass\n", "        raise CommandError(\"Couldn't import {} interface.\".format(shell))\n"]}]}]}