{"instance_id": "django__django-13933", "identified_spans": [{"file_path": "django/forms/models.py", "span_ids": ["ModelChoiceField", "ModelChoiceField.to_python"], "content": [{"span_id": "ModelChoiceField", "start_line": 1186, "end_line": 1194, "content": ["class ModelChoiceField(ChoiceField):\n", "    \"\"\"A ChoiceField whose choices are a model QuerySet.\"\"\"\n", "    # This class is a subclass of ChoiceField for purity, but it doesn't\n", "    # actually use any of ChoiceField's implementation.\n", "    default_error_messages = {\n", "        'invalid_choice': _('Select a valid choice. That choice is not one of'\n", "                            ' the available choices.'),\n", "    }\n", "    iterator = ModelChoiceIterator\n"]}, {"span_id": "ModelChoiceField.to_python", "start_line": 1278, "end_line": 1288, "content": ["    def to_python(self, value):\n", "        if value in self.empty_values:\n", "            return None\n", "        try:\n", "            key = self.to_field_name or 'pk'\n", "            if isinstance(value, self.queryset.model):\n", "                value = getattr(value, key)\n", "            value = self.queryset.get(**{key: value})\n", "        except (ValueError, TypeError, self.queryset.model.DoesNotExist):\n", "            raise ValidationError(self.error_messages['invalid_choice'], code='invalid_choice')\n", "        return value\n"]}]}]}