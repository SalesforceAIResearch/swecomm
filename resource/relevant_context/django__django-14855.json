{"instance_id": "django__django-14855", "identified_spans": [{"file_path": "django/contrib/admin/helpers.py", "span_ids": ["AdminReadonlyField", "AdminReadonlyField.get_admin_url"], "content": [{"span_id": "AdminReadonlyField", "start_line": 160, "end_line": 160, "content": ["class AdminReadonlyField:\n"]}, {"span_id": "AdminReadonlyField.get_admin_url", "start_line": 206, "end_line": 215, "content": ["    def get_admin_url(self, remote_field, remote_obj):\n", "        url_name = 'admin:%s_%s_change' % (\n", "            remote_field.model._meta.app_label,\n", "            remote_field.model._meta.model_name,\n", "        )\n", "        try:\n", "            url = reverse(url_name, args=[quote(remote_obj.pk)])\n", "            return format_html('<a href=\"{}\">{}</a>', url, remote_obj)\n", "        except NoReverseMatch:\n", "            return str(remote_obj)\n"]}]}, {"file_path": "django/contrib/admin/options.py", "span_ids": ["ModelAdmin"], "content": [{"span_id": "ModelAdmin", "start_line": 550, "end_line": 585, "content": ["class ModelAdmin(BaseModelAdmin):\n", "    \"\"\"Encapsulate all admin options and functionality for a given model.\"\"\"\n", "\n", "    list_display = ('__str__',)\n", "    list_display_links = ()\n", "    list_filter = ()\n", "    list_select_related = False\n", "    list_per_page = 100\n", "    list_max_show_all = 200\n", "    list_editable = ()\n", "    search_fields = ()\n", "    search_help_text = None\n", "    date_hierarchy = None\n", "    save_as = False\n", "    save_as_continue = True\n", "    save_on_top = False\n", "    paginator = Paginator\n", "    preserve_filters = True\n", "    inlines = []\n", "\n", "    # Custom templates (designed to be over-ridden in subclasses)\n", "    add_form_template = None\n", "    change_form_template = None\n", "    change_list_template = None\n", "    delete_confirmation_template = None\n", "    delete_selected_confirmation_template = None\n", "    object_history_template = None\n", "    popup_response_template = None\n", "\n", "    # Actions\n", "    actions = []\n", "    action_form = helpers.ActionForm\n", "    actions_on_top = True\n", "    actions_on_bottom = False\n", "    actions_selection_counter = True\n", "    checks_class = ModelAdminChecks\n"]}]}, {"file_path": "django/contrib/admin/sites.py", "span_ids": ["AdminSite"], "content": [{"span_id": "AdminSite", "start_line": 38, "end_line": 71, "content": ["class AdminSite:\n", "    \"\"\"\n", "    An AdminSite object encapsulates an instance of the Django admin application, ready\n", "    to be hooked in to your URLconf. Models are registered with the AdminSite using the\n", "    register() method, and the get_urls() method can then be used to access Django view\n", "    functions that present a full admin interface for the collection of registered\n", "    models.\n", "    \"\"\"\n", "\n", "    # Text to put at the end of each page's <title>.\n", "    site_title = gettext_lazy('Django site admin')\n", "\n", "    # Text to put in each page's <h1>.\n", "    site_header = gettext_lazy('Django administration')\n", "\n", "    # Text to put at the top of the admin index page.\n", "    index_title = gettext_lazy('Site administration')\n", "\n", "    # URL for the \"View site\" link at the top of each admin page.\n", "    site_url = '/'\n", "\n", "    enable_nav_sidebar = True\n", "\n", "    empty_value_display = '-'\n", "\n", "    login_form = None\n", "    index_template = None\n", "    app_index_template = None\n", "    login_template = None\n", "    logout_template = None\n", "    password_change_template = None\n", "    password_change_done_template = None\n", "\n", "    final_catch_all_view = True\n"]}]}]}