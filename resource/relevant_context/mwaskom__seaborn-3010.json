{"instance_id": "mwaskom__seaborn-3010", "identified_spans": [{"file_path": "seaborn/_stats/regression.py", "span_ids": ["PolyFit._fit_predict", "PolyFit.__call__", "PolyFit"], "content": [{"span_id": "PolyFit._fit_predict", "start_line": 22, "end_line": 34, "content": ["    def _fit_predict(self, data):\n", "\n", "        x = data[\"x\"]\n", "        y = data[\"y\"]\n", "        if x.nunique() <= self.order:\n", "            # TODO warn?\n", "            xx = yy = []\n", "        else:\n", "            p = np.polyfit(x, y, self.order)\n", "            xx = np.linspace(x.min(), x.max(), self.gridsize)\n", "            yy = np.polyval(p, xx)\n", "\n", "        return pd.DataFrame(dict(x=xx, y=yy))\n"]}, {"span_id": "PolyFit.__call__", "start_line": 39, "end_line": 41, "content": ["    def __call__(self, data, groupby, orient, scales):\n", "\n", "        return groupby.apply(data, self._fit_predict)\n"]}, {"span_id": "PolyFit", "start_line": 10, "end_line": 20, "content": ["@dataclass\n", "class PolyFit(Stat):\n", "    \"\"\"\n", "    Fit a polynomial of the given order and resample data onto predicted curve.\n", "    \"\"\"\n", "    # This is a provisional class that is useful for building out functionality.\n", "    # It may or may not change substantially in form or dissappear as we think\n", "    # through the organization of the stats subpackage.\n", "\n", "    order: int = 2\n", "    gridsize: int = 100\n"]}]}]}