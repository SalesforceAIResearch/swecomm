{"instance_id": "matplotlib__matplotlib-23987", "identified_spans": [{"file_path": "lib/matplotlib/figure.py", "span_ids": ["FigureBase.subplots_adjust"], "content": [{"span_id": "FigureBase.subplots_adjust", "start_line": 1283, "end_line": 1323, "content": ["    def subplots_adjust(self, left=None, bottom=None, right=None, top=None,\n", "                        wspace=None, hspace=None):\n", "        \"\"\"\n", "        Adjust the subplot layout parameters.\n", "\n", "        Unset parameters are left unmodified; initial values are given by\n", "        :rc:`figure.subplot.[name]`.\n", "\n", "        Parameters\n", "        ----------\n", "        left : float, optional\n", "            The position of the left edge of the subplots,\n", "            as a fraction of the figure width.\n", "        right : float, optional\n", "            The position of the right edge of the subplots,\n", "            as a fraction of the figure width.\n", "        bottom : float, optional\n", "            The position of the bottom edge of the subplots,\n", "            as a fraction of the figure height.\n", "        top : float, optional\n", "            The position of the top edge of the subplots,\n", "            as a fraction of the figure height.\n", "        wspace : float, optional\n", "            The width of the padding between subplots,\n", "            as a fraction of the average Axes width.\n", "        hspace : float, optional\n", "            The height of the padding between subplots,\n", "            as a fraction of the average Axes height.\n", "        \"\"\"\n", "        if (self.get_layout_engine() is not None and\n", "                not self.get_layout_engine().adjust_compatible):\n", "            _api.warn_external(\n", "                \"This figure was using a layout engine that is \"\n", "                \"incompatible with subplots_adjust and/or tight_layout; \"\n", "                \"not calling subplots_adjust.\")\n", "            return\n", "        self.subplotpars.update(left, bottom, right, top, wspace, hspace)\n", "        for ax in self.axes:\n", "            if hasattr(ax, 'get_subplotspec'):\n", "                ax._set_position(ax.get_subplotspec().get_position(self))\n", "        self.stale = True\n"]}]}, {"file_path": "lib/matplotlib/layout_engine.py", "span_ids": ["ConstrainedLayoutEngine"], "content": [{"span_id": "ConstrainedLayoutEngine", "start_line": 193, "end_line": 200, "content": ["class ConstrainedLayoutEngine(LayoutEngine):\n", "    \"\"\"\n", "    Implements the ``constrained_layout`` geometry management.  See\n", "    :doc:`/tutorials/intermediate/constrainedlayout_guide` for details.\n", "    \"\"\"\n", "\n", "    _adjust_compatible = False\n", "    _colorbar_gridspec = False\n"]}]}]}