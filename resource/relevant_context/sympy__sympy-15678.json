{"instance_id": "sympy__sympy-15678", "identified_spans": [{"file_path": "sympy/geometry/util.py", "span_ids": ["idiff"], "content": [{"span_id": "idiff", "start_line": 528, "end_line": 587, "content": ["def idiff(eq, y, x, n=1):\n", "    \"\"\"Return ``dy/dx`` assuming that ``eq == 0``.\n", "\n", "    Parameters\n", "    ==========\n", "\n", "    y : the dependent variable or a list of dependent variables (with y first)\n", "    x : the variable that the derivative is being taken with respect to\n", "    n : the order of the derivative (default is 1)\n", "\n", "    Examples\n", "    ========\n", "\n", "    >>> from sympy.abc import x, y, a\n", "    >>> from sympy.geometry.util import idiff\n", "\n", "    >>> circ = x**2 + y**2 - 4\n", "    >>> idiff(circ, y, x)\n", "    -x/y\n", "    >>> idiff(circ, y, x, 2).simplify()\n", "    -(x**2 + y**2)/y**3\n", "\n", "    Here, ``a`` is assumed to be independent of ``x``:\n", "\n", "    >>> idiff(x + a + y, y, x)\n", "    -1\n", "\n", "    Now the x-dependence of ``a`` is made explicit by listing ``a`` after\n", "    ``y`` in a list.\n", "\n", "    >>> idiff(x + a + y, [y, a], x)\n", "    -Derivative(a, x) - 1\n", "\n", "    See Also\n", "    ========\n", "\n", "    sympy.core.function.Derivative: represents unevaluated derivatives\n", "    sympy.core.function.diff: explicitly differentiates wrt symbols\n", "\n", "    \"\"\"\n", "    if is_sequence(y):\n", "        dep = set(y)\n", "        y = y[0]\n", "    elif isinstance(y, Symbol):\n", "        dep = {y}\n", "    else:\n", "        raise ValueError(\"expecting x-dependent symbol(s) but got: %s\" % y)\n", "\n", "    f = dict([(s, Function(\n", "        s.name)(x)) for s in eq.free_symbols if s != x and s in dep])\n", "    dydx = Function(y.name)(x).diff(x)\n", "    eq = eq.subs(f)\n", "    derivs = {}\n", "    for i in range(n):\n", "        yp = solve(eq.diff(x), dydx)[0].subs(derivs)\n", "        if i == n - 1:\n", "            return yp.subs([(v, k) for k, v in f.items()])\n", "        derivs[dydx] = yp\n", "        eq = dydx - yp\n", "        dydx = dydx.diff(x)\n"]}]}]}