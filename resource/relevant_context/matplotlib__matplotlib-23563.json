{"instance_id": "matplotlib__matplotlib-23563", "identified_spans": [{"file_path": "lib/mpl_toolkits/mplot3d/art3d.py", "span_ids": ["Line3D.draw", "Line3D.__init__", "Line3D.get_data_3d", "Line3D.set_data_3d", "Line3D"], "content": [{"span_id": "Line3D.draw", "start_line": 212, "end_line": 218, "content": ["    @artist.allow_rasterization\n", "    def draw(self, renderer):\n", "        xs3d, ys3d, zs3d = self._verts3d\n", "        xs, ys, zs = proj3d.proj_transform(xs3d, ys3d, zs3d, self.axes.M)\n", "        self.set_data(xs, ys)\n", "        super().draw(renderer)\n", "        self.stale = False\n"]}, {"span_id": "Line3D.__init__", "start_line": 164, "end_line": 169, "content": ["    def __init__(self, xs, ys, zs, *args, **kwargs):\n", "        \"\"\"\n", "        Keyword arguments are passed onto :func:`~matplotlib.lines.Line2D`.\n", "        \"\"\"\n", "        super().__init__([], [], *args, **kwargs)\n", "        self._verts3d = xs, ys, zs\n"]}, {"span_id": "Line3D.get_data_3d", "start_line": 201, "end_line": 210, "content": ["    def get_data_3d(self):\n", "        \"\"\"\n", "        Get the current data\n", "\n", "        Returns\n", "        -------\n", "        verts3d : length-3 tuple or array-like\n", "            The current data as a tuple or array-like.\n", "        \"\"\"\n", "        return self._verts3d\n"]}, {"span_id": "Line3D.set_data_3d", "start_line": 178, "end_line": 199, "content": ["    def set_data_3d(self, *args):\n", "        \"\"\"\n", "        Set the x, y and z data\n", "\n", "        Parameters\n", "        ----------\n", "        x : array-like\n", "            The x-data to be plotted.\n", "        y : array-like\n", "            The y-data to be plotted.\n", "        z : array-like\n", "            The z-data to be plotted.\n", "\n", "        Notes\n", "        -----\n", "        Accepts x, y, z arguments or a single array-like (x, y, z)\n", "        \"\"\"\n", "        if len(args) == 1:\n", "            self._verts3d = args[0]\n", "        else:\n", "            self._verts3d = args\n", "        self.stale = True\n"]}, {"span_id": "Line3D", "start_line": 159, "end_line": 162, "content": ["class Line3D(lines.Line2D):\n", "    \"\"\"\n", "    3D line object.\n", "    \"\"\"\n"]}]}]}