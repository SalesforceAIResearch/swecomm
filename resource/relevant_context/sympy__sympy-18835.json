{"instance_id": "sympy__sympy-18835", "identified_spans": [{"file_path": "sympy/utilities/iterables.py", "span_ids": ["uniq"], "content": [{"span_id": "uniq", "start_line": 2088, "end_line": 2124, "content": ["def uniq(seq, result=None):\n", "    \"\"\"\n", "    Yield unique elements from ``seq`` as an iterator. The second\n", "    parameter ``result``  is used internally; it is not necessary to pass\n", "    anything for this.\n", "\n", "    Examples\n", "    ========\n", "\n", "    >>> from sympy.utilities.iterables import uniq\n", "    >>> dat = [1, 4, 1, 5, 4, 2, 1, 2]\n", "    >>> type(uniq(dat)) in (list, tuple)\n", "    False\n", "\n", "    >>> list(uniq(dat))\n", "    [1, 4, 5, 2]\n", "    >>> list(uniq(x for x in dat))\n", "    [1, 4, 5, 2]\n", "    >>> list(uniq([[1], [2, 1], [1]]))\n", "    [[1], [2, 1]]\n", "    \"\"\"\n", "    try:\n", "        seen = set()\n", "        result = result or []\n", "        for i, s in enumerate(seq):\n", "            if not (s in seen or seen.add(s)):\n", "                yield s\n", "    except TypeError:\n", "        if s not in result:\n", "            yield s\n", "            result.append(s)\n", "        if hasattr(seq, '__getitem__'):\n", "            for s in uniq(seq[i + 1:], result):\n", "                yield s\n", "        else:\n", "            for s in uniq(seq, result):\n", "                yield s\n"]}]}]}