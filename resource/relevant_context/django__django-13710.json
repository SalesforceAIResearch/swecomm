{"instance_id": "django__django-13710", "identified_spans": [{"file_path": "django/contrib/admin/options.py", "span_ids": ["InlineModelAdmin", "InlineModelAdmin.__init__"], "content": [{"span_id": "InlineModelAdmin", "start_line": 2012, "end_line": 2032, "content": ["class InlineModelAdmin(BaseModelAdmin):\n", "    \"\"\"\n", "    Options for inline editing of ``model`` instances.\n", "\n", "    Provide ``fk_name`` to specify the attribute name of the ``ForeignKey``\n", "    from ``model`` to its parent. This is required if ``model`` has more than\n", "    one ``ForeignKey`` to its parent.\n", "    \"\"\"\n", "    model = None\n", "    fk_name = None\n", "    formset = BaseInlineFormSet\n", "    extra = 3\n", "    min_num = None\n", "    max_num = None\n", "    template = None\n", "    verbose_name = None\n", "    verbose_name_plural = None\n", "    can_delete = True\n", "    show_change_link = False\n", "    checks_class = InlineModelAdminChecks\n", "    classes = None\n"]}, {"span_id": "InlineModelAdmin.__init__", "start_line": 2034, "end_line": 2043, "content": ["    def __init__(self, parent_model, admin_site):\n", "        self.admin_site = admin_site\n", "        self.parent_model = parent_model\n", "        self.opts = self.model._meta\n", "        self.has_registered_model = admin_site.is_registered(self.model)\n", "        super().__init__()\n", "        if self.verbose_name is None:\n", "            self.verbose_name = self.model._meta.verbose_name\n", "        if self.verbose_name_plural is None:\n", "            self.verbose_name_plural = self.model._meta.verbose_name_plural\n"]}]}]}