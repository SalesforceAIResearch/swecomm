{"instance_id": "django__django-14238", "identified_spans": [{"file_path": "django/db/models/fields/__init__.py", "span_ids": ["AutoFieldMeta.__instancecheck__", "SmallAutoField", "AutoFieldMeta", "AutoFieldMeta.__subclasscheck__", "AutoFieldMeta._subclasses", "BigAutoField"], "content": [{"span_id": "AutoFieldMeta.__instancecheck__", "start_line": 2523, "end_line": 2524, "content": ["    def __instancecheck__(self, instance):\n", "        return isinstance(instance, self._subclasses) or super().__instancecheck__(instance)\n"]}, {"span_id": "SmallAutoField", "start_line": 2548, "end_line": 2548, "content": ["class SmallAutoField(AutoFieldMixin, SmallIntegerField):\n"]}, {"span_id": "AutoFieldMeta", "start_line": 2502, "end_line": 2517, "content": ["class AutoFieldMeta(type):\n", "    \"\"\"\n", "    Metaclass to maintain backward inheritance compatibility for AutoField.\n", "\n", "    It is intended that AutoFieldMixin become public API when it is possible to\n", "    create a non-integer automatically-generated field using column defaults\n", "    stored in the database.\n", "\n", "    In many areas Django also relies on using isinstance() to check for an\n", "    automatically-generated field as a subclass of AutoField. A new flag needs\n", "    to be implemented on Field to be used instead.\n", "\n", "    When these issues have been addressed, this metaclass could be used to\n", "    deprecate inheritance from AutoField and use of isinstance() with AutoField\n", "    for detecting automatically-generated fields.\n", "    \"\"\"\n"]}, {"span_id": "AutoFieldMeta.__subclasscheck__", "start_line": 2526, "end_line": 2527, "content": ["    def __subclasscheck__(self, subclass):\n", "        return subclass in self._subclasses or super().__subclasscheck__(subclass)\n"]}, {"span_id": "AutoFieldMeta._subclasses", "start_line": 2519, "end_line": 2521, "content": ["    @property\n", "    def _subclasses(self):\n", "        return (BigAutoField, SmallAutoField)\n"]}, {"span_id": "BigAutoField", "start_line": 2539, "end_line": 2539, "content": ["class BigAutoField(AutoFieldMixin, BigIntegerField):\n"]}]}]}