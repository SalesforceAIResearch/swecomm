--- a/sklearn/feature_selection/mutual_info_.py	
+++ b/sklearn/feature_selection/mutual_info_.py	
@@ -247,7 +247,7 @@
     X, y = check_X_y(X, y, accept_sparse='csc', y_numeric=not discrete_target)
     n_samples, n_features = X.shape
 
-    if discrete_features == 'auto':
+    if isinstance(discrete_features, str) and discrete_features == 'auto':  # Ensure `discrete_features` is a string before comparison
         discrete_features = issparse(X)
 
     if isinstance(discrete_features, bool):
@@ -255,9 +255,9 @@
         discrete_mask.fill(discrete_features)
     else:
         discrete_features = np.asarray(discrete_features)
-        if discrete_features.dtype != 'bool':
-            discrete_mask = np.zeros(n_features, dtype=bool)
-            discrete_mask[discrete_features] = True
+        if discrete_features.dtype == 'int':  # Check if `discrete_features` is an array of indices
+            discrete_mask = np.zeros(n_features, dtype=bool)  # Create a boolean mask
+            discrete_mask[discrete_features] = True  # Set the indices to True in the mask
         else:
             discrete_mask = discrete_features
 
