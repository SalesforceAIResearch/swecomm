diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py
index 11aebbc59f..eec866cc7c 100644
--- a/sympy/matrices/expressions/blockmatrix.py
+++ b/sympy/matrices/expressions/blockmatrix.py
@@ -290,6 +290,27 @@ class BlockDiagMatrix(BlockMatrix):
     def __new__(cls, *mats):
         return Basic.__new__(BlockDiagMatrix, *mats)
 
+    def as_explicit(self):
+        """
+        Convert a BlockDiagMatrix to an explicit Matrix.
+
+        Returns
+        =======
+        mat : Matrix
+            The explicit Matrix representation of the BlockDiagMatrix.
+        """
+        if len(self.args) == 1:
+            # For a single-element BlockDiagMatrix, return the element directly as a Matrix.
+            return Matrix(self.args[0])
+        else:
+            # For multi-element BlockDiagMatrix instances, use the existing conversion logic.
+            from sympy.matrices.immutable import ImmutableDenseMatrix
+            mats = self.args
+            data = [[mats[i] if i == j else ZeroMatrix(mats[i].rows, mats[j].cols)
+                            for j in range(len(mats))]
+                            for i in range(len(mats))]
+            return ImmutableDenseMatrix(data).as_explicit()
+
     @property
     def diag(self):
         return self.args
