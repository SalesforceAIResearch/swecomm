--- a/django/db/backends/base/schema.py	
+++ b/django/db/backends/base/schema.py	
@@ -407,6 +407,9 @@
             model, columns, exclude=meta_constraint_names | meta_index_names,
             **constraint_kwargs
         )
+        # Filter out unique constraints if we are deleting an index
+        if constraint_kwargs.get('index', False):
+            constraint_names = [name for name in constraint_names if name not in meta_constraint_names]
         if len(constraint_names) != 1:
             raise ValueError("Found wrong number (%s) of constraints for %s(%s)" % (
                 len(constraint_names),
@@ -1140,8 +1143,8 @@
         )
 
     def _constraint_names(self, model, column_names=None, unique=None,
-                          primary_key=None, index=None, foreign_key=None,
-                          check=None, type_=None, exclude=None):
+                        primary_key=None, index=None, foreign_key=None,
+                        check=None, type_=None, exclude=None):
         """Return all constraint names matching the columns and conditions."""
         if column_names is not None:
             column_names = [
@@ -1167,6 +1170,9 @@
                     continue
                 if not exclude or name not in exclude:
                     result.append(name)
+        # Ensure unique constraints are not included when fetching index constraints
+        if index:
+            result = [name for name in result if not constraints[name]['unique']]
         return result
 
     def _delete_primary_key(self, model, strict=False):
