--- a/sympy/assumptions/refine.py	
+++ b/sympy/assumptions/refine.py	
@@ -155,8 +155,26 @@
 
                 old = expr
 
-                # For powers of (-1) we can remove
-                #  - even terms
+
+def refine_arg(expr, assumptions):
+    """
+    Handler for the argument function.
+
+    Examples
+    ========
+
+    >>> from sympy import Q, arg
+    >>> from sympy.assumptions.refine import refine_arg
+    >>> from sympy.abc import a
+    >>> refine_arg(arg(a), Q.positive(a))
+    0
+    """
+    if ask(Q.positive(expr.args[0]), assumptions):
+        return S.Zero  # Simplify arg(a) to 0 when a is positive
+    return expr  # Return the original expression if no simplification is possible
+
+
+def refine_matrixelement(expr, assumptions):
                 #  - pairs of odd terms
                 #  - a single odd term + 1
                 #  - A numerical constant N can be replaced with mod(N,2)
@@ -380,5 +398,6 @@
     're': refine_re,
     'im': refine_im,
     'sign': refine_sign,
-    'MatrixElement': refine_matrixelement
+    'MatrixElement': refine_matrixelement,
+    'arg': refine_arg  # Added handler for arg
 }  # type: Dict[str, Callable[[Expr, Boolean], Expr]]
