--- a/sympy/core/tests/test_eval.py
+++ b/sympy/core/tests/test_eval.py
@@ -48,6 +48,9 @@
     assert 24/sqrt(64) == 3
     assert (-27)**Rational(1, 3) == 3*(-1)**Rational(1, 3)
 
+    # Test for 0**-oo
+    assert (S.Zero)**S.NegativeInfinity == S.ComplexInfinity
+
     assert (cos(2) / tan(2))**2 == (cos(2) / tan(2))**2
 
 
--- a/sympy/core/power.py
+++ b/sympy/core/power.py
@@ -299,6 +299,8 @@
                 return b
             elif e == -1 and not b:
                 return S.ComplexInfinity
+            elif b.is_zero and e is S.NegativeInfinity:
+                return S.ComplexInfinity
             # Only perform autosimplification if exponent or base is a Symbol or number
             elif (b.is_Symbol or b.is_number) and (e.is_Symbol or e.is_number) and\
                 e.is_integer and _coeff_isneg(b):
