--- a/sympy/geometry/point.py	
+++ b/sympy/geometry/point.py	
@@ -150,11 +150,12 @@
                 raise ValueError(filldedent('''
                         on_morph value should be 'error',
                         'warn' or 'ignore'.'''))
-        if any(coords[dim:]):
+        if any(coords[dim:]):  # Check if there are nonzero coordinates beyond the specified dimension
             raise ValueError('Nonzero coordinates cannot be removed.')
-        if any(a.is_number and im(a) for a in coords):
-            raise ValueError('Imaginary coordinates are not permitted.')
-        if not all(isinstance(a, Expr) for a in coords):
+        if evaluate:  # Only check for imaginary coordinates if evaluate is True
+            if any(a.is_number and im(a) for a in coords):
+                raise ValueError('Imaginary coordinates are not permitted.')
+        if not all(isinstance(a, Expr) for a in coords):  # Ensure all coordinates are valid SymPy expressions
             raise TypeError('Coordinates must be valid SymPy expressions.')
 
         # pad with zeros appropriately
@@ -162,10 +163,10 @@
 
         # Turn any Floats into rationals and simplify
         # any expressions before we instantiate
-        if evaluate:
+        if evaluate:  # Only convert floats to rationals if evaluate is True
             coords = coords.xreplace({
                 f: simplify(nsimplify(f, rational=True))
-                 for f in coords.atoms(Float)})
+                for f in coords.atoms(Float)})
 
         # return 2D or 3D instances
         if len(coords) == 2:
