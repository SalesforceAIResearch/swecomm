--- a/sklearn/neighbors/nca.py	
+++ b/sklearn/neighbors/nca.py	
@@ -300,6 +300,7 @@
         # Check the preferred dimensionality of the projected space
         if self.n_components is not None:
             check_scalar(self.n_components, 'n_components', int, 1)
+            self.n_components = int(self.n_components)  # Ensure n_components is an integer
 
             if self.n_components > X.shape[1]:
                 raise ValueError('The preferred dimensionality of the '
@@ -320,6 +321,7 @@
 
         check_scalar(self.max_iter, 'max_iter', int, 1)
         check_scalar(self.tol, 'tol', float, 0.)
+        self.tol = float(self.tol)  # Ensure tol is a float
         check_scalar(self.verbose, 'verbose', int, 0)
 
         if self.callback is not None:
--- a/sklearn/utils/validation.py	2024-05-31 12:36:47.148849147 +0000
+++ b/sklearn/utils/validation.py	2024-05-31 12:42:56.070830765 +0000
@@ -972,6 +972,11 @@
         If the parameter's value violates the given bounds.
     """
 
+    if isinstance(x, np.integer):
+        x = int(x)  # Coerce numpy integer to Python int
+    elif isinstance(x, np.floating):
+        x = float(x)  # Coerce numpy float to Python float
+
     if not isinstance(x, target_type):
         raise TypeError('`{}` must be an instance of {}, not {}.'
                         .format(name, target_type, type(x)))
