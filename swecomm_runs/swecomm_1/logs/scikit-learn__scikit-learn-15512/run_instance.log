2024-07-30 17:13:15,808 - INFO - Intermediate patch for scikit-learn__scikit-learn-15512 written to /shared/patch.diff, now applying to container...
2024-07-30 17:13:16,041 - INFO - >>>>> Applied Patch:
Checking patch sklearn/cluster/_affinity_propagation.py...
Applied patch sklearn/cluster/_affinity_propagation.py cleanly.

2024-07-30 17:13:17,363 - INFO - Git diff before:
diff --git a/sklearn/cluster/_affinity_propagation.py b/sklearn/cluster/_affinity_propagation.py
index 4806afee9..cda6616fc 100644
--- a/sklearn/cluster/_affinity_propagation.py
+++ b/sklearn/cluster/_affinity_propagation.py
@@ -151,6 +151,7 @@ def affinity_propagation(S, preference=None, convergence_iter=15, max_iter=200,
     e = np.zeros((n_samples, convergence_iter))
 
     ind = np.arange(n_samples)
+    converged = False
 
     for it in range(max_iter):
         # tmp = A + S; compute responsibilities
@@ -196,11 +197,22 @@ def affinity_propagation(S, preference=None, convergence_iter=15, max_iter=200,
             if (not unconverged and (K > 0)) or (it == max_iter):
                 if verbose:
                     print("Converged after %d iterations." % it)
+                converged = True
                 break
     else:
         if verbose:
             print("Did not converge")
 
+    if not converged:
+        warnings.warn("Affinity propagation did not converge, this model "
+                      "will not have any cluster centers.", ConvergenceWarning)
+        labels = np.array([-1] * n_samples)
+        cluster_centers_indices = np.array([], dtype=int)
+        if return_n_iter:
+            return cluster_centers_indices, labels, it + 1
+        else:
+            return cluster_centers_indices, labels
+
     I = np.flatnonzero(E)
     K = I.size  # Identify exemplars
2024-07-30 17:13:17,364 - INFO - Eval script for scikit-learn__scikit-learn-15512 written to /eval.sh
2024-07-30 17:13:51,478 - INFO - Test runtime: 34.11 seconds
2024-07-30 17:13:51,783 - INFO - Git diff after:
diff --git a/sklearn/cluster/_affinity_propagation.py b/sklearn/cluster/_affinity_propagation.py
index 4806afee9..cda6616fc 100644
--- a/sklearn/cluster/_affinity_propagation.py
+++ b/sklearn/cluster/_affinity_propagation.py
@@ -151,6 +151,7 @@ def affinity_propagation(S, preference=None, convergence_iter=15, max_iter=200,
     e = np.zeros((n_samples, convergence_iter))
 
     ind = np.arange(n_samples)
+    converged = False
 
     for it in range(max_iter):
         # tmp = A + S; compute responsibilities
@@ -196,11 +197,22 @@ def affinity_propagation(S, preference=None, convergence_iter=15, max_iter=200,
             if (not unconverged and (K > 0)) or (it == max_iter):
                 if verbose:
                     print("Converged after %d iterations." % it)
+                converged = True
                 break
     else:
         if verbose:
             print("Did not converge")
 
+    if not converged:
+        warnings.warn("Affinity propagation did not converge, this model "
+                      "will not have any cluster centers.", ConvergenceWarning)
+        labels = np.array([-1] * n_samples)
+        cluster_centers_indices = np.array([], dtype=int)
+        if return_n_iter:
+            return cluster_centers_indices, labels, it + 1
+        else:
+            return cluster_centers_indices, labels
+
     I = np.flatnonzero(E)
     K = I.size  # Identify exemplars
2024-07-30 17:13:51,783 - INFO - Grading answer for scikit-learn__scikit-learn-15512...
2024-07-30 17:13:51,816 - INFO - report: {'scikit-learn__scikit-learn-15512': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': True, 'tests_status': {'FAIL_TO_PASS': {'success': ['sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_non_convergence_regressiontest'], 'failure': []}, 'PASS_TO_PASS': {'success': ['sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation', 'sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_predict', 'sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_predict_error', 'sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_fit_non_convergence', 'sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_equal_mutual_similarities', 'sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_predict_non_convergence', 'sklearn/cluster/tests/test_affinity_propagation.py::test_equal_similarities_and_preferences', 'sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_convergence_warning_dense_sparse[centers0]', 'sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_convergence_warning_dense_sparse[centers1]'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for scikit-learn__scikit-learn-15512: resolved: True
