2024-07-30 17:17:03,169 - INFO - Intermediate patch for sympy__sympy-18087 written to /shared/patch.diff, now applying to container...
2024-07-30 17:17:03,450 - INFO - >>>>> Applied Patch:
Checking patch sympy/simplify/trigsimp.py...
Applied patch sympy/simplify/trigsimp.py cleanly.

2024-07-30 17:17:10,500 - INFO - Git diff before:
diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py
index 7ca05f0304..b4ea4826a9 100644
--- a/sympy/simplify/trigsimp.py
+++ b/sympy/simplify/trigsimp.py
@@ -496,12 +496,28 @@ def traverse(e):
             return new
         return trigsimp_groebner(new, **opts)
 
+    def safe_trigsimpfunc(expr, func):
+        if expr.is_Add or expr.is_Mul:
+            args = [safe_trigsimpfunc(arg, func) for arg in expr.args]
+            return expr.func(*args)
+        if expr.is_Pow:
+            base, exp = expr.as_base_exp()
+            base = safe_trigsimpfunc(base, func)
+            exp = safe_trigsimpfunc(exp, func)
+            return base**exp
+        if expr.is_Function:
+            args = [safe_trigsimpfunc(arg, func) for arg in expr.args]
+            return expr.func(*args)
+        if expr.is_real is False:
+            return expr
+        return func(expr)
+
     trigsimpfunc = {
         'fu': (lambda x: fu(x, **opts)),
-        'matching': (lambda x: futrig(x)),
-        'groebner': (lambda x: groebnersimp(x, **opts)),
-        'combined': (lambda x: futrig(groebnersimp(x,
-                               polynomial=True, hints=[2, tan]))),
+        'matching': (lambda x: safe_trigsimpfunc(x, futrig)),
+        'groebner': (lambda x: safe_trigsimpfunc(x, lambda y: groebnersimp(y, **opts))),
+        'combined': (lambda x: safe_trigsimpfunc(x, lambda y: futrig(groebnersimp(y,
+                               polynomial=True, hints=[2, tan])))),
         'old': lambda x: trigsimp_old(x, **opts),
                    }[method]
2024-07-30 17:17:10,501 - INFO - Eval script for sympy__sympy-18087 written to /eval.sh
2024-07-30 17:20:01,606 - INFO - Test runtime: 171.10 seconds
2024-07-30 17:20:01,815 - INFO - Git diff after:
diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py
index 7ca05f0304..b4ea4826a9 100644
--- a/sympy/simplify/trigsimp.py
+++ b/sympy/simplify/trigsimp.py
@@ -496,12 +496,28 @@ def traverse(e):
             return new
         return trigsimp_groebner(new, **opts)
 
+    def safe_trigsimpfunc(expr, func):
+        if expr.is_Add or expr.is_Mul:
+            args = [safe_trigsimpfunc(arg, func) for arg in expr.args]
+            return expr.func(*args)
+        if expr.is_Pow:
+            base, exp = expr.as_base_exp()
+            base = safe_trigsimpfunc(base, func)
+            exp = safe_trigsimpfunc(exp, func)
+            return base**exp
+        if expr.is_Function:
+            args = [safe_trigsimpfunc(arg, func) for arg in expr.args]
+            return expr.func(*args)
+        if expr.is_real is False:
+            return expr
+        return func(expr)
+
     trigsimpfunc = {
         'fu': (lambda x: fu(x, **opts)),
-        'matching': (lambda x: futrig(x)),
-        'groebner': (lambda x: groebnersimp(x, **opts)),
-        'combined': (lambda x: futrig(groebnersimp(x,
-                               polynomial=True, hints=[2, tan]))),
+        'matching': (lambda x: safe_trigsimpfunc(x, futrig)),
+        'groebner': (lambda x: safe_trigsimpfunc(x, lambda y: groebnersimp(y, **opts))),
+        'combined': (lambda x: safe_trigsimpfunc(x, lambda y: futrig(groebnersimp(y,
+                               polynomial=True, hints=[2, tan])))),
         'old': lambda x: trigsimp_old(x, **opts),
                    }[method]
2024-07-30 17:20:01,815 - INFO - Grading answer for sympy__sympy-18087...
2024-07-30 17:20:01,818 - INFO - report: {'sympy__sympy-18087': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['test_Factors', 'test_fu']}, 'PASS_TO_PASS': {'success': ['test_decompose_power', 'test_Term', 'test_gcd_terms', 'test_factor_terms', 'test_xreplace', 'test_factor_nc', 'test_issue_6360', 'test_issue_7903', 'test_issue_8263', 'test_monotonic_sign', 'test_TR1', 'test_TR2', 'test_TR2i', 'test_TR3', 'test__TR56', 'test_TR5', 'test_TR6', 'test_TR7', 'test_TR8', 'test_TR9', 'test_TR10', 'test_TR10i', 'test_TR11', 'test_TR12', 'test_TR13', 'test_L', 'test_objective', 'test_process_common_addends', 'test_trig_split', 'test_TRmorrie', 'test_TRpower', 'test_hyper_as_trig', 'test_TR12i', 'test_TR14', 'test_TR15_16_17'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for sympy__sympy-18087: resolved: False
