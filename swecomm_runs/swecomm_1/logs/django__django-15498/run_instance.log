2024-07-30 17:16:09,678 - INFO - Intermediate patch for django__django-15498 written to /shared/patch.diff, now applying to container...
2024-07-30 17:16:10,018 - INFO - >>>>> Applied Patch:
Checking patch django/utils/cache.py...
Checking patch django/utils/http.py...
Checking patch django/views/static.py...
Applied patch django/utils/cache.py cleanly.
Applied patch django/utils/http.py cleanly.
Applied patch django/views/static.py cleanly.

2024-07-30 17:16:26,018 - INFO - Git diff before:
diff --git a/django/utils/cache.py b/django/utils/cache.py
index 90292ce4da..30a4bfca9d 100644
--- a/django/utils/cache.py
+++ b/django/utils/cache.py
@@ -175,7 +175,9 @@ def get_conditional_response(request, etag=None, last_modified=None, response=No
     )
     if_none_match_etags = parse_etags(request.META.get("HTTP_IF_NONE_MATCH", ""))
     if_modified_since = request.META.get("HTTP_IF_MODIFIED_SINCE")
-    if_modified_since = if_modified_since and parse_http_date_safe(if_modified_since)
+    if_modified_since = (
+        parse_http_date_safe(if_modified_since) if if_modified_since else None
+    )
 
     # Step 1 of section 6 of RFC 7232: Test the If-Match precondition.
     if if_match_etags and not _if_match_passes(etag, if_match_etags):
diff --git a/django/utils/http.py b/django/utils/http.py
index 0292713235..78cd777f05 100644
--- a/django/utils/http.py
+++ b/django/utils/http.py
@@ -146,10 +146,12 @@ def parse_http_date_safe(date):
     """
     Same as parse_http_date, but return None if the input is invalid.
     """
+    if not date:
+        return None
     try:
         return parse_http_date(date)
     except Exception:
-        pass
+        return None
 
 
 # Base 36 functions: useful for generating compact URLs
diff --git a/django/views/static.py b/django/views/static.py
index 1c558a53ff..3519b786d2 100644
--- a/django/views/static.py
+++ b/django/views/static.py
@@ -126,7 +126,7 @@ def was_modified_since(header=None, mtime=0, size=0):
       This is the size of the item we're talking about.
     """
     try:
-        if header is None:
+        if header is None or header == '':
             raise ValueError
         matches = re.match(r"^([^;]+)(; length=([0-9]+))?$", header, re.IGNORECASE)
         header_mtime = parse_http_date(matches[1])
2024-07-30 17:16:26,043 - INFO - Eval script for django__django-15498 written to /eval.sh
2024-07-30 17:17:33,598 - INFO - Test runtime: 67.55 seconds
2024-07-30 17:17:34,110 - INFO - Git diff after:
diff --git a/django/utils/cache.py b/django/utils/cache.py
index 90292ce4da..30a4bfca9d 100644
--- a/django/utils/cache.py
+++ b/django/utils/cache.py
@@ -175,7 +175,9 @@ def get_conditional_response(request, etag=None, last_modified=None, response=No
     )
     if_none_match_etags = parse_etags(request.META.get("HTTP_IF_NONE_MATCH", ""))
     if_modified_since = request.META.get("HTTP_IF_MODIFIED_SINCE")
-    if_modified_since = if_modified_since and parse_http_date_safe(if_modified_since)
+    if_modified_since = (
+        parse_http_date_safe(if_modified_since) if if_modified_since else None
+    )
 
     # Step 1 of section 6 of RFC 7232: Test the If-Match precondition.
     if if_match_etags and not _if_match_passes(etag, if_match_etags):
diff --git a/django/utils/http.py b/django/utils/http.py
index 0292713235..78cd777f05 100644
--- a/django/utils/http.py
+++ b/django/utils/http.py
@@ -146,10 +146,12 @@ def parse_http_date_safe(date):
     """
     Same as parse_http_date, but return None if the input is invalid.
     """
+    if not date:
+        return None
     try:
         return parse_http_date(date)
     except Exception:
-        pass
+        return None
 
 
 # Base 36 functions: useful for generating compact URLs
diff --git a/django/views/static.py b/django/views/static.py
index 1c558a53ff..3519b786d2 100644
--- a/django/views/static.py
+++ b/django/views/static.py
@@ -126,7 +126,7 @@ def was_modified_since(header=None, mtime=0, size=0):
       This is the size of the item we're talking about.
     """
     try:
-        if header is None:
+        if header is None or header == '':
             raise ValueError
         matches = re.match(r"^([^;]+)(; length=([0-9]+))?$", header, re.IGNORECASE)
         header_mtime = parse_http_date(matches[1])
2024-07-30 17:17:34,110 - INFO - Grading answer for django__django-15498...
2024-07-30 17:17:34,149 - INFO - report: {'django__django-15498': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': True, 'tests_status': {'FAIL_TO_PASS': {'success': ['test_was_modified_since_empty_string (view_tests.tests.test_static.StaticUtilsTests)'], 'failure': []}, 'PASS_TO_PASS': {'success': ['A floating point mtime does not disturb was_modified_since (#18675).', 'test_404 (view_tests.tests.test_static.StaticHelperTest)', 'The static view should stream files in chunks to avoid large memory usage', 'test_copes_with_empty_path_component (view_tests.tests.test_static.StaticHelperTest)', 'No URLs are served if DEBUG=False.', 'test_empty_prefix (view_tests.tests.test_static.StaticHelperTest)', 'test_index (view_tests.tests.test_static.StaticHelperTest)', 'test_index_custom_template (view_tests.tests.test_static.StaticHelperTest)', 'test_index_subdir (view_tests.tests.test_static.StaticHelperTest)', 'Handle bogus If-Modified-Since values gracefully', 'Handle even more bogus If-Modified-Since values gracefully', 'test_is_modified_since (view_tests.tests.test_static.StaticHelperTest)', 'test_not_modified_since (view_tests.tests.test_static.StaticHelperTest)', 'test_prefix (view_tests.tests.test_static.StaticHelperTest)', 'The static view can serve static media', 'No URLs are served if prefix contains a netloc part.', 'test_unknown_mime_type (view_tests.tests.test_static.StaticHelperTest)', 'test_404 (view_tests.tests.test_static.StaticTests)', 'test_copes_with_empty_path_component (view_tests.tests.test_static.StaticTests)', 'test_index (view_tests.tests.test_static.StaticTests)', 'test_index_custom_template (view_tests.tests.test_static.StaticTests)', 'test_index_subdir (view_tests.tests.test_static.StaticTests)', 'test_is_modified_since (view_tests.tests.test_static.StaticTests)', 'test_not_modified_since (view_tests.tests.test_static.StaticTests)', 'test_unknown_mime_type (view_tests.tests.test_static.StaticTests)'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for django__django-15498: resolved: True
