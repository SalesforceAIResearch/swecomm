2024-07-30 17:14:29,365 - INFO - Intermediate patch for sympy__sympy-18621 written to /shared/patch.diff, now applying to container...
2024-07-30 17:14:29,724 - INFO - >>>>> Applied Patch:
Checking patch sympy/matrices/expressions/blockmatrix.py...
Applied patch sympy/matrices/expressions/blockmatrix.py cleanly.

2024-07-30 17:14:35,187 - INFO - Git diff before:
diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py
index 11aebbc59f..d3633af51f 100644
--- a/sympy/matrices/expressions/blockmatrix.py
+++ b/sympy/matrices/expressions/blockmatrix.py
@@ -288,6 +288,8 @@ class BlockDiagMatrix(BlockMatrix):
     sympy.matrices.dense.diag
     """
     def __new__(cls, *mats):
+        if len(mats) == 1:
+            return BlockMatrix([[mats[0]]])
         return Basic.__new__(BlockDiagMatrix, *mats)
 
     @property
@@ -298,6 +300,8 @@ def diag(self):
     def blocks(self):
         from sympy.matrices.immutable import ImmutableDenseMatrix
         mats = self.args
+        if len(mats) == 1:
+            return ImmutableDenseMatrix([[mats[0]]])
         data = [[mats[i] if i == j else ZeroMatrix(mats[i].rows, mats[j].cols)
                         for j in range(len(mats))]
                         for i in range(len(mats))]
2024-07-30 17:14:35,188 - INFO - Eval script for sympy__sympy-18621 written to /eval.sh
2024-07-30 17:15:06,339 - INFO - Test runtime: 31.15 seconds
2024-07-30 17:15:06,596 - INFO - Git diff after:
diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py
index 11aebbc59f..d3633af51f 100644
--- a/sympy/matrices/expressions/blockmatrix.py
+++ b/sympy/matrices/expressions/blockmatrix.py
@@ -288,6 +288,8 @@ class BlockDiagMatrix(BlockMatrix):
     sympy.matrices.dense.diag
     """
     def __new__(cls, *mats):
+        if len(mats) == 1:
+            return BlockMatrix([[mats[0]]])
         return Basic.__new__(BlockDiagMatrix, *mats)
 
     @property
@@ -298,6 +300,8 @@ def diag(self):
     def blocks(self):
         from sympy.matrices.immutable import ImmutableDenseMatrix
         mats = self.args
+        if len(mats) == 1:
+            return ImmutableDenseMatrix([[mats[0]]])
         data = [[mats[i] if i == j else ZeroMatrix(mats[i].rows, mats[j].cols)
                         for j in range(len(mats))]
                         for i in range(len(mats))]
2024-07-30 17:15:06,596 - INFO - Grading answer for sympy__sympy-18621...
2024-07-30 17:15:06,598 - INFO - report: {'sympy__sympy-18621': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': True, 'tests_status': {'FAIL_TO_PASS': {'success': ['test_issue_18618'], 'failure': []}, 'PASS_TO_PASS': {'success': ['test_bc_matmul', 'test_bc_matadd', 'test_bc_transpose', 'test_bc_dist_diag', 'test_block_plus_ident', 'test_BlockMatrix', 'test_block_collapse_explicit_matrices', 'test_issue_17624', 'test_BlockMatrix_trace', 'test_BlockMatrix_Determinant', 'test_squareBlockMatrix', 'test_BlockDiagMatrix', 'test_blockcut', 'test_reblock_2x2', 'test_deblock'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for sympy__sympy-18621: resolved: True
