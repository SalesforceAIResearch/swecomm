+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   sympy/simplify/cse_main.py

no changes added to commit (use "git add" and/or "git commit -a")
+ git show
commit d822fcba181155b85ff2b29fe525adbafb22b448
Merge: 1cfce0660a 4e6a36c921
Author: Chris Smith <smichr@gmail.com>
Date:   Mon Jan 10 17:36:03 2022 -0600

    Merge pull request #22829 from smichr/parse
    
    do not use None as key in local_dict

+ git diff d822fcba181155b85ff2b29fe525adbafb22b448
diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py
index d649dd02a9..3c1d19ede7 100644
--- a/sympy/simplify/cse_main.py
+++ b/sympy/simplify/cse_main.py
@@ -478,7 +478,7 @@ def opt_cse(exprs, order='canonical'):
     >>> print((k, v.as_unevaluated_basic()))
     (x**(-2), 1/(x**2))
     """
-    from sympy.matrices.expressions import MatAdd, MatMul, MatPow
+    from sympy.matrices.expressions import MatAdd, MatMul, MatPow, MatrixExpr
     opt_subs = dict()
 
     adds = OrderedSet()
@@ -521,6 +521,9 @@ def _find_opts(expr):
             base, exp = expr.base, expr.exp
             if exp.could_extract_minus_sign():
                 opt_subs[expr] = Unevaluated(Pow, (Pow(base, -exp), -1))
+        
+        elif isinstance(expr, MatrixExpr):
+            pass
 
     for e in exprs:
         if isinstance(e, (Basic, Unevaluated)):
@@ -643,43 +646,16 @@ def _rebuild(expr):
         if expr in opt_subs:
             expr = opt_subs[expr]
 
-        # If enabled, parse Muls and Adds arguments by order to ensure
-        # replacement order independent from hashes
-        if order != 'none':
-            if isinstance(expr, (Mul, MatMul)):
-                c, nc = expr.args_cnc()
-                if c == [1]:
-                    args = nc
-                else:
-                    args = list(ordered(c)) + nc
-            elif isinstance(expr, (Add, MatAdd)):
-                args = list(ordered(expr.args))
-            else:
-                args = expr.args
-        else:
-            args = expr.args
-
-        new_args = list(map(_rebuild, args))
-        if isinstance(expr, Unevaluated) or new_args != args:
+        # Special handling for MatrixExpr
+        if isinstance(expr, MatrixExpr):
+            new_args = [_rebuild(arg) for arg in expr.args]
             new_expr = expr.func(*new_args)
-        else:
-            new_expr = expr
-
-        if orig_expr in to_eliminate:
-            try:
+            if orig_expr in to_eliminate:
                 sym = next(symbols)
-            except StopIteration:
-                raise ValueError("Symbols iterator ran out of symbols.")
-
-            if isinstance(orig_expr, MatrixExpr):
-                sym = MatrixSymbol(sym.name, orig_expr.rows,
-                    orig_expr.cols)
-
-            subs[orig_expr] = sym
-            replacements.append((sym, new_expr))
-            return sym
-
-        else:
+                sym = MatrixSymbol(sym.name, new_expr.rows, new_expr.cols)
+                subs[orig_expr] = sym
+                replacements.append((sym, new_expr))
+                return sym
             return new_expr
 
     reduced_exprs = []
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Requirement already satisfied: mpmath>=0.19 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from sympy==1.10.dev0) (1.3.0)
Installing collected packages: sympy
  Attempting uninstall: sympy
    Found existing installation: sympy 1.10.dev0
    Uninstalling sympy-1.10.dev0:
      Successfully uninstalled sympy-1.10.dev0
  Running setup.py develop for sympy
Successfully installed sympy-1.10.dev0
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
+ git checkout d822fcba181155b85ff2b29fe525adbafb22b448 sympy/simplify/tests/test_cse.py sympy/utilities/tests/test_codegen.py
Updated 0 paths from 7618ee7ffe
+ git apply -v -
Checking patch sympy/simplify/tests/test_cse.py...
Checking patch sympy/utilities/tests/test_codegen.py...
Applied patch sympy/simplify/tests/test_cse.py cleanly.
Applied patch sympy/utilities/tests/test_codegen.py cleanly.
+ PYTHONWARNINGS=ignore::UserWarning,ignore::SyntaxWarning
+ bin/test -C --verbose sympy/simplify/tests/test_cse.py sympy/utilities/tests/test_codegen.py
============================= test process starts ==============================
executable:         /opt/miniconda3/envs/testbed/bin/python  (3.9.19-final-0) [CPython]
architecture:       64-bit
cache:              no
ground types:       python 
numpy:              None
random seed:        28641960
hash randomization: on (PYTHONHASHSEED=191985212)

sympy/simplify/tests/test_cse.py[47] 
test_numbered_symbols ok
test_preprocess_for_cse ok
test_postprocess_for_cse ok
test_cse_single F
test_cse_single2 F
test_cse_not_possible F
test_nested_substitution F
test_subtraction_opt F
test_multiple_expressions F
test_non_commutative_cse f
test_bypass_non_commutatives F
test_non_commutative_order f
test_issue_10228 f
test_powers f
test_issue_4498 F
test_issue_4020 F
test_issue_4203 F
test_issue_6263 ok
test_dont_cse_tuples F
test_pow_invpow F
test_postprocess E
test_issue_4499 F
test_issue_6169 F
test_cse_Indexed F
test_cse_MatrixSymbol F
test_cse_MatrixExpr E
test_Piecewise F
test_ignore_order_terms F
test_name_conflict E
test_name_conflict_cust_symbols E
test_symbols_exhausted_error E
test_issue_7840 E
test_issue_8891 E
test_issue_11230 E
test_issue_11577 f
test_hollow_rejection F
test_cse_ignore F
test_cse_ignore_issue_15002 E
test_cse__performance F
test_issue_12070 ok
test_issue_13000 F
test_issue_18203 F
test_unevaluated_mul F
test_cse_release_variables F
test_cse_list ok
test_issue_18991 ok
test_unevaluated_Mul F                                                    [FAIL]

sympy/utilities/tests/test_codegen.py[57] 
test_Routine_argument_order ok
test_empty_c_code ok
test_empty_c_code_with_comment ok
test_empty_c_header ok
test_simple_c_code ok
test_c_code_reserved_words ok
test_numbersymbol_c_code ok
test_c_code_argument_order ok
test_simple_c_header ok
test_simple_c_codegen ok
test_multiple_results_c ok
test_no_results_c ok
test_ansi_math1_codegen ok
test_ansi_math2_codegen ok
test_complicated_codegen ok
test_loops_c ok
test_dummy_loops_c ok
test_partial_loops_c ok
test_output_arg_c ok
test_output_arg_c_reserved_words ok
test_multidim_c_argument_cse E
test_ccode_results_named_ordered ok
test_ccode_matrixsymbol_slice ok
test_ccode_cse E
test_ccode_unused_array_arg ok
test_empty_f_code ok
test_empty_f_code_with_header ok
test_empty_f_header ok
test_simple_f_code ok
test_numbersymbol_f_code ok
test_erf_f_code ok
test_f_code_argument_order ok
test_simple_f_header ok
test_simple_f_codegen ok
test_multiple_results_f ok
test_no_results_f ok
test_intrinsic_math_codegen ok
test_intrinsic_math2_codegen ok
test_complicated_codegen_f95 ok
test_loops ok
test_dummy_loops_f95 ok
test_loops_InOut ok
test_partial_loops_f ok
test_output_arg_f ok
test_inline_function ok
test_f_code_call_signature_wrap ok
test_check_case ok
test_check_case_false_positive ok
test_c_fortran_omit_routine_name ok
test_fcode_matrix_output ok
test_fcode_results_named_ordered ok
test_fcode_matrixsymbol_slice ok
test_fcode_matrixsymbol_slice_autoname ok
test_global_vars ok
test_custom_codegen ok
test_c_with_printer ok
test_fcode_complex ok                                                     [FAIL]


________________________________ slowest tests _________________________________
sympy/simplify/tests/test_cse.py::test_ignore_order_terms - Took 49.403 seconds
________________________________________________________________________________
______________ sympy/simplify/tests/test_cse.py:test_postprocess _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 291, in test_postprocess
    assert cse([eq, Eq(x, z + 1), z - 2, (z + 1)*(x + 1)],
  File "/testbed/sympy/simplify/cse_main.py", line 825, in cse
    return postprocess(replacements, reduced_exprs)
  File "/testbed/sympy/simplify/cse_main.py", line 84, in cse_separate
    d = sift(e, lambda w: w.is_Equality and w.lhs.is_Symbol)
  File "/testbed/sympy/utilities/iterables.py", line 666, in sift
    m[keyfunc(i)].append(i)
  File "/testbed/sympy/simplify/cse_main.py", line 84, in <lambda>
    d = sift(e, lambda w: w.is_Equality and w.lhs.is_Symbol)
AttributeError: 'NoneType' object has no attribute 'is_Equality'
________________________________________________________________________________
_____________ sympy/simplify/tests/test_cse.py:test_cse_MatrixExpr _____________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 360, in test_cse_MatrixExpr
    replacements, reduced_exprs = cse([expr1, expr2])
  File "/testbed/sympy/simplify/cse_main.py", line 797, in cse
    replacements, reduced_exprs = tree_cse(reduced_exprs, symbols, opt_subs,
  File "/testbed/sympy/simplify/cse_main.py", line 664, in tree_cse
    reduced_e = _rebuild(e)
  File "/testbed/sympy/simplify/cse_main.py", line 652, in _rebuild
    new_expr = expr.func(*new_args)
  File "/testbed/sympy/matrices/expressions/matmul.py", line 50, in __new__
    factor, matrices = obj.as_coeff_matrices()
  File "/testbed/sympy/matrices/expressions/matmul.py", line 117, in as_coeff_matrices
    scalars = [x for x in self.args if not x.is_Matrix]
  File "/testbed/sympy/matrices/expressions/matmul.py", line 117, in <listcomp>
    scalars = [x for x in self.args if not x.is_Matrix]
AttributeError: 'NoneType' object has no attribute 'is_Matrix'
________________________________________________________________________________
_____________ sympy/simplify/tests/test_cse.py:test_name_conflict ______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 388, in test_name_conflict
    assert [e.subs(reversed(substs)) for e in reduced] == l
  File "/testbed/sympy/simplify/tests/test_cse.py", line 388, in <listcomp>
    assert [e.subs(reversed(substs)) for e in reduced] == l
AttributeError: 'NoneType' object has no attribute 'subs'
________________________________________________________________________________
_______ sympy/simplify/tests/test_cse.py:test_name_conflict_cust_symbols _______
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 396, in test_name_conflict_cust_symbols
    assert [e.subs(reversed(substs)) for e in reduced] == l
  File "/testbed/sympy/simplify/tests/test_cse.py", line 396, in <listcomp>
    assert [e.subs(reversed(substs)) for e in reduced] == l
AttributeError: 'NoneType' object has no attribute 'subs'
________________________________________________________________________________
________ sympy/simplify/tests/test_cse.py:test_symbols_exhausted_error _________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 403, in test_symbols_exhausted_error
    cse(l, symbols=sym)
  File "/testbed/sympy/testing/pytest.py", line 134, in __exit__
    raise Failed("DID NOT RAISE")
sympy.testing.pytest.Failed: DID NOT RAISE
________________________________________________________________________________
_______________ sympy/simplify/tests/test_cse.py:test_issue_7840 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 425, in test_issue_7840
    cse_answer = new_eqn[0].subs(sub)
AttributeError: 'NoneType' object has no attribute 'subs'
________________________________________________________________________________
_______________ sympy/simplify/tests/test_cse.py:test_issue_8891 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 447, in test_issue_8891
    res = cse([x + y, m])
  File "/testbed/sympy/simplify/cse_main.py", line 811, in cse
    reduced_exprs[i] = Matrix(e.rows, e.cols, reduced_exprs[i])
  File "/testbed/sympy/matrices/repmatrix.py", line 319, in __new__
    return cls._new(*args, **kwargs)
  File "/testbed/sympy/matrices/repmatrix.py", line 333, in _new
    rep = cls._flat_list_to_DomainMatrix(rows, cols, flat_list)
  File "/testbed/sympy/matrices/repmatrix.py", line 128, in _flat_list_to_DomainMatrix
    rep = cls._dod_to_DomainMatrix(rows, cols, elements_dod, types)
  File "/testbed/sympy/matrices/repmatrix.py", line 100, in _dod_to_DomainMatrix
    SymPyDeprecationWarning(
  File "/testbed/sympy/utilities/exceptions.py", line 183, in warn
    warnings.warn(self, stacklevel=stacklevel)
sympy.utilities.exceptions.SymPyDeprecationWarning: 

non-Expr objects in a Matrix has been deprecated since SymPy 1.9. Use
list of lists, TableForm or some other data structure instead. See
https://github.com/sympy/sympy/issues/21497 for more info.

________________________________________________________________________________
______________ sympy/simplify/tests/test_cse.py:test_issue_11230 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 458, in test_issue_11230
    assert not any(i.is_Mul for a in C for i in a.args)
  File "/testbed/sympy/simplify/tests/test_cse.py", line 458, in <genexpr>
    assert not any(i.is_Mul for a in C for i in a.args)
AttributeError: 'NoneType' object has no attribute 'args'
________________________________________________________________________________
_________ sympy/simplify/tests/test_cse.py:test_cse_ignore_issue_15002 _________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 532, in test_cse_ignore_issue_15002
    rl = [e.subs(reversed(substs)) for e in reduced]
  File "/testbed/sympy/simplify/tests/test_cse.py", line 532, in <listcomp>
    rl = [e.subs(reversed(substs)) for e in reduced]
AttributeError: 'NoneType' object has no attribute 'subs'
________________________________________________________________________________
______ sympy/utilities/tests/test_codegen.py:test_multidim_c_argument_cse ______
Traceback (most recent call last):
  File "/testbed/sympy/utilities/tests/test_codegen.py", line 526, in test_multidim_c_argument_cse
    r = cgen.routine("c", c)
  File "/testbed/sympy/utilities/codegen.py", line 612, in routine
    common, simplified = cse(expr)
  File "/testbed/sympy/simplify/cse_main.py", line 811, in cse
    reduced_exprs[i] = Matrix(e.rows, e.cols, reduced_exprs[i])
  File "/testbed/sympy/matrices/repmatrix.py", line 319, in __new__
    return cls._new(*args, **kwargs)
  File "/testbed/sympy/matrices/repmatrix.py", line 333, in _new
    rep = cls._flat_list_to_DomainMatrix(rows, cols, flat_list)
  File "/testbed/sympy/matrices/repmatrix.py", line 128, in _flat_list_to_DomainMatrix
    rep = cls._dod_to_DomainMatrix(rows, cols, elements_dod, types)
  File "/testbed/sympy/matrices/repmatrix.py", line 100, in _dod_to_DomainMatrix
    SymPyDeprecationWarning(
  File "/testbed/sympy/utilities/exceptions.py", line 183, in warn
    warnings.warn(self, stacklevel=stacklevel)
sympy.utilities.exceptions.SymPyDeprecationWarning: 

non-Expr objects in a Matrix has been deprecated since SymPy 1.9. Use
list of lists, TableForm or some other data structure instead. See
https://github.com/sympy/sympy/issues/21497 for more info.

________________________________________________________________________________
_____________ sympy/utilities/tests/test_codegen.py:test_ccode_cse _____________
Traceback (most recent call last):
  File "/testbed/sympy/utilities/tests/test_codegen.py", line 602, in test_ccode_cse
    result = codegen(name_expr, code_gen=generator, header=False, empty=False)
  File "/testbed/sympy/utilities/codegen.py", line 2140, in codegen
    routines.append(code_gen.routine(name, expr, argument_sequence,
  File "/testbed/sympy/utilities/codegen.py", line 603, in routine
    common, simplified = cse(rhs)
  File "/testbed/sympy/simplify/cse_main.py", line 811, in cse
    reduced_exprs[i] = Matrix(e.rows, e.cols, reduced_exprs[i])
  File "/testbed/sympy/matrices/repmatrix.py", line 319, in __new__
    return cls._new(*args, **kwargs)
  File "/testbed/sympy/matrices/repmatrix.py", line 333, in _new
    rep = cls._flat_list_to_DomainMatrix(rows, cols, flat_list)
  File "/testbed/sympy/matrices/repmatrix.py", line 128, in _flat_list_to_DomainMatrix
    rep = cls._dod_to_DomainMatrix(rows, cols, elements_dod, types)
  File "/testbed/sympy/matrices/repmatrix.py", line 100, in _dod_to_DomainMatrix
    SymPyDeprecationWarning(
  File "/testbed/sympy/utilities/exceptions.py", line 183, in warn
    warnings.warn(self, stacklevel=stacklevel)
sympy.utilities.exceptions.SymPyDeprecationWarning: 

non-Expr objects in a Matrix has been deprecated since SymPy 1.9. Use
list of lists, TableForm or some other data structure instead. See
https://github.com/sympy/sympy/issues/21497 for more info.


________________________________________________________________________________
_______________ sympy/simplify/tests/test_cse.py:test_cse_single _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 85, in test_cse_single
    assert substs == [(x0, x + y)]
AssertionError
________________________________________________________________________________
______________ sympy/simplify/tests/test_cse.py:test_cse_single2 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 98, in test_cse_single2
    assert substs == [(x0, x + y)]
AssertionError
________________________________________________________________________________
____________ sympy/simplify/tests/test_cse.py:test_cse_not_possible ____________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 114, in test_cse_not_possible
    assert reduced == [x + y]
AssertionError
________________________________________________________________________________
__________ sympy/simplify/tests/test_cse.py:test_nested_substitution ___________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 125, in test_nested_substitution
    assert substs == [(x0, w*x + y)]
AssertionError
________________________________________________________________________________
____________ sympy/simplify/tests/test_cse.py:test_subtraction_opt _____________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 134, in test_subtraction_opt
    assert substs == [(x0, (x - y)*(y - z))]
AssertionError
________________________________________________________________________________
__________ sympy/simplify/tests/test_cse.py:test_multiple_expressions __________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 154, in test_multiple_expressions
    assert substs == [(x0, x + y)]
AssertionError
________________________________________________________________________________
________ sympy/simplify/tests/test_cse.py:test_bypass_non_commutatives _________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 193, in test_bypass_non_commutatives
    assert cse(l) == ([], l)
AssertionError
________________________________________________________________________________
_______________ sympy/simplify/tests/test_cse.py:test_issue_4498 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 228, in test_issue_4498
    assert cse(w/(x - y) + z/(y - x), optimizations='basic') == \
AssertionError
________________________________________________________________________________
_______________ sympy/simplify/tests/test_cse.py:test_issue_4020 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 233, in test_issue_4020
    assert cse(x**5 + x**4 + x**3 + x**2, optimizations='basic') \
AssertionError
________________________________________________________________________________
_______________ sympy/simplify/tests/test_cse.py:test_issue_4203 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 238, in test_issue_4203
    assert cse(sin(x**x)/x**x) == ([(x0, x**x)], [sin(x0)/x0])
AssertionError
________________________________________________________________________________
____________ sympy/simplify/tests/test_cse.py:test_dont_cse_tuples _____________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 256, in test_dont_cse_tuples
    assert expr == (Subs(f(x, y), (x, y), (0, 1))
AssertionError
________________________________________________________________________________
_______________ sympy/simplify/tests/test_cse.py:test_pow_invpow _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 269, in test_pow_invpow
    assert cse(1/x**2 + x**2) == \
AssertionError
________________________________________________________________________________
_______________ sympy/simplify/tests/test_cse.py:test_issue_4499 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 318, in test_issue_4499
    assert ans == c
AssertionError
________________________________________________________________________________
_______________ sympy/simplify/tests/test_cse.py:test_issue_6169 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 323, in test_issue_6169
    assert cse(r) == ([], [r])
AssertionError
________________________________________________________________________________
______________ sympy/simplify/tests/test_cse.py:test_cse_Indexed _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 338, in test_cse_Indexed
    assert len(replacements) > 0
AssertionError
________________________________________________________________________________
____________ sympy/simplify/tests/test_cse.py:test_cse_MatrixSymbol ____________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 350, in test_cse_MatrixSymbol
    assert cse(A[0] * A[0]) == ([], [A[0]*A[0]])
AssertionError
________________________________________________________________________________
_______________ sympy/simplify/tests/test_cse.py:test_Piecewise ________________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 375, in test_Piecewise
    assert ans == actual_ans
AssertionError
________________________________________________________________________________
___________ sympy/simplify/tests/test_cse.py:test_ignore_order_terms ___________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 380, in test_ignore_order_terms
    assert cse(eq) == ([], [sin(x**3 + y) + x + x**2/2 + O(x**3)])
AssertionError
________________________________________________________________________________
____________ sympy/simplify/tests/test_cse.py:test_hollow_rejection ____________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 514, in test_hollow_rejection
    assert cse(eq) == ([], eq)
AssertionError
________________________________________________________________________________
_______________ sympy/simplify/tests/test_cse.py:test_cse_ignore _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 520, in test_cse_ignore
    assert any(y in sub.free_symbols for _, sub in subst1), "cse failed to identify any term with y"
AssertionError: cse failed to identify any term with y
________________________________________________________________________________
____________ sympy/simplify/tests/test_cse.py:test_cse__performance ____________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 544, in test_cse__performance
    assert len(subst) > 0, "exprs[0] == -exprs[2], i.e. a CSE"
AssertionError: exprs[0] == -exprs[2], i.e. a CSE
________________________________________________________________________________
______________ sympy/simplify/tests/test_cse.py:test_issue_13000 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 559, in test_issue_13000
    assert cse_eq == eq
AssertionError
________________________________________________________________________________
______________ sympy/simplify/tests/test_cse.py:test_issue_18203 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 564, in test_issue_18203
    assert cse(eq) == ([], [eq])
AssertionError
________________________________________________________________________________
____________ sympy/simplify/tests/test_cse.py:test_unevaluated_mul _____________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 569, in test_unevaluated_mul
    assert cse(eq) == ([(x0, x + y)], [x0**2])
AssertionError
________________________________________________________________________________
_________ sympy/simplify/tests/test_cse.py:test_cse_release_variables __________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 579, in test_cse_release_variables
    assert r, e == ([
AssertionError: False
________________________________________________________________________________
____________ sympy/simplify/tests/test_cse.py:test_unevaluated_Mul _____________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 605, in test_unevaluated_Mul
    assert cse(m) == ([], m)
AssertionError

 tests finished: 62 passed, 26 failed, 5 expected to fail, 11 exceptions, 
in 61.45 seconds 
DO *NOT* COMMIT!
+ git checkout d822fcba181155b85ff2b29fe525adbafb22b448 sympy/simplify/tests/test_cse.py sympy/utilities/tests/test_codegen.py
Updated 2 paths from 7618ee7ffe
