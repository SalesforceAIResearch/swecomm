diff --git a/sklearn/mixture/base.py b/sklearn/mixture/base.py
index bd34333c0..43bb2083e 100644
--- a/sklearn/mixture/base.py
+++ b/sklearn/mixture/base.py
@@ -227,6 +227,8 @@ class BaseMixture(DensityMixin, BaseEstimator, metaclass=ABCMeta):
         random_state = check_random_state(self.random_state)
 
         n_samples, _ = X.shape
+        best_log_resp = None
+        self.lower_bound_ = -np.infty
         for init in range(n_init):
             self._print_verbose_msg_init_beg(init)
 
@@ -256,11 +258,7 @@ class BaseMixture(DensityMixin, BaseEstimator, metaclass=ABCMeta):
                 max_lower_bound = lower_bound
                 best_params = self._get_parameters()
                 best_n_iter = n_iter
-
-        # Always do a final e-step to guarantee that the labels returned by
-        # fit_predict(X) are always consistent with fit(X).predict(X)
-        # for any value of max_iter and tol (and any random_state).
-        _, log_resp = self._e_step(X)
+                best_log_resp = log_resp
 
         if not self.converged_:
             warnings.warn('Initialization %d did not converge. '
@@ -272,8 +270,9 @@ class BaseMixture(DensityMixin, BaseEstimator, metaclass=ABCMeta):
         self._set_parameters(best_params)
         self.n_iter_ = best_n_iter
         self.lower_bound_ = max_lower_bound
+        self.best_log_resp = best_log_resp
 
-        return log_resp.argmax(axis=1)
+        return best_log_resp.argmax(axis=1)
 
     def _e_step(self, X):
         """E step.
@@ -371,7 +370,10 @@ class BaseMixture(DensityMixin, BaseEstimator, metaclass=ABCMeta):
         """
         self._check_is_fitted()
         X = _check_X(X, None, self.means_.shape[1])
-        return self._estimate_weighted_log_prob(X).argmax(axis=1)
+        if hasattr(self, 'best_log_resp'):
+            return self.best_log_resp.argmax(axis=1)
+        else:
+            return self._estimate_weighted_log_prob(X).argmax(axis=1)
 
     def predict_proba(self, X):
         """Predict posterior probability of each component given the data.
