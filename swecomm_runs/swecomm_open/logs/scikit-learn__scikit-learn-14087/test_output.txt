+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   sklearn/linear_model/logistic.py

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	sklearn/linear_model/.backup.logistic.py
	test_logistic_regression_cv.py

no changes added to commit (use "git add" and/or "git commit -a")
+ git show
commit a5743ed36fbd3fbc8e351bdab16561fbfca7dfa1
Author: Nicolas Hug <contact@nicolas-hug.com>
Date:   Thu Jun 13 14:52:56 2019 -0400

    TST add test for LAD-loss and quantile loss equivalence (old GBDT code) (#14086)

diff --git a/sklearn/ensemble/tests/test_gradient_boosting_loss_functions.py b/sklearn/ensemble/tests/test_gradient_boosting_loss_functions.py
index 32c65aabf..a82dbab4e 100644
--- a/sklearn/ensemble/tests/test_gradient_boosting_loss_functions.py
+++ b/sklearn/ensemble/tests/test_gradient_boosting_loss_functions.py
@@ -6,6 +6,7 @@ import numpy as np
 from numpy.testing import assert_almost_equal
 from numpy.testing import assert_allclose
 from numpy.testing import assert_equal
+import pytest
 
 from sklearn.utils import check_random_state
 from sklearn.utils.stats import _weighted_percentile
@@ -273,3 +274,24 @@ def test_init_raw_predictions_values():
         for k in range(n_classes):
             p = (y == k).mean()
         assert_almost_equal(raw_predictions[:, k], np.log(p))
+
+
+@pytest.mark.parametrize('seed', range(5))
+def test_lad_equals_quantile_50(seed):
+    # Make sure quantile loss with alpha = .5 is equivalent to LAD
+    lad = LeastAbsoluteError(n_classes=1)
+    ql = QuantileLossFunction(n_classes=1, alpha=0.5)
+
+    n_samples = 50
+    rng = np.random.RandomState(seed)
+    raw_predictions = rng.normal(size=(n_samples))
+    y_true = rng.normal(size=(n_samples))
+
+    lad_loss = lad(y_true, raw_predictions)
+    ql_loss = ql(y_true, raw_predictions)
+    assert_almost_equal(lad_loss, 2 * ql_loss)
+
+    weights = np.linspace(0, 1, n_samples) ** 2
+    lad_weighted_loss = lad(y_true, raw_predictions, sample_weight=weights)
+    ql_weighted_loss = ql(y_true, raw_predictions, sample_weight=weights)
+    assert_almost_equal(lad_weighted_loss, 2 * ql_weighted_loss)
+ git diff a5743ed36fbd3fbc8e351bdab16561fbfca7dfa1
diff --git a/sklearn/linear_model/logistic.py b/sklearn/linear_model/logistic.py
index 1999f1dae..c9323ab2a 100644
--- a/sklearn/linear_model/logistic.py
+++ b/sklearn/linear_model/logistic.py
@@ -2170,7 +2170,7 @@ class LogisticRegressionCV(LogisticRegression, BaseEstimator,
                 # Take the best scores across every fold and the average of
                 # all coefficients corresponding to the best scores.
                 best_indices = np.argmax(scores, axis=1)
-                if self.multi_class == 'ovr':
+                if multi_class == 'ovr':
                     w = np.mean([coefs_paths[i, best_indices[i], :]
                                  for i in range(len(folds))], axis=0)
                 else:
@@ -2178,10 +2178,13 @@ class LogisticRegressionCV(LogisticRegression, BaseEstimator,
                                  for i in range(len(folds))], axis=0)
 
                 best_indices_C = best_indices % len(self.Cs_)
-                self.C_.append(np.mean(self.Cs_[best_indices_C]))
+                self.C_.append(np.mean(self.Cs_[best_indices_C.astype(int)]))
 
-                best_indices_l1 = best_indices // len(self.Cs_)
-                self.l1_ratio_.append(np.mean(l1_ratios_[best_indices_l1]))
+                if len(l1_ratios_) > 1:
+                    best_indices_l1 = best_indices // len(self.Cs_)
+                    self.l1_ratio_.append(np.mean(l1_ratios_[best_indices_l1.astype(int)]))
+                else:
+                    self.l1_ratio_.append(l1_ratios_[0])
 
             if multi_class == 'multinomial':
                 self.C_ = np.tile(self.C_, n_classes)
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -v --no-use-pep517 --no-build-isolation -e .
Using pip 21.2.2 from /opt/miniconda3/envs/testbed/lib/python3.6/site-packages/pip (python 3.6)
Obtaining file:///testbed
    Running command python setup.py egg_info
    running egg_info
    creating /tmp/pip-pip-egg-info-y043ucyy/scikit_learn.egg-info
    writing /tmp/pip-pip-egg-info-y043ucyy/scikit_learn.egg-info/PKG-INFO
    writing dependency_links to /tmp/pip-pip-egg-info-y043ucyy/scikit_learn.egg-info/dependency_links.txt
    writing requirements to /tmp/pip-pip-egg-info-y043ucyy/scikit_learn.egg-info/requires.txt
    writing top-level names to /tmp/pip-pip-egg-info-y043ucyy/scikit_learn.egg-info/top_level.txt
    writing manifest file '/tmp/pip-pip-egg-info-y043ucyy/scikit_learn.egg-info/SOURCES.txt'
    reading manifest file '/tmp/pip-pip-egg-info-y043ucyy/scikit_learn.egg-info/SOURCES.txt'
    reading manifest template 'MANIFEST.in'
    adding license file 'COPYING'
    writing manifest file '/tmp/pip-pip-egg-info-y043ucyy/scikit_learn.egg-info/SOURCES.txt'
    Partial import of sklearn during the build process.
Requirement already satisfied: numpy>=1.11.0 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from scikit-learn==0.22.dev0) (1.19.2)
Requirement already satisfied: scipy>=0.17.0 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from scikit-learn==0.22.dev0) (1.5.2)
Requirement already satisfied: joblib>=0.11 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from scikit-learn==0.22.dev0) (1.1.1)
Installing collected packages: scikit-learn
  Attempting uninstall: scikit-learn
    Found existing installation: scikit-learn 0.22.dev0
    Uninstalling scikit-learn-0.22.dev0:
      Removing file or directory /opt/miniconda3/envs/testbed/lib/python3.6/site-packages/scikit-learn.egg-link
      Removing pth entries from /opt/miniconda3/envs/testbed/lib/python3.6/site-packages/easy-install.pth:
      Removing entry: /testbed
      Successfully uninstalled scikit-learn-0.22.dev0
  Running setup.py develop for scikit-learn
    Running command /opt/miniconda3/envs/testbed/bin/python -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '"'"'/testbed/setup.py'"'"'; __file__='"'"'/testbed/setup.py'"'"';f = getattr(tokenize, '"'"'open'"'"', open)(__file__) if os.path.exists(__file__) else io.StringIO('"'"'from setuptools import setup; setup()'"'"');code = f.read().replace('"'"'\r\n'"'"', '"'"'\n'"'"');f.close();exec(compile(code, __file__, '"'"'exec'"'"'))' develop --no-deps
    blas_opt_info:
    blas_mkl_info:
    customize UnixCCompiler
      libraries mkl_rt not found in ['/opt/miniconda3/envs/testbed/lib', '/usr/local/lib', '/usr/lib64', '/usr/lib', '/usr/lib/x86_64-linux-gnu']
      NOT AVAILABLE

    blis_info:
      libraries blis not found in ['/opt/miniconda3/envs/testbed/lib', '/usr/local/lib', '/usr/lib64', '/usr/lib', '/usr/lib/x86_64-linux-gnu']
      NOT AVAILABLE

    openblas_info:
    C compiler: gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wl,--sysroot=/ -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC

    creating /tmp/tmpdtrnyb_5/tmp
    creating /tmp/tmpdtrnyb_5/tmp/tmpdtrnyb_5
    compile options: '-c'
    gcc: /tmp/tmpdtrnyb_5/source.c
    gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wl,--sysroot=/ /tmp/tmpdtrnyb_5/tmp/tmpdtrnyb_5/source.o -L/opt/miniconda3/envs/testbed/lib -lopenblas -o /tmp/tmpdtrnyb_5/a.out
      FOUND:
        libraries = ['openblas', 'openblas']
        library_dirs = ['/opt/miniconda3/envs/testbed/lib']
        language = c
        define_macros = [('HAVE_CBLAS', None)]

      FOUND:
        libraries = ['openblas', 'openblas']
        library_dirs = ['/opt/miniconda3/envs/testbed/lib']
        language = c
        define_macros = [('HAVE_CBLAS', None)]

    C compiler: gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wl,--sysroot=/ -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC

    compile options: '-c'
    extra options: '-fopenmp'
    gcc: test_openmp.c
    gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wl,--sysroot=/ objects/test_openmp.o -o test_openmp -fopenmp
    running develop
    running build_scripts
    running egg_info
    running build_src
    build_src
    building library "libsvm-skl" sources
    building extension "sklearn.__check_build._check_build" sources
    building extension "sklearn.preprocessing._csr_polynomial_expansion" sources
    building extension "sklearn.cluster._dbscan_inner" sources
    building extension "sklearn.cluster._hierarchical" sources
    building extension "sklearn.cluster._k_means_elkan" sources
    building extension "sklearn.cluster._k_means" sources
    building extension "sklearn.datasets._svmlight_format" sources
    building extension "sklearn.decomposition._online_lda" sources
    building extension "sklearn.decomposition.cdnmf_fast" sources
    building extension "sklearn.ensemble._gradient_boosting" sources
    building extension "sklearn.ensemble._hist_gradient_boosting._gradient_boosting" sources
    building extension "sklearn.ensemble._hist_gradient_boosting.histogram" sources
    building extension "sklearn.ensemble._hist_gradient_boosting.splitting" sources
    building extension "sklearn.ensemble._hist_gradient_boosting._binning" sources
    building extension "sklearn.ensemble._hist_gradient_boosting._predictor" sources
    building extension "sklearn.ensemble._hist_gradient_boosting._loss" sources
    building extension "sklearn.ensemble._hist_gradient_boosting.types" sources
    building extension "sklearn.ensemble._hist_gradient_boosting.utils" sources
    building extension "sklearn.feature_extraction._hashing" sources
    building extension "sklearn.manifold._utils" sources
    building extension "sklearn.manifold._barnes_hut_tsne" sources
    building extension "sklearn.metrics.cluster.expected_mutual_info_fast" sources
    building extension "sklearn.metrics.pairwise_fast" sources
    building extension "sklearn.neighbors.ball_tree" sources
    building extension "sklearn.neighbors.kd_tree" sources
    building extension "sklearn.neighbors.dist_metrics" sources
    building extension "sklearn.neighbors.typedefs" sources
    building extension "sklearn.neighbors.quad_tree" sources
    building extension "sklearn.tree._tree" sources
    building extension "sklearn.tree._splitter" sources
    building extension "sklearn.tree._criterion" sources
    building extension "sklearn.tree._utils" sources
    building extension "sklearn.utils.sparsefuncs_fast" sources
    building extension "sklearn.utils._cython_blas" sources
    building extension "sklearn.utils.arrayfuncs" sources
    building extension "sklearn.utils.murmurhash" sources
    building extension "sklearn.utils.lgamma" sources
    building extension "sklearn.utils.graph_shortest_path" sources
    building extension "sklearn.utils.fast_dict" sources
    building extension "sklearn.utils.seq_dataset" sources
    building extension "sklearn.utils.weight_vector" sources
    building extension "sklearn.utils._random" sources
    building extension "sklearn.utils._logistic_sigmoid" sources
    building extension "sklearn.svm.libsvm" sources
    building extension "sklearn.svm.liblinear" sources
    building extension "sklearn.svm.libsvm_sparse" sources
    building extension "sklearn.linear_model.cd_fast" sources
    building extension "sklearn.linear_model.sgd_fast" sources
    building extension "sklearn.linear_model.sag_fast" sources
    building extension "sklearn._isotonic" sources
    building data_files sources
    build_src: building npy-pkg config files
    writing scikit_learn.egg-info/PKG-INFO
    writing dependency_links to scikit_learn.egg-info/dependency_links.txt
    writing requirements to scikit_learn.egg-info/requires.txt
    writing top-level names to scikit_learn.egg-info/top_level.txt
    reading manifest file 'scikit_learn.egg-info/SOURCES.txt'
    reading manifest template 'MANIFEST.in'
    adding license file 'COPYING'
    writing manifest file 'scikit_learn.egg-info/SOURCES.txt'
    running build_ext
    customize UnixCCompiler
    customize UnixCCompiler using build_clib
    customize UnixCCompiler
    customize UnixCCompiler using build_ext_subclass
    customize UnixCCompiler
    customize UnixCCompiler using build_ext_subclass
    Creating /opt/miniconda3/envs/testbed/lib/python3.6/site-packages/scikit-learn.egg-link (link to .)
    Adding scikit-learn 0.22.dev0 to easy-install.pth file

    Installed /testbed
    Partial import of sklearn during the build process.
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
Successfully installed scikit-learn-0.22.dev0
+ git checkout a5743ed36fbd3fbc8e351bdab16561fbfca7dfa1 sklearn/linear_model/tests/test_logistic.py
Updated 0 paths from 7d7295340
+ git apply -v -
Checking patch sklearn/linear_model/tests/test_logistic.py...
Applied patch sklearn/linear_model/tests/test_logistic.py cleanly.
+ pytest -rA sklearn/linear_model/tests/test_logistic.py
============================= test session starts ==============================
platform linux -- Python 3.6.13, pytest-6.2.4, py-1.11.0, pluggy-0.13.1
rootdir: /testbed, configfile: setup.cfg
collected 175 items

sklearn/linear_model/tests/test_logistic.py ............................ [ 16%]
........................................................................ [ 57%]
........................................................................ [ 98%]
...                                                                      [100%]

==================================== PASSES ====================================
=========================== short test summary info ============================
PASSED sklearn/linear_model/tests/test_logistic.py::test_predict_2_classes
PASSED sklearn/linear_model/tests/test_logistic.py::test_error
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_mock_scorer
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_score_does_not_warn_by_default
PASSED sklearn/linear_model/tests/test_logistic.py::test_lr_liblinear_warning
PASSED sklearn/linear_model/tests/test_logistic.py::test_predict_3_classes
PASSED sklearn/linear_model/tests/test_logistic.py::test_predict_iris
PASSED sklearn/linear_model/tests/test_logistic.py::test_multinomial_validation[lbfgs]
PASSED sklearn/linear_model/tests/test_logistic.py::test_multinomial_validation[newton-cg]
PASSED sklearn/linear_model/tests/test_logistic.py::test_multinomial_validation[sag]
PASSED sklearn/linear_model/tests/test_logistic.py::test_multinomial_validation[saga]
PASSED sklearn/linear_model/tests/test_logistic.py::test_check_solver_option[LogisticRegression]
PASSED sklearn/linear_model/tests/test_logistic.py::test_check_solver_option[LogisticRegressionCV]
PASSED sklearn/linear_model/tests/test_logistic.py::test_multinomial_binary[lbfgs]
PASSED sklearn/linear_model/tests/test_logistic.py::test_multinomial_binary[newton-cg]
PASSED sklearn/linear_model/tests/test_logistic.py::test_multinomial_binary[sag]
PASSED sklearn/linear_model/tests/test_logistic.py::test_multinomial_binary[saga]
PASSED sklearn/linear_model/tests/test_logistic.py::test_multinomial_binary_probabilities
PASSED sklearn/linear_model/tests/test_logistic.py::test_sparsify
PASSED sklearn/linear_model/tests/test_logistic.py::test_inconsistent_input
PASSED sklearn/linear_model/tests/test_logistic.py::test_write_parameters
PASSED sklearn/linear_model/tests/test_logistic.py::test_nan
PASSED sklearn/linear_model/tests/test_logistic.py::test_consistency_path
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_path_convergence_fail
PASSED sklearn/linear_model/tests/test_logistic.py::test_liblinear_dual_random_state
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_loss_and_grad
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_grad_hess
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_cv
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]
PASSED sklearn/linear_model/tests/test_logistic.py::test_multinomial_logistic_regression_string_inputs
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_sparse
PASSED sklearn/linear_model/tests/test_logistic.py::test_intercept_logistic_helper
PASSED sklearn/linear_model/tests/test_logistic.py::test_ovr_multinomial_iris
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_solvers
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_solvers_multiclass
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_regressioncv_class_weights
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_sample_weights
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_class_weights
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multinomial
PASSED sklearn/linear_model/tests/test_logistic.py::test_multinomial_grad_hess
PASSED sklearn/linear_model/tests/test_logistic.py::test_liblinear_decision_function_zero
PASSED sklearn/linear_model/tests/test_logistic.py::test_liblinear_logregcv_sparse
PASSED sklearn/linear_model/tests/test_logistic.py::test_saga_sparse
PASSED sklearn/linear_model/tests/test_logistic.py::test_logreg_intercept_scaling
PASSED sklearn/linear_model/tests/test_logistic.py::test_logreg_intercept_scaling_zero
PASSED sklearn/linear_model/tests/test_logistic.py::test_logreg_l1
PASSED sklearn/linear_model/tests/test_logistic.py::test_logreg_l1_sparse_data
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_cv_refit[l1-42]
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_cv_refit[l2-42]
PASSED sklearn/linear_model/tests/test_logistic.py::test_logreg_predict_proba_multinomial
PASSED sklearn/linear_model/tests/test_logistic.py::test_max_iter
PASSED sklearn/linear_model/tests/test_logistic.py::test_n_iter[newton-cg]
PASSED sklearn/linear_model/tests/test_logistic.py::test_n_iter[liblinear]
PASSED sklearn/linear_model/tests/test_logistic.py::test_n_iter[sag]
PASSED sklearn/linear_model/tests/test_logistic.py::test_n_iter[saga]
PASSED sklearn/linear_model/tests/test_logistic.py::test_n_iter[lbfgs]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-True-True-newton-cg]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-True-True-sag]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-True-True-saga]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-True-True-lbfgs]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-True-False-newton-cg]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-True-False-sag]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-True-False-saga]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-True-False-lbfgs]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-False-True-newton-cg]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-False-True-sag]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-False-True-saga]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-False-True-lbfgs]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-False-False-newton-cg]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-False-False-sag]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-False-False-saga]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[ovr-False-False-lbfgs]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-True-True-newton-cg]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-True-True-sag]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-True-True-saga]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-True-True-lbfgs]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-True-False-newton-cg]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-True-False-sag]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-True-False-saga]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-True-False-lbfgs]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-False-True-newton-cg]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-False-True-sag]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-False-True-saga]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-False-True-lbfgs]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-False-False-newton-cg]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-False-False-sag]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-False-False-saga]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start[multinomial-False-False-lbfgs]
PASSED sklearn/linear_model/tests/test_logistic.py::test_saga_vs_liblinear
PASSED sklearn/linear_model/tests/test_logistic.py::test_dtype_match[newton-cg-ovr]
PASSED sklearn/linear_model/tests/test_logistic.py::test_dtype_match[newton-cg-multinomial]
PASSED sklearn/linear_model/tests/test_logistic.py::test_dtype_match[saga-ovr]
PASSED sklearn/linear_model/tests/test_logistic.py::test_dtype_match[saga-multinomial]
PASSED sklearn/linear_model/tests/test_logistic.py::test_warm_start_converge_LR
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_coeffs
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l1-1-0.001]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l1-1-0.1]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l1-1-1]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l1-1-10]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l1-1-100]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l1-1-1000]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l2-0-0.001]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l2-0-0.1]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l2-0-1]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l2-0-10]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l2-0-100]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l2-0-1000]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_vs_l1_l2[0.001]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_vs_l1_l2[1]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_vs_l1_l2[100]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_vs_l1_l2[1000000.0]
PASSED sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.1-0.001]
PASSED sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]
PASSED sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]
PASSED sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.1-100.0]
PASSED sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.5-0.001]
PASSED sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]
PASSED sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]
PASSED sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.5-100.0]
PASSED sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.9-0.001]
PASSED sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]
PASSED sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]
PASSED sklearn/linear_model/tests/test_logistic.py::test_LogisticRegression_elastic_net_objective[0.9-100.0]
PASSED sklearn/linear_model/tests/test_logistic.py::test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]
PASSED sklearn/linear_model/tests/test_logistic.py::test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]
PASSED sklearn/linear_model/tests/test_logistic.py::test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr
PASSED sklearn/linear_model/tests/test_logistic.py::test_LogisticRegressionCV_no_refit[ovr-l2]
PASSED sklearn/linear_model/tests/test_logistic.py::test_LogisticRegressionCV_no_refit[ovr-elasticnet]
PASSED sklearn/linear_model/tests/test_logistic.py::test_LogisticRegressionCV_no_refit[multinomial-l2]
PASSED sklearn/linear_model/tests/test_logistic.py::test_LogisticRegressionCV_no_refit[multinomial-elasticnet]
PASSED sklearn/linear_model/tests/test_logistic.py::test_LogisticRegressionCV_no_refit[auto-l2]
PASSED sklearn/linear_model/tests/test_logistic.py::test_LogisticRegressionCV_no_refit[auto-elasticnet]
PASSED sklearn/linear_model/tests/test_logistic.py::test_LogisticRegressionCV_elasticnet_attribute_shapes
PASSED sklearn/linear_model/tests/test_logistic.py::test_l1_ratio_param[-1]
PASSED sklearn/linear_model/tests/test_logistic.py::test_l1_ratio_param[2]
PASSED sklearn/linear_model/tests/test_logistic.py::test_l1_ratio_param[None]
PASSED sklearn/linear_model/tests/test_logistic.py::test_l1_ratio_param[something_wrong]
PASSED sklearn/linear_model/tests/test_logistic.py::test_l1_ratios_param[l1_ratios0]
PASSED sklearn/linear_model/tests/test_logistic.py::test_l1_ratios_param[l1_ratios1]
PASSED sklearn/linear_model/tests/test_logistic.py::test_l1_ratios_param[None]
PASSED sklearn/linear_model/tests/test_logistic.py::test_l1_ratios_param[something_wrong]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.1-0.001]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.1-0.046415888336127795]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.1-2.1544346900318843]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.1-100.0]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.5-0.001]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.5-0.046415888336127795]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.5-2.1544346900318843]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.5-100.0]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.9-0.001]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.9-0.046415888336127795]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.9-2.1544346900318843]
PASSED sklearn/linear_model/tests/test_logistic.py::test_elastic_net_versus_sgd[0.9-100.0]
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_path_coefs_multinomial
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multi_class_auto[liblinear-est0]
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multi_class_auto[liblinear-est1]
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multi_class_auto[lbfgs-est0]
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multi_class_auto[lbfgs-est1]
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multi_class_auto[newton-cg-est0]
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multi_class_auto[newton-cg-est1]
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multi_class_auto[sag-est0]
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multi_class_auto[sag-est1]
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multi_class_auto[saga-est0]
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multi_class_auto[saga-est1]
PASSED sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_path_deprecation
PASSED sklearn/linear_model/tests/test_logistic.py::test_penalty_none[lbfgs]
PASSED sklearn/linear_model/tests/test_logistic.py::test_penalty_none[newton-cg]
PASSED sklearn/linear_model/tests/test_logistic.py::test_penalty_none[sag]
PASSED sklearn/linear_model/tests/test_logistic.py::test_penalty_none[saga]
====================== 175 passed, 449 warnings in 17.42s ======================
 This problem is unconstrained.
RUNNING THE L-BFGS-B CODE

           * * *

Machine precision = 2.220D-16
 N =            3     M =           10

At X0         0 variables are exactly at the bounds

At iterate    0    f=  1.38629D+02    |proj g|=  6.27865D+01

           * * *

Tit   = total number of iterations
Tnf   = total number of function evaluations
Tnint = total number of segments explored during Cauchy searches
Skip  = number of BFGS updates skipped
Nact  = number of active bounds at final generalized Cauchy point
Projg = norm of the final projected gradient
F     = final function value

           * * *

   N    Tit     Tnf  Tnint  Skip  Nact     Projg        F
    3      1      2      1     0     0   2.422D+01   9.713D+01
  F =   97.133816163368223     

STOP: TOTAL NO. of ITERATIONS REACHED LIMIT                 
+ git checkout a5743ed36fbd3fbc8e351bdab16561fbfca7dfa1 sklearn/linear_model/tests/test_logistic.py
Updated 1 path from 7d7295340
