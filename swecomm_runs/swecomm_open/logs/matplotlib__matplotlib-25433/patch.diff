diff --git a/.backup.test_range_slider.py b/.backup.test_range_slider.py
new file mode 100644
index 0000000000..b5c9ac3f77
--- /dev/null
+++ b/.backup.test_range_slider.py
@@ -0,0 +1,30 @@
+
+import matplotlib.pyplot as plt
+import matplotlib.widgets as widgets
+
+def onchanged(values):
+    print("on changed")
+    print(values)
+    plt.clf()
+    addElements()
+    plt.draw()
+
+def onclick(e):
+    print("on click")
+    plt.clf()
+    addElements()
+    plt.draw()
+
+def addElements():
+    ax = plt.axes([0.1, 0.45, 0.8, 0.1])
+    global slider
+    slider = widgets.RangeSlider(ax, "Test", valmin=1, valmax=10, valinit=(1, 10))
+    slider.on_changed(onchanged)
+    ax = plt.axes([0.1, 0.30, 0.8, 0.1])
+    global button
+    button = widgets.Button(ax, "Test")
+    button.on_clicked(onclick)
+
+addElements()
+
+plt.show()
diff --git a/test_range_slider.py b/test_range_slider.py
new file mode 100644
index 0000000000..c86b5e1ecf
--- /dev/null
+++ b/test_range_slider.py
@@ -0,0 +1,34 @@
+
+import matplotlib.pyplot as plt
+import matplotlib.widgets as widgets
+
+fig, (slider_ax, button_ax) = plt.subplots(2, 1, figsize=(8, 4))
+plt.subplots_adjust(left=0.1, bottom=0.2, right=0.9, top=0.9, hspace=0.4)
+
+def onchanged(values):
+    print("on changed")
+    print(values)
+    update_plot()
+
+def onclick(event):
+    print("on click")
+    update_plot()
+
+def update_plot():
+    plt.sca(fig.axes[2])  # Select the plot axis
+    plt.cla()  # Clear only the plot axis
+    plt.plot(range(int(slider.val[0]), int(slider.val[1]) + 1))
+    plt.draw()
+
+slider_ax.set_position([0.1, 0.6, 0.8, 0.1])
+slider = widgets.RangeSlider(slider_ax, "Range", valmin=1, valmax=10, valinit=(1, 10))
+slider.on_changed(onchanged)
+
+button_ax.set_position([0.1, 0.4, 0.8, 0.1])
+button = widgets.Button(button_ax, "Update")
+button.on_clicked(onclick)
+
+plt.axes([0.1, 0.1, 0.8, 0.2])  # Add a new axis for the plot
+update_plot()  # Initial plot
+
+plt.show()
