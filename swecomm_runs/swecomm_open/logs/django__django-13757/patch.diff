diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py
index 29c6ff0926..e0a3260e23 100644
--- a/django/db/models/fields/json.py
+++ b/django/db/models/fields/json.py
@@ -368,12 +368,16 @@ class KeyTransformIsNull(lookups.IsNull):
     def as_oracle(self, compiler, connection):
         if not self.rhs:
             return HasKey(self.lhs.lhs, self.lhs.key_name).as_oracle(compiler, connection)
-        return super().as_sql(compiler, connection)
+        lhs, lhs_params = self.lhs.preprocess_lhs(compiler, connection)
+        sql = f"NOT EXISTS(SELECT 1 FROM JSON_TABLE({lhs}, '$' COLUMNS ({self.lhs.key_name} VARCHAR2(4000) PATH '$.{self.lhs.key_name}')) WHERE {self.lhs.key_name} IS NOT NULL)"
+        return sql, lhs_params
 
     def as_sqlite(self, compiler, connection):
         if not self.rhs:
             return HasKey(self.lhs.lhs, self.lhs.key_name).as_sqlite(compiler, connection)
-        return super().as_sql(compiler, connection)
+        lhs, lhs_params = self.lhs.preprocess_lhs(compiler, connection)
+        sql = f"NOT EXISTS(SELECT 1 FROM json_each({lhs}, '$.{self.lhs.key_name}') WHERE json_valid(value) AND value IS NOT NULL)"
+        return sql, lhs_params
 
 
 class KeyTransformIn(lookups.In):
