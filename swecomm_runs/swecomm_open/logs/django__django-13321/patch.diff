diff --git a/django/contrib/sessions/backends/base.py b/django/contrib/sessions/backends/base.py
index 187e14b1b7..096c94dbc2 100644
--- a/django/contrib/sessions/backends/base.py
+++ b/django/contrib/sessions/backends/base.py
@@ -1,4 +1,5 @@
 import base64
+import binascii
 import logging
 import string
 import warnings
@@ -121,7 +122,7 @@ class SessionBase:
             return signing.loads(session_data, salt=self.key_salt, serializer=self.serializer)
         # RemovedInDjango40Warning: when the deprecation ends, handle here
         # exceptions similar to what _legacy_decode() does now.
-        except Exception:
+        except (Exception, binascii.Error):
             return self._legacy_decode(session_data)
 
     def _legacy_encode(self, session_dict):
@@ -141,7 +142,7 @@ class SessionBase:
                 raise SuspiciousSession("Session data corrupted")
             else:
                 return self.serializer().loads(serialized)
-        except Exception as e:
+        except (Exception, binascii.Error) as e:
             # ValueError, SuspiciousOperation, unpickling exceptions. If any of
             # these happen, just return an empty dictionary (an empty session).
             if isinstance(e, SuspiciousOperation):
