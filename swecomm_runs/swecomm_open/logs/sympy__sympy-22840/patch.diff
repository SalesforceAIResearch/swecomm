diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py
index d649dd02a9..563fc5ae6e 100644
--- a/sympy/simplify/cse_main.py
+++ b/sympy/simplify/cse_main.py
@@ -774,6 +774,7 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None,
     """
     from sympy.matrices import (MatrixBase, Matrix, ImmutableMatrix,
                                 SparseMatrix, ImmutableSparseMatrix)
+    from sympy.matrices.expressions import MatrixSymbol
 
     if not list:
         return _cse_homogeneous(exprs,
@@ -790,7 +791,9 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None,
     copy = exprs
     temp = []
     for e in exprs:
-        if isinstance(e, (Matrix, ImmutableMatrix)):
+        if isinstance(e, MatrixSymbol):
+            temp.append(e)
+        elif isinstance(e, (Matrix, ImmutableMatrix)):
             temp.append(Tuple(*e.flat()))
         elif isinstance(e, (SparseMatrix, ImmutableSparseMatrix)):
             temp.append(Tuple(*e.todok().items()))
@@ -829,9 +832,12 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None,
     reduced_exprs = [postprocess_for_cse(e, optimizations)
                      for e in reduced_exprs]
 
-    # Get the matrices back
+    # Get the matrices and matrix symbols back
     for i, e in enumerate(exprs):
-        if isinstance(e, (Matrix, ImmutableMatrix)):
+        if isinstance(e, MatrixSymbol):
+            rows, cols = e.shape
+            reduced_exprs[i] = MatrixSymbol(e.name, rows, cols)
+        elif isinstance(e, (Matrix, ImmutableMatrix)):
             reduced_exprs[i] = Matrix(e.rows, e.cols, reduced_exprs[i])
             if isinstance(e, ImmutableMatrix):
                 reduced_exprs[i] = reduced_exprs[i].as_immutable()
