diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py
index d17232e4ec..10496c3f5f 100644
--- a/django/db/migrations/operations/models.py
+++ b/django/db/migrations/operations/models.py
@@ -970,19 +970,21 @@ class RenameIndex(IndexOperation):
             # Backward operation with unnamed index is a no-op.
             return
 
-        self.new_name_lower, self.old_name_lower = (
-            self.old_name_lower,
-            self.new_name_lower,
-        )
-        self.new_name, self.old_name = self.old_name, self.new_name
+        model = to_state.apps.get_model(app_label, self.model_name)
+        if not self.allow_migrate_model(schema_editor.connection.alias, model):
+            return
 
-        self.database_forwards(app_label, schema_editor, from_state, to_state)
+        new_index = from_state.models[app_label, self.model_name_lower].get_index_by_name(self.new_name)
+        old_index = to_state.models[app_label, self.model_name_lower].get_index_by_name(self.old_name)
 
-        self.new_name_lower, self.old_name_lower = (
-            self.old_name_lower,
-            self.new_name_lower,
-        )
-        self.new_name, self.old_name = self.old_name, self.new_name
+        if old_index is None:
+            # The old index name didn't exist, so it was an auto-generated name.
+            # We need to restore the old auto-generated name.
+            columns = [model._meta.get_field(field).column for field in new_index.fields]
+            old_index_name = schema_editor._create_index_name(model, columns, suffix="_idx")
+            old_index = models.Index(fields=new_index.fields, name=old_index_name)
+
+        schema_editor.rename_index(model, new_index, old_index)
 
     def describe(self):
         if self.old_name:
