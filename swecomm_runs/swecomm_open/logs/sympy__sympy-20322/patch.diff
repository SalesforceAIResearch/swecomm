diff --git a/sympy/core/sympify.py b/sympy/core/sympify.py
index 9cc4fec441..2e4412ac71 100644
--- a/sympy/core/sympify.py
+++ b/sympy/core/sympify.py
@@ -91,6 +91,8 @@ def _convert_numpy_types(a, **sympify_args):
 
 def sympify(a, locals=None, convert_xor=True, strict=False, rational=False,
         evaluate=None):
+    if evaluate is None:
+        evaluate = global_parameters.evaluate
     """
     Converts an arbitrary expression to a type that can be used inside SymPy.
 
diff --git a/sympy/functions/elementary/integers.py b/sympy/functions/elementary/integers.py
index fe1e71e3f2..7809e28a6d 100644
--- a/sympy/functions/elementary/integers.py
+++ b/sympy/functions/elementary/integers.py
@@ -284,10 +284,14 @@ def _eval_nseries(self, x, n, logx, cdir=0):
             return r
 
     def _eval_rewrite_as_floor(self, arg, **kwargs):
-        return -floor(-arg)
+        if kwargs.get('evaluate', True):
+            return -floor(-arg)
+        return ceiling(arg, evaluate=False)
 
     def _eval_rewrite_as_frac(self, arg, **kwargs):
-        return arg + frac(-arg)
+        if kwargs.get('evaluate', True):
+            return arg + frac(-arg)
+        return ceiling(arg, evaluate=False)
 
     def _eval_is_positive(self):
         return self.args[0].is_positive
