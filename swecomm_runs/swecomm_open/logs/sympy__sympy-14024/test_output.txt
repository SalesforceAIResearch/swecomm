+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   sympy/core/power.py

no changes added to commit (use "git add" and/or "git commit -a")
+ git show
commit b17abcb09cbcee80a90f6750e0f9b53f0247656c
Merge: 1e8b5da3ed 658e976d11
Author: Chris Smith <smichr@gmail.com>
Date:   Thu Jan 25 22:05:05 2018 -0600

    Merge pull request #13836 from vishalg2235/invmatmat
    
    Attribute inv() added in matexpr.py

+ git diff b17abcb09cbcee80a90f6750e0f9b53f0247656c
diff --git a/sympy/core/power.py b/sympy/core/power.py
index 02ec6480cb..dc926950d0 100644
--- a/sympy/core/power.py
+++ b/sympy/core/power.py
@@ -286,6 +286,13 @@ def __new__(cls, b, e, evaluate=None):
                 obj = b._eval_power(e)
                 if obj is not None:
                     return obj
+
+                # Handle case where base is negative and exponent is rational
+                if b.is_negative and e.is_rational and not e.is_integer:
+                    from sympy import I, re, im, exp, log, polar_lift
+                    r, theta = polar_lift(-b).as_polar()
+                    return exp(e * (log(r) + I * (theta + 2 * S.Pi * im(e))))
+
         obj = Expr.__new__(cls, b, e)
         obj = cls._exec_constructor_postprocessors(obj)
         if not isinstance(obj, Pow):
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Requirement already satisfied: mpmath>=0.19 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from sympy==1.1.2.dev0) (1.3.0)
Installing collected packages: sympy
  Attempting uninstall: sympy
    Found existing installation: sympy 1.1.2.dev0
    Uninstalling sympy-1.1.2.dev0:
      Successfully uninstalled sympy-1.1.2.dev0
  Running setup.py develop for sympy
Successfully installed sympy-1.1.2.dev0
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
+ git checkout b17abcb09cbcee80a90f6750e0f9b53f0247656c sympy/core/tests/test_numbers.py
Updated 0 paths from fc69010076
+ git apply -v -
Checking patch sympy/core/tests/test_numbers.py...
Applied patch sympy/core/tests/test_numbers.py cleanly.
+ PYTHONWARNINGS=ignore::UserWarning,ignore::SyntaxWarning
+ bin/test -C --verbose sympy/core/tests/test_numbers.py
/testbed/sympy/core/basic.py:3: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  from collections import Mapping, defaultdict
/testbed/sympy/core/containers.py:271: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  class OrderedSet(collections.MutableSet):
/testbed/sympy/plotting/plot.py:28: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  from collections import Callable
/testbed/sympy/core/basic.py:3: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  from collections import Mapping, defaultdict
/testbed/sympy/core/containers.py:271: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  class OrderedSet(collections.MutableSet):
/testbed/sympy/plotting/plot.py:28: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  from collections import Callable
============================= test process starts ==============================
executable:         /opt/miniconda3/envs/testbed/bin/python  (3.9.19-final-0) [CPython]
architecture:       64-bit
cache:              no
ground types:       python 
numpy:              None
random seed:        72464202
hash randomization: on (PYTHONHASHSEED=2721530121)

sympy/core/tests/test_numbers.py[87] 
test_integers_cache ok
test_seterr ok
test_mod ok
test_divmod ok
test_igcd ok
test_igcd_lehmer ok
test_igcd2 ok
test_ilcm ok
test_igcdex ok
test_Integer_new ok
test_Rational_new ok
test_Number_new ok
test_Rational_cmp ok
test_Float ok
test_float_mpf ok
test_Float_RealElement ok
test_Float_default_to_highprec_from_str ok
test_Float_eval ok
test_Float_issue_2107 ok
test_Float_from_tuple ok
test_Infinity ok
test_Infinity_2 ok
test_Mul_Infinity_Zero ok
test_Div_By_Zero ok
test_Infinity_inequations ok
test_NaN ok
test_special_numbers ok
test_powers ok
test_integer_nthroot_overflow ok
test_integer_log ok
test_isqrt ok
test_powers_Integer E
test_powers_Rational E
test_powers_Float E
test_abs1 ok
test_accept_int ok
test_dont_accept_str ok
test_int E
test_long ok
test_real_bug ok
test_bug_sqrt ok
test_pi_Pi ok
test_no_len ok
test_issue_3321 ok
test_issue_3692 E
test_issue_3423 ok
test_issue_3449 ok
test_issue_13890 E
test_Integer_factors ok
test_Rational_factors ok
test_issue_4107 ok
test_IntegerInteger ok
test_Rational_gcd_lcm_cofactors ok
test_Float_gcd_lcm_cofactors ok
test_issue_4611 ok
test_conversion_to_mpmath ok
test_relational ok
test_Integer_as_index ok
test_Rational_int ok
test_zoo ok
test_issue_4122 ok
test_GoldenRatio_expand ok
test_as_content_primitive ok
test_hashing_sympy_integers ok
test_issue_4172 ok
test_mpmath_issues f
test_Catalan_EulerGamma_prec ok
test_Float_eq ok
test_int_NumberSymbols ok
test_issue_6640 ok
test_issue_6349 ok
test_mpf_norm ok
test_latex ok
test_issue_7742 ok
test_simplify_AlgebraicNumber ok
test_Float_idempotence ok
test_comp ok
test_issue_9491 ok
test_issue_10063 ok
test_issue_10020 ok
test_invert_numbers ok
test_mod_inverse ok
test_golden_ratio_rewrite_as_sqrt ok
test_comparisons_with_unknown_type ok
test_NumberSymbol_comparison ok
test_Integer_precision ok
test_numpy_to_float numpy not installed. Abort numpy tests. s             [FAIL]


________________________________________________________________________________
_____________ sympy/core/tests/test_numbers.py:test_powers_Integer _____________
  File "/testbed/sympy/core/tests/test_numbers.py", line 1000, in test_powers_Integer
    assert S(-1) ** Rational(6, 5) == - (-1)**(S(1)/5)
  File "/testbed/sympy/core/expr.py", line 154, in __pow__
    return self._pow(other)
  File "/testbed/sympy/core/decorators.py", line 91, in __sympifyit_wrapper
    return func(a, b)
  File "/testbed/sympy/core/decorators.py", line 132, in binary_op_wrapper
    return func(self, other)
  File "/testbed/sympy/core/expr.py", line 150, in _pow
    return Pow(self, other)
  File "/testbed/sympy/core/power.py", line 286, in __new__
    obj = b._eval_power(e)
  File "/testbed/sympy/core/numbers.py", line 2634, in _eval_power
    return self**i*self**Rational(r, expt.q)
  File "/testbed/sympy/core/expr.py", line 154, in __pow__
    return self._pow(other)
  File "/testbed/sympy/core/decorators.py", line 91, in __sympifyit_wrapper
    return func(a, b)
  File "/testbed/sympy/core/decorators.py", line 132, in binary_op_wrapper
    return func(self, other)
  File "/testbed/sympy/core/expr.py", line 150, in _pow
    return Pow(self, other)
  File "/testbed/sympy/core/power.py", line 293, in __new__
    r, theta = polar_lift(-b).as_polar()
AttributeError: 'exp_polar' object has no attribute 'as_polar'
________________________________________________________________________________
____________ sympy/core/tests/test_numbers.py:test_powers_Rational _____________
  File "/testbed/sympy/core/tests/test_numbers.py", line 1124, in test_powers_Rational
    assert Rational(-3, 2)**Rational(-7, 3) == \
  File "/testbed/sympy/core/expr.py", line 154, in __pow__
    return self._pow(other)
  File "/testbed/sympy/core/decorators.py", line 91, in __sympifyit_wrapper
    return func(a, b)
  File "/testbed/sympy/core/decorators.py", line 132, in binary_op_wrapper
    return func(self, other)
  File "/testbed/sympy/core/expr.py", line 150, in _pow
    return Pow(self, other)
  File "/testbed/sympy/core/power.py", line 286, in __new__
    obj = b._eval_power(e)
  File "/testbed/sympy/core/numbers.py", line 1682, in _eval_power
    return -(S.NegativeOne)**((expt.p % expt.q) /
  File "/testbed/sympy/core/expr.py", line 154, in __pow__
    return self._pow(other)
  File "/testbed/sympy/core/decorators.py", line 91, in __sympifyit_wrapper
    return func(a, b)
  File "/testbed/sympy/core/decorators.py", line 132, in binary_op_wrapper
    return func(self, other)
  File "/testbed/sympy/core/expr.py", line 150, in _pow
    return Pow(self, other)
  File "/testbed/sympy/core/power.py", line 293, in __new__
    r, theta = polar_lift(-b).as_polar()
AttributeError: 'exp_polar' object has no attribute 'as_polar'
________________________________________________________________________________
______________ sympy/core/tests/test_numbers.py:test_powers_Float ______________
  File "/testbed/sympy/core/tests/test_numbers.py", line 1143, in test_powers_Float
    assert str((S('-1/10')**S('3/10')).n()) == str(Float(-.1)**(.3))
  File "/testbed/sympy/core/expr.py", line 154, in __pow__
    return self._pow(other)
  File "/testbed/sympy/core/decorators.py", line 91, in __sympifyit_wrapper
    return func(a, b)
  File "/testbed/sympy/core/decorators.py", line 132, in binary_op_wrapper
    return func(self, other)
  File "/testbed/sympy/core/expr.py", line 150, in _pow
    return Pow(self, other)
  File "/testbed/sympy/core/power.py", line 286, in __new__
    obj = b._eval_power(e)
  File "/testbed/sympy/core/numbers.py", line 1702, in _eval_power
    return Integer(self.p)**expt*Integer(self.q)**(-expt)
  File "/testbed/sympy/core/expr.py", line 154, in __pow__
    return self._pow(other)
  File "/testbed/sympy/core/decorators.py", line 91, in __sympifyit_wrapper
    return func(a, b)
  File "/testbed/sympy/core/decorators.py", line 132, in binary_op_wrapper
    return func(self, other)
  File "/testbed/sympy/core/expr.py", line 150, in _pow
    return Pow(self, other)
  File "/testbed/sympy/core/power.py", line 293, in __new__
    r, theta = polar_lift(-b).as_polar()
AttributeError: 'exp_polar' object has no attribute 'as_polar'
________________________________________________________________________________
__________________ sympy/core/tests/test_numbers.py:test_int ___________________
  File "/testbed/sympy/core/tests/test_numbers.py", line 1165, in test_int
    assert 1/(-1)**Rational(2, 3) == -(-1)**Rational(1, 3)
  File "/testbed/sympy/core/decorators.py", line 91, in __sympifyit_wrapper
    return func(a, b)
  File "/testbed/sympy/core/decorators.py", line 132, in binary_op_wrapper
    return func(self, other)
  File "/testbed/sympy/core/expr.py", line 172, in __rpow__
    return Pow(other, self)
  File "/testbed/sympy/core/power.py", line 293, in __new__
    r, theta = polar_lift(-b).as_polar()
AttributeError: 'exp_polar' object has no attribute 'as_polar'
________________________________________________________________________________
_______________ sympy/core/tests/test_numbers.py:test_issue_3692 _______________
  File "/testbed/sympy/core/tests/test_numbers.py", line 1215, in test_issue_3692
    assert ((-1)**Rational(1, 6)).expand(complex=True) == I/2 + sqrt(3)/2
  File "/testbed/sympy/core/decorators.py", line 91, in __sympifyit_wrapper
    return func(a, b)
  File "/testbed/sympy/core/decorators.py", line 132, in binary_op_wrapper
    return func(self, other)
  File "/testbed/sympy/core/expr.py", line 172, in __rpow__
    return Pow(other, self)
  File "/testbed/sympy/core/power.py", line 293, in __new__
    r, theta = polar_lift(-b).as_polar()
AttributeError: 'exp_polar' object has no attribute 'as_polar'
________________________________________________________________________________
______________ sympy/core/tests/test_numbers.py:test_issue_13890 _______________
  File "/testbed/sympy/core/tests/test_numbers.py", line 1237, in test_issue_13890
    assert abs(e.subs(x,a).evalf() - f.subs(x,a).evalf()) < 1e-15
  File "/testbed/sympy/core/basic.py", line 920, in subs
    rv = rv._subs(old, new, **kwargs)
  File "/testbed/sympy/core/basic.py", line 1034, in _subs
    rv = fallback(self, old, new)
  File "/testbed/sympy/core/basic.py", line 1006, in fallback
    arg = arg._subs(old, new, **hints)
  File "/testbed/sympy/core/basic.py", line 1034, in _subs
    rv = fallback(self, old, new)
  File "/testbed/sympy/core/basic.py", line 1011, in fallback
    rv = self.func(*args)
  File "/testbed/sympy/core/power.py", line 286, in __new__
    obj = b._eval_power(e)
  File "/testbed/sympy/core/numbers.py", line 1702, in _eval_power
    return Integer(self.p)**expt*Integer(self.q)**(-expt)
  File "/testbed/sympy/core/expr.py", line 154, in __pow__
    return self._pow(other)
  File "/testbed/sympy/core/decorators.py", line 91, in __sympifyit_wrapper
    return func(a, b)
  File "/testbed/sympy/core/decorators.py", line 132, in binary_op_wrapper
    return func(self, other)
  File "/testbed/sympy/core/expr.py", line 150, in _pow
    return Pow(self, other)
  File "/testbed/sympy/core/power.py", line 286, in __new__
    obj = b._eval_power(e)
  File "/testbed/sympy/core/numbers.py", line 2288, in _eval_power
    result *= Pow(S.NegativeOne, expt)
  File "/testbed/sympy/core/power.py", line 286, in __new__
    obj = b._eval_power(e)
  File "/testbed/sympy/core/numbers.py", line 2634, in _eval_power
    return self**i*self**Rational(r, expt.q)
  File "/testbed/sympy/core/expr.py", line 154, in __pow__
    return self._pow(other)
  File "/testbed/sympy/core/decorators.py", line 91, in __sympifyit_wrapper
    return func(a, b)
  File "/testbed/sympy/core/decorators.py", line 132, in binary_op_wrapper
    return func(self, other)
  File "/testbed/sympy/core/expr.py", line 150, in _pow
    return Pow(self, other)
  File "/testbed/sympy/core/power.py", line 293, in __new__
    r, theta = polar_lift(-b).as_polar()
AttributeError: 'exp_polar' object has no attribute 'as_polar'

 tests finished: 79 passed, 1 skipped, 1 expected to fail, 6 exceptions, 
in 1.32 seconds 
DO *NOT* COMMIT!
+ git checkout b17abcb09cbcee80a90f6750e0f9b53f0247656c sympy/core/tests/test_numbers.py
Updated 1 path from fc69010076
